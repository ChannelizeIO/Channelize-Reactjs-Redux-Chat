{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"channelize-chat\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"moment\"","webpack:///external \"immer\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///external \"lodash/throttle\"","webpack:///external \"prop-types\"","webpack:///external \"lodash/debounce\"","webpack:///external \"redux-thunk\"","webpack:///external \"redux-logger\"","webpack:///external \"remote-redux-devtools\"","webpack:///./src/constants.js","webpack:///./src/actions/clientActions.js","webpack:///./src/actions/conversationActions.js","webpack:///./src/actions/messageActions.js","webpack:///./src/context.js","webpack:///./src/components/App.js","webpack:///./src/components/Header.js","webpack:///./src/components/Launcher.js","webpack:///./src/components/Loader.js","webpack:///./src/utils/index.js","webpack:///./src/components/ConversationItem.js","webpack:///./src/components/ConversationList.js","webpack:///./src/components/MessageSimple.js","webpack:///./src/components/ConversationWindow.js","webpack:///./src/components/MessageLivestream.js","webpack:///./src/components/SearchWindow.js","webpack:///./src/actions/userActions.js","webpack:///./src/reducers/clientReducer.js","webpack:///./src/reducers/conversationReducer.js","webpack:///./src/reducers/messageReducer.js","webpack:///./src/reducers/userReducer.js","webpack:///./src/reducers/index.js","webpack:///./src/store/index.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","LANGUAGE_PHRASES","IMAGES","connectSuccess","dispatch","response","type","payload","connectFail","error","setActiveConversation","conversation","setActiveUserId","userId","ChannelizeContext","React","createContext","client","ChannelizeProvider","Provider","withChannelizeContext","OriginalComponent","getContextAwareComponent","context","originalComponent","Context","ContextAwareComponent","props","Consumer","themePath","extraThemePaths","displayName","replace","App","state","this","accessToken","connected","setConnected","chConnect","prevProps","registerEventHandlers","getContext","children","PureComponent","connect","Promise","resolve","reject","res","_connect","then","catch","chsocket","on","Conversation","getConversation","id","err","Header","setState","showDropDownList","title","subtitle","profileImageUrl","showArrowBack","onBack","showChevron","renderDropDownList","renderRight","className","onClick","style","backgroundImage","toggleDropDownList","Launcher","src","alt","Loader","createReducer","initialState","actionsMap","action","produce","draft","caseReducer","undefined","uniqueList","list","reduce","uniqList","currentValue","map","item","indexOf","push","setAutoFreeze","modifyConversation","isGroup","user","modifyMessageList","lastMessage","getCurrentUser","forEach","message","ownerId","readByAll","showReadStatus","readByAllMembers","createdAt","Date","now","AMorPMTimeParser","owner","capitalize","isUser","isDeleted","body","length","nextMessage","showOwnerAvatar","isUserLastMessage","isSameUser","prevMessage","showDateSeparator","isSameDay","getLastMessageString","lastMessageString","keys","messageOwnerName","attachments","attachment","lastMessageTimeParser","time","today","todayDate","getDate","todayMonth","getMonth","todayYear","getFullYear","inputDate","inputTimeDate","inputTimeMonth","inputTimeYear","showWeekDay","getDay","hours","getHours","AmOrPm","getMinutes","substr","dateSeparatorParser","currentMessage","diffMessage","currentCreatedAt","diffCreatedAt","x","split","toUpperCase","join","ConversationItem","onSelect","onlineIcon","activeConversation","updatedAt","isOnline","selectConversation","ConversationList","conversationListQuery","createConversationListQuery","limit","skip","getConversationList","onCloseIconClick","onSearchIconClick","onScroll","chRecentListingRef","createRef","_init","loadingMoreConversations","allConversationsLoaded","current","scrollTop","clientHeight","scrollHeight","loadMoreConversations","headerImage","connecting","loading","showSearchIcon","showCloseIcon","ref","MessageSimple","url","link","document","createElement","href","target","appendChild","click","removeChild","download","msgContainerPos","fileMessage","thumbnailUrl","fileUr","showImage","fileUrl","downloadFile","extension","ownerProfileImageUrl","Fragment","Component","ConversationWindow","config","typing_events","markAsRead","chMessageBoxRef","toString","ownProps","dummyConversation","membersExactly","conversations","User","registerConversationEventHandlers","messageListQuery","createMessageListQuery","getMessageList","unreadMessageCount","__isWatching","startWatching","handleChange","handleKeyUp","sendMessage","_markAsRead","throttle","sendMedia","text","offsetTop","offsetBottom","prevState","snapshot","newMessage","loadingMoreMessages","sendingMessage","_scrollToTarget","event","keyCode","preventDefault","file","fileType","shift","sendFileToConversation","sendMessageToConversation","sendMessageToUserId","allMessagesLoaded","loadMoreMessagesAction","sendFile","files","disableComposer","disableComposerMessage","Message","renderHeader","actionButton","headerTitle","headerSubtitle","composerDisabled","moment","lastSeen","fromNow","memberCount","isActive","blockUser","unblockUser","accept","onChange","placeholder","onKeyUp","propTypes","PropTypes","elementType","defaultProps","reverse","attachmentType","createThumbnail","File","upload","fileData","MessageLivestream","SearchWindow","friendsListQuery","createUserListQuery","friendsLimit","sort","getFriendsList","searchLimit","search","searchFriendsAction","moreUsersListQuery","getMoreUsersList","searchText","onContactClick","_searchOnServer","debounce","inputValue","loadingFriendsList","loadingSearchFriends","friendslist","moreUsersList","searchFriends","showMoreUsers","clearSearch","friend","imgUrl","userListQuery","friendsList","loadMoreFriends","usersList","INITIAL_STATE","finalList","index","conversationIndex","latestConversation","conversationId","timestamp","splice","unshift","members","concat","removedMember","findIndex","member","lastReadAt","status","toJSON","Channelize","core","Client","getInstance","Model","jsonConversaton","loadingMoreFriends","allFriendsLoaded","loadingMoreUsersList","combineReducers","conversationReducer","messageReducer","userReducer","middleware","thunk","composedEnhancers","compose","applyMiddleware","store","createStore","rootReducer"],"mappings":"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","file":"dist/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"channelize-chat\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"moment\");","module.exports = require(\"immer\");","module.exports = require(\"@babel/runtime/helpers/extends\");","module.exports = require(\"lodash/throttle\");","module.exports = require(\"prop-types\");","module.exports = require(\"lodash/debounce\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"redux-logger\");","module.exports = require(\"remote-redux-devtools\");","export const LANGUAGE_PHRASES = {\n\tCHAT : \"Chat\",\n\tCLOSE : \"Close\",\n\tONLINE : \"Online\",\n\tNO_CONV_FOUND : \"No conversations found!\",\n\tNO_MESSAGES_FOUND : \"No messages found!\",\n\tDELETED_MEMBER : \"Deleted Member\",\n\tMESSAGE_DELETED : \"This message was deleted\",\n\tLAST_SEEN : \"Last Seen \",\n\tMUTE_CONV : \"Mute Conversation\",\n\tCLEAR_CONV : \"Clear Conversation\",\n\tDELETE_CONV : \"Delete Conversation\",\n\tBLOCK_USER : \"Block User\",\n\tUNBLOCK_USER : \"Unblock User\",\n\tSEND_MESSAGE : \"Send a message\",\n\tDELETE : \"Delete\",\n\tIMAGE : \"Image\",\n\tAUDIO : \"Audio\",\n\tVIDEO : \"Video\",\n\tLOCATION : \"Location\",\n\tSTICKER : \"Sticker\",\n\tGIF : \"GIF\",\n\tSEND_ATTACHMENTS : \"Send Attachments\",\n\tMEMBERS : \"Members\",\n\tFILE_SIZE_WARNING : \"File size should be less then 25mb\",\n\tSEARCH : \"Search\",\n\tSUGGESTED : \"Suggested\",\n\tMORE_USERS : \"More Users\",\n\tLOGIN : \"Login\",\n\tLOGOUT : \"Logout\",\n\tNAME : \"Name\",\n\tSTART : \"Start\",\n\tLOGIN_WITH_TEST_USERS : \"OR Login with Test users\",\n\tENTER_NAME : \"Please enter a name\",\n\tUSER_EXIST : \"User already exist with this username\",\n\tDELETE_FOR_ME : \"Delete for me\",\n\tDELETE_FOR_EVERYONE : \"Delete for everyone\"\n}\n\nexport const IMAGES = {\n\tLAUNCHER_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/launcher-icon.svg\",\n\tANNA_SMITH : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/anna-smith.jpg\",\n\tKATRINA_CHARLEY : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/katrina-charley.png\",\n\tNATALIE_IVANOVIC : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/natalie-ivanovic.jpeg\",\n\tERIC_ANDREWS : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/eric-andrews.jpeg\",\n\tGALLERY_ICON : \"https:/cdn.channelize.io/apps/web-widget/1.0.0/images/gallery.png\",\n\tAUDIO_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/audio.png\",\n\tVIDEO_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/video.svg\",\n\tLOCATION_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/location.svg\",\n\tSTICKER_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/sticker.png\",\n\tGIF_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/gif.png\",\n\tAVTAR : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/avtar.png\",\n\tGROUP : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/group.png\",\n}\n\nexport const SETTINGS = {\n\tLOCATION_API_KEY : \"AIzaSyBzrL8FaUvmYPIxEUd_VTPpqcACtPdniik\",\n\tLOCATION_IMG_URL : \"https://maps.googleapis.com/maps/api/staticmap\"\n}\n\nexport const CONNECTING = 'CONNECTING'\nexport const CONNECT_SUCCESS = 'CONNECT_SUCCESS'\nexport const CONNECT_FAIL = 'CONNECT_FAIL'\nexport const DISCONNECT_SUCCESS = 'DISCONNECT_SUCCESS'\nexport const DISCONNECT_FAIL = 'DISCONNECT_FAIL'\n\nexport const NEW_MESSAGE_RECEIVED_EVENT = 'NEW_MESSAGE_RECEIVED_EVENT'\nexport const USER_STATUS_UPDATED_EVENT = 'USER_STATUS_UPDATED'\nexport const MARK_AS_READ_EVENT = 'MARK_AS_READ_EVENT'\nexport const USER_BLOCKED_EVENT = 'USER_BLOCKED_EVENT'\nexport const USER_UNBLOCKED_EVENT = 'USER_UNBLOCKED_EVENT'\nexport const USER_JOINED_EVENT = 'USER_JOINED_EVENT'\nexport const MEMBERS_ADDED_EVENT = 'MEMBERS_ADDED_EVENT'\nexport const MEMBERS_REMOVED_EVENT = 'MEMBERS_REMOVED_EVENT'\nexport const CONVERSATION_UPDATED_EVENT = 'CONVERSATION_UPDATED_EVENT'\nexport const USER_UPDATED_EVENT = 'USER_UPDATED_EVENT'\n\nexport const LOADING_FRIENDS_LIST = 'LOADING_FRIENDS_LIST'\nexport const FRIENDS_LIST_FAIL = 'FRIENDS_LIST_FAIL'\nexport const FRIENDS_LIST_SUCCESS = 'FRIENDS_LIST_SUCCESS'\nexport const LOADING_LOAD_MORE_FRIENDS = 'LOADING_LOAD_MORE_FRIENDS'\nexport const LOAD_MORE_FRIENDS_SUCCESS = 'LOAD_MORE_FRIENDS_SUCCESS'\nexport const LOAD_MORE_FRIENDS_FAIL = 'LOAD_MORE_FRIENDS_FAIL'\nexport const LOADING_MORE_USERS_LIST = 'LOADING_MORE_USERS_LIST'\nexport const MORE_USERS_LIST_FAIL = 'MORE_USERS_LIST_FAIL'\nexport const MORE_USERS_LIST_SUCCESS = 'MORE_USERS_LIST_SUCCESS'\nexport const LOADING_SEARCH_FRIENDS = 'LOADING_SEARCH_FRIENDS'\nexport const SEARCH_FRIENDS_SUCCESS = 'SEARCH_FRIENDS_SUCCESS'\nexport const SEARCH_FRIENDS_FAIL = 'SEARCH_FRIENDS_FAIL'\n\nexport const LOADING_CONVERSATION_LIST = 'LOADING_CONVERSATION_LIST'\nexport const CONVERSATION_LIST_FAIL = 'CONVERSATION_LIST_FAIL'\nexport const CONVERSATION_LIST_SUCCESS = 'CONVERSATION_LIST_SUCCESS'\nexport const LOADING_LOAD_MORE_CONVERSATIONS = 'LOADING_LOAD_MORE_CONVERSATIONS'\nexport const LOAD_MORE_CONVERSATIONS_FAIL = 'LOAD_MORE_CONVERSATIONS_FAIL'\nexport const LOAD_MORE_CONVERSATIONS_SUCCESS = 'LOAD_MORE_CONVERSATIONS_SUCCESS'\n\nexport const LOADING_MESSAGE_LIST = 'LOADING_MESSAGE_LIST'\nexport const MESSAGE_LIST_FAIL = 'MESSAGE_LIST_FAIL'\nexport const MESSAGE_LIST_SUCCESS = 'MESSAGE_LIST_SUCCESS'\nexport const SENDING_MESSAGE = 'SENDING_MESSAGE'\nexport const SEND_MESSAGE_FAIL = 'SEND_MESSAGE_FAIL'\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS'\nexport const SENDING_FILE = 'SENDING_FILE'\nexport const SEND_FILE_FAIL = 'SEND_FILE_FAIL'\nexport const SEND_FILE_SUCCESS = 'SEND_FILE_SUCCESS'\nexport const LOADING_LOAD_MORE_MESSAGES = 'LOADING_LOAD_MORE_MESSAGES'\nexport const LOAD_MORE_MESSAGES_SUCCESS = 'LOAD_MORE_MESSAGES_SUCCESS'\nexport const LOAD_MORE_MESSAGES_FAIL = 'LOAD_MORE_MESSAGES_FAIL'\nexport const SET_ACTIVE_CONVERSATION = 'SET_ACTIVE_CONVERSATION'\nexport const SET_ACTIVE_USERID = 'SET_ACTIVE_USERID'","import {\n  CONNECTING, \n  CONNECT_SUCCESS,\n  CONNECT_FAIL,\n  DISCONNECT_SUCCESS,\n  DISCONNECT_FAIL,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  USER_STATUS_UPDATED_EVENT,\n  MARK_AS_READ_EVENT,\n  USER_BLOCKED_EVENT,\n  USER_UNBLOCKED_EVENT,\n  USER_JOINED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  CONVERSATION_UPDATED_EVENT,\n  USER_UPDATED_EVENT\n} from '../constants';\n\nconst _connect = (client, userId, accessToken) => {\n  return new Promise((resolve, reject) => {\n    if (!userId) {\n      reject('UserID is required.');\n      return;\n    }\n    if (!accessToken) {\n      reject('accessToken is required.');\n      return;\n    }\n\n    if (!client) {\n      reject('Channelize.io client was not created.');\n    }\n\n    client.connect(userId, accessToken, (error, res) => {\n      if (error) {\n        reject('Channelize.io connection Failed.');\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nexport const setConnected = (value = true) => {\n  return dispatch => {\n    dispatch({\n      type: CONNECT_SUCCESS,\n      payload: {}\n    });\n  }\n}\n\nexport const chConnect = (client, userId, accessToken) => {\n  return dispatch => {\n    dispatch({\n      type: CONNECTING,\n      payload: {}\n    });\n    return _connect(client, userId, accessToken)\n      .then(response => connectSuccess(dispatch, response))\n      .catch(error => connectFail(dispatch, error));\n  };\n};\n\nconst connectSuccess = (dispatch, response) => {\n  dispatch({\n    type: CONNECT_SUCCESS,\n    payload: response\n  });\n};\n\nconst connectFail = (dispatch, error) => {\n  dispatch({\n    type: CONNECT_FAIL,\n    payload: error\n  });\n};\n\nconst _disconnect = (client) => {\n  return new Promise((resolve, reject) => {\n    if (client) {\n      client.disconnect(() => {\n        resolve(null);\n      });\n    } else {\n      resolve(null);\n    }\n  });\n};\n\nexport const chDisconnect = (client) => {\n  return dispatch => {\n    return _disconnect(client)\n      .then(response => disconnectSuccess(dispatch, response))\n      .catch(error => disconnectFail(dispatch, error));\n  };\n};\n\nconst disconnectSuccess = (dispatch, response) => {\n  dispatch({\n    type: DISCONNECT_SUCCESS,\n    payload: response\n  });\n};\n\nconst disconnectFail = (dispatch, error) => {\n  dispatch({\n    type: DISCONNECT_FAIL,\n    payload: error\n  });\n};\n\nexport const registerEventHandlers = (client) => {\n  return dispatch => {\n    client.chsocket.on('user.status_updated', function (payload) {\n      dispatch({\n        type: USER_STATUS_UPDATED_EVENT,\n        payload: payload\n      });\n    });\n\n    client.chsocket.on('user.updated', function (payload) {\n      dispatch({\n        type: USER_UPDATED_EVENT,\n        payload: payload\n      });\n    });\n\n    client.chsocket.on('user.message_created', function (response) {\n      dispatch({\n        type: NEW_MESSAGE_RECEIVED_EVENT,\n        payload: response\n      });\n    });\n\n   client.chsocket.on('user.joined', function (response) {\n      // Load conversation will all attributes from server\n      const { conversation } = response;\n      client.Conversation.getConversation(conversation.id, null, (err, conversation) => {\n        if (err) {\n          return;\n        }\n\n        response.conversation = conversation;\n\n        dispatch({\n          type: USER_JOINED_EVENT,\n          payload: response\n        });\n      })\n    });\n\n    client.chsocket.on('conversation.members_added', function (response) {\n      dispatch({\n        type: MEMBERS_ADDED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.members_removed', function (response) {\n      dispatch({\n        type: MEMBERS_REMOVED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.updated', function (response) {\n      dispatch({\n        type: CONVERSATION_UPDATED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.mark_as_read', function (response) {\n      dispatch({\n        type: MARK_AS_READ_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.blocked', function (response) {\n      dispatch({\n        type: USER_BLOCKED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.unblocked', function (response) {\n      dispatch({\n        type: USER_UNBLOCKED_EVENT,\n        payload: response\n      });\n    });\n  };\n};","import { \n  LOADING_CONVERSATION_LIST,\n  CONVERSATION_LIST_FAIL,\n  CONVERSATION_LIST_SUCCESS,\n  LOADING_LOAD_MORE_CONVERSATIONS,\n  LOAD_MORE_CONVERSATIONS_FAIL,\n  LOAD_MORE_CONVERSATIONS_SUCCESS,\n} from '../constants';\n\nexport const getConversationList = (conversationListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_CONVERSATION_LIST,\n      payload: {}\n    });\n    return conversationListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: CONVERSATION_LIST_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: CONVERSATION_LIST_SUCCESS,\n        payload: response\n      }); \n    })\n  };\n};\n\nexport const loadMoreConversations = (conversationListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_CONVERSATIONS,\n      payload: {}\n    });\n    return conversationListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_CONVERSATIONS_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: LOAD_MORE_CONVERSATIONS_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n","import { \n  LOADING_MESSAGE_LIST,\n  MESSAGE_LIST_FAIL,\n  MESSAGE_LIST_SUCCESS,\n  SENDING_MESSAGE,\n  SEND_MESSAGE_FAIL,\n  SEND_MESSAGE_SUCCESS,\n  SENDING_FILE,\n  SEND_FILE_FAIL,\n  SEND_FILE_SUCCESS,\n  LOADING_LOAD_MORE_MESSAGES,\n  LOAD_MORE_MESSAGES_SUCCESS,\n  LOAD_MORE_MESSAGES_FAIL,\n  SET_ACTIVE_CONVERSATION,\n  SET_ACTIVE_USERID,\n  NEW_MESSAGE_RECEIVED_EVENT\n} from '../constants';\n\nexport const sendFileToConversation = (client, conversation, file, body, attachmentType) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_FILE,\n      payload: body\n    });\n\n    let createThumbnail = attachmentType === \"application\" ? false : true;\n\n    const fileData = client.File.upload(file, attachmentType, createThumbnail, (err, fileData) => {\n      if (err) {\n        body.error = err;\n        dispatch({\n          type: SEND_FILE_FAIL,\n          payload: body\n        });\n        return;\n      }\n\n      body['attachments'] = [fileData];\n      return conversation.sendMessage(body, (err, response) => {\n        if (err) {\n          body.error = err;\n          dispatch({\n            type: SEND_FILE_FAIL,\n            payload: body\n          });\n          return;\n        }\n        dispatch({\n          type: SEND_FILE_SUCCESS,\n          payload: response\n        });\n        return;\n      });\n    });\n  }\n};\n\nexport const sendMessageToConversation = (conversation, body) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_MESSAGE,\n      payload: body\n    });\n    return conversation.sendMessage(body, (err, response) => {\n      if (err) {\n        body.error = err;\n        dispatch({\n          type: SEND_MESSAGE_FAIL,\n          payload: body\n        });\n      }\n      dispatch({\n        type: SEND_MESSAGE_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n\nexport const sendMessageToUserId = (client, body) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_MESSAGE,\n      payload: body\n    });\n    return client.Message.sendMessage(body, (err, response) => {\n      if (err) {\n        dispatch({\n          type: SEND_MESSAGE_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: SEND_MESSAGE_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n\nexport const getMessageList = (messageListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_MESSAGE_LIST,\n      payload: {}\n    });\n    return messageListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: MESSAGE_LIST_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: MESSAGE_LIST_SUCCESS,\n        payload: response.reverse()\n      });\n    })\n  };\n};\n\nexport const loadMoreMessages = (messageListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_MESSAGES,\n      payload: {}\n    });\n    return messageListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_MESSAGES_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: LOAD_MORE_MESSAGES_SUCCESS,\n        payload: response.reverse()\n      });\n    })\n  };\n};\n\nexport const setActiveConversation = (conversation) => {\n  return dispatch => {\n    dispatch({\n      type: SET_ACTIVE_CONVERSATION,\n      payload: conversation\n    });\n  };\n};\n\nexport const setActiveUserId = (userId) => {\n  return dispatch => {\n    dispatch({\n      type: SET_ACTIVE_USERID,\n      payload: userId\n    });\n  };\n};\n\nexport const registerConversationEventHandlers = (conversation) => {\n  return dispatch => {\n    if (!conversation.__isWatching) {\n      return\n    }\n\n    conversation.on('watcher.message.created', (response) => {\n      dispatch({\n        type: NEW_MESSAGE_RECEIVED_EVENT,\n        payload: response\n      });\n    });\n  }\n}","import React from 'react';\n\nexport const ChannelizeContext = React.createContext({ client: null });\n\nexport const ChannelizeProvider = ChannelizeContext.Provider;\n\nexport function withChannelizeContext(OriginalComponent) {\n  const ContextAwareComponent = getContextAwareComponent(\n    ChannelizeContext,\n    OriginalComponent,\n  );\n  return ContextAwareComponent;\n}\n\nconst getContextAwareComponent = function(context, originalComponent) {\n  const Context = context;\n  const OriginalComponent = originalComponent;\n  const ContextAwareComponent = function(props) {\n    return (\n      <Context.Consumer>\n        {(c) => <OriginalComponent {...c} {...props} />}\n      </Context.Consumer>\n    );\n  };\n\n  ContextAwareComponent.themePath = OriginalComponent.themePath;\n  ContextAwareComponent.extraThemePaths = OriginalComponent.extraThemePaths;\n  ContextAwareComponent.displayName =\n    OriginalComponent.displayName || OriginalComponent.name || 'Component';\n  ContextAwareComponent.displayName = ContextAwareComponent.displayName.replace(\n    'Base',\n    '',\n  );\n\n  return ContextAwareComponent;\n};","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { \n  chConnect,\n  registerEventHandlers,\n  setConnected\n} from \"../actions\";\nimport { IMAGES } from \"../constants\";\nimport { ChannelizeProvider } from '../context';\n\nclass App extends PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      conversation: null,\n      userId: null\n    }\n  }\n\n  componentDidMount() {\n    const { client, userId, accessToken } = this.props;\n    if (!client.connected) {\n      this.props.chConnect(client, userId, accessToken);\n      return\n    }\n\n    this.props.setConnected(true)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.props.connected) {\n      return;\n    }\n\n    // Register real time events after successful connection\n    if (!prevProps.connected && this.props.connected) {\n      this.props.registerEventHandlers(this.props.client)\n    }\n  }\n\n  getContext = () => ({\n    client: this.props.client\n  });\n\n  render() {\n    const { connected } = this.props;\n\n    return (\n      <ChannelizeProvider value={this.getContext()}>\n        { this.props.children }\n      </ChannelizeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = ({client}) => {\n  return {...client}\n}\n\nApp = connect(\n  mapStateToProps,\n  { chConnect, registerEventHandlers, setConnected }\n)(App);\n\nexport { App };","import React, { PureComponent } from 'react';\n\nclass Header extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\t    showDropDownList: false\n\t  };\n  }\n\n  toggleDropDownList = () => {\n  \tthis.setState((state) => ({\n  \t\tshowDropDownList: !state.showDropDownList\n  \t}))\n  }\n\n  render() {\n  \tconst { \n  \t  title,\n  \t  subtitle,\n  \t  profileImageUrl,\n      showArrowBack,\n      onBack,\n  \t  showChevron,\n  \t  renderDropDownList,\n  \t  renderRight\n    } = this.props;\n    const { showDropDownList } = this.state;\n\n    return (\n\t  <div id=\"ch_header\" className=\"ch-header\">\n\t\t\t{ showArrowBack && <i className=\"material-icons arrow-back\" onClick={onBack}>arrow_back</i>}\n      { profileImageUrl && <div className=\"ch-header-image\" style={{backgroundImage:`url(${profileImageUrl})`}}></div>}\n\t\t\t<div className=\"ch-header_details\">\n        <div className=\"ch-header_content\">\n  \t\t\t\t{ title && \n            <div className=\"ch-header-title\">\n              <div>{title}</div>\n              { showChevron && <i className=\"material-icons ch-chevron-icon\" onClick={this.toggleDropDownList}>keyboard_arrow_down</i>}\n            </div>\n          }\n  \t\t\t\t{ subtitle && <div className=\"ch-header-subtitle\">{subtitle}</div>}\n  \t\t\t\t{ showDropDownList && renderDropDownList && renderDropDownList()}\n        </div>\n        <div className=\"ch-header_right-icons\">\n          {renderRight && this.props.renderRight()}\n        </div>\n\t\t\t</div>\n\t  </div>\n   );\n  }\n}\n\nexport { Header }","import React from 'react';\nimport { IMAGES } from \"../constants\";\n\nfunction Launcher(props) {\n  const { onClick } = props;\n\n  return (\n  \t<div id=\"ch_launcher\" className=\"ch-launcher\" onClick={onClick}>\n\t  <img id=\"ch_launcher_image\" className=\"ch-launcher-image\" src={IMAGES.LAUNCHER_ICON} alt=\"\" />\n  \t</div>\n  );\n}\n\nexport { Launcher };","import React from 'react';\n\nfunction Loader(props) {\n\treturn (\n\t\t<div id=\"ch_conv_loader_container\">\n\t\t\t<div id=\"ch_conv_loader\" className=\"ch-loader\"></div>\n\t\t</div>\n\t);\n}\n\nexport { Loader };","import { LANGUAGE_PHRASES } from \"../constants\";\nimport {produce, setAutoFreeze} from \"immer\"\nimport moment from 'moment';\nimport { IMAGES } from \"../constants\";\nsetAutoFreeze(false);\n\nexport function createReducer(initialState, actionsMap) {\n  return (state = initialState, action) => {\n    return produce(state, draft => {\n      const caseReducer = actionsMap[action.type];\n      return caseReducer ? caseReducer(draft, action) : undefined;\n    });\n  };\n}\n\nexport function uniqueList(list) {\n  return list.reduce((uniqList, currentValue) => {\n    let ids = uniqList.map(item => {\n      return item.id;\n    });\n    if (ids.indexOf(currentValue.id) < 0) {\n      uniqList.push(currentValue);\n    }\n    return uniqList;\n  }, []);\n};\n\nexport const modifyConversation = (conversation) => {\n  if (!conversation) {\n    return\n  }\n\n  if (!conversation.isGroup) {\n    if (conversation.user) {\n      conversation.title = conversation.user.displayName;\n      if (conversation.user.profileImageUrl) {\n        conversation.profileImageUrl = conversation.user.profileImageUrl;\n      } else {\n        conversation.profileImageUrl = IMAGES.AVTAR;\n      }\n    } else {\n      conversation.title = \"Deleted User\";\n      conversation.profileImageUrl = IMAGES.AVTAR;\n    }\n  } else {\n    conversation.profileImageUrl = conversation.profileImageUrl ? conversation.profileImageUrl : IMAGES.GROUP;\n  }\n\n  return conversation;\n}\n\nexport const modifyMessageList = (client, conversation, list) => {\n  const user = client.getCurrentUser();\n\n  // Find last message of logged-in user\n  let lastMessage;\n  list.forEach(message => {\n    if (user.id == message.ownerId) {\n      lastMessage = message;\n    }\n  })\n\n  return list.map((message, i) => {\n    // Determine if show read status\n    message.readByAll = null;\n    message.showReadStatus = false;\n    if (lastMessage && lastMessage.id == message.id) {\n      message.showReadStatus = true;\n      message.readByAll = conversation.readByAllMembers(message);\n    }\n\n    // Handle created At\n    if(!('createdAt' in message)) {\n      message.createdAt = Date.now();\n    }\n    message['time'] = AMorPMTimeParser(message.createdAt);\n\n    // Handle message owner\n    if(!message.owner) {\n      message.owner = {\n        id: user.id,\n        displayName: user.displayName,\n        profileImageUrl: user.profileImageUrl\n      };\n    }\n    if (!('profileImageUrl' in message.owner)) {\n      message.owner.profileImageUrl = IMAGES.AVTAR\n    }\n    if (('displayName' in message.owner)) {\n      message.owner.displayName = capitalize(message.owner.displayName)\n    }\n  \n    // Determine if message owner is self or other?\n    message['isUser'] = false;\n    if (user.id == message.ownerId) {\n      message.isUser = true;\n    }\n\n    // Replace body of deleted message\n    if(message.isDeleted) {\n      message.body = \"<i>\" + LANGUAGE_PHRASES.MESSAGE_DELETED + '</i>';\n    }\n\n    // Set showOwnerAvatar & showDateSeparator props\n    if (i < list.length) {\n      let nextMessage = list[i + 1];\n\n      message.showOwnerAvatar = false;\n      const isUserLastMessage = (i == list.length -1 && user.id == message.owner.id);\n      message.showOwnerAvatar = !(isSameUser(message, nextMessage, user) || isUserLastMessage)\n\n      let prevMessage = list[i - 1];\n      message.showDateSeparator = !isSameDay(message, prevMessage)\n    }\n\n    return message;\n  });\n};\n\nexport const getLastMessageString = (client, conversation) => {\n  const user = client.getCurrentUser();\n  let message = conversation.lastMessage;\n\n  if (!message) {\n    return \"\";\n  }\n\n  let lastMessageString;\n  if (!Object.keys(message).length) {\n    lastMessageString = '';\n    return lastMessageString;\n  }\n\n  // Handle admin message\n  if (message.type == 'admin') {\n    lastMessageString = 'Admin message';\n\n    return lastMessageString\n  }\n\n  // Handle attachment\n  const attachments = message.attachments;\n  if (attachments && attachments.length) {\n    const attachment = attachments[0];\n\n    if (message.owner.id == user.id) {\n      lastMessageString = `You sent a ${attachment.type}`\n    } else {\n      const displayName = capitalize(message.owner.displayName);\n      lastMessageString = `${displayName} sent a ${attachment.type}`\n    }\n\n    return lastMessageString;\n  }\n\n  // Set messageOwnerName\n  let messageOwnerName;\n  if (message.owner) {\n    if (message.owner.id == user.id) {\n      messageOwnerName = 'You: '\n    } else {\n      if (conversation.isGroup) {\n        const displayName = capitalize(message.owner.displayName);\n        messageOwnerName = `${displayName}: `;\n      }\n    }\n  }\n\n  if (message.isDeleted) {\n    message.body = \"This message was deleted.\"\n  }\n\n  if (!messageOwnerName) {\n    lastMessageString = `${message.body}`\n  } else {\n    lastMessageString = `${messageOwnerName}${message.body}`\n  }\n\n  return lastMessageString;\n}\n\nexport function lastMessageTimeParser(time) {\n  const today = new Date();\n  const todayDate = today.getDate();\n  const todayMonth = today.getMonth() + 1;\n  const todayYear = today.getFullYear();\n\n  const inputDate = new Date(time);\n  const inputTimeDate = inputDate.getDate();\n  const inputTimeMonth = inputDate.getMonth() + 1;\n  const inputTimeYear = inputDate.getFullYear();\n\n  const showWeekDay = inputTimeYear == todayYear && inputTimeMonth == todayMonth && todayDate - inputTimeDate <= 7;\n  const showTime = inputTimeYear == todayYear && inputTimeMonth == todayMonth && inputTimeDate == todayDate;\n  if (showTime) {\n    return AMorPMTimeParser(inputDate);\n  } else if (showWeekDay) {\n    const weeks = [\n     'Sun',\n     'Mon',\n     'Tue',\n     'Wed',\n     'Thu',\n     'Fri',\n     'Sat'\n    ]\n    return weeks[inputDate.getDay()];\n  } else {\n    return inputTimeMonth + '/' + inputTimeDate + '/' + inputTimeYear;\n  }\n}\n\nexport function AMorPMTimeParser(time) {\n  const inputDate = new Date(time);\n  let hours = inputDate.getHours();\n  var AmOrPm = hours >= 12 ? 'PM' : 'AM';\n  hours = (hours % 12) || 12;\n  var minutes = '0' + inputDate.getMinutes() ;\n  return hours + \":\" + minutes.substr(-2) + \" \" + AmOrPm;\n}\n\nexport function dateSeparatorParser(time) {\n  const today = new Date();\n  const todayDate = today.getDate();\n  const todayMonth = today.getMonth() + 1;\n  const todayYear = today.getFullYear();\n\n  const inputDate = new Date(time);\n  const inputTimeDate = inputDate.getDate();\n  const inputTimeMonth = inputDate.getMonth() + 1;\n  const inputTimeYear = inputDate.getFullYear();\n\n  const showToday = inputTimeYear == todayYear && inputTimeMonth == todayMonth && todayDate == inputTimeDate;\n  const showYesterday = inputTimeYear == todayYear && inputTimeMonth == todayMonth && (todayDate - inputTimeDate) == 1;\n  if(showToday) {\n    return 'Today';\n  } else if (showYesterday) {\n    return 'Yesterday';\n  } else {\n    return inputTimeMonth + '/' + inputTimeDate + '/' + inputTimeYear;\n  }\n}\n\nexport function isSameDay(currentMessage, diffMessage) {\n  if (!currentMessage || !currentMessage.createdAt || !diffMessage || !diffMessage.createdAt) {\n    return false;\n  }\n\n  let currentCreatedAt = new Date(currentMessage.createdAt);\n  let diffCreatedAt = new Date(diffMessage.createdAt);\n  return currentCreatedAt.getDate() == diffCreatedAt.getDate();\n}\n\nexport function isSameUser(currentMessage, diffMessage, user) {\n  return !!(diffMessage &&\n    diffMessage.owner &&\n    currentMessage.owner && (\n    user.id === currentMessage.owner.id ||\n    diffMessage.owner.id === currentMessage.owner.id));\n}\n\nexport const capitalize = (s) => {\n  if (!s) return\n  s = s.split(\" \");\n\n  for (var i = 0, x = s.length; i < x; i++) {\n      if (!s[i]) {\n        s[i] = s[i];\n      } else {\n        s[i] = s[i][0].toUpperCase() + s[i].substr(1);\n      }\n  }\n\n  return s.join(\" \");\n}","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { lastMessageTimeParser, getLastMessageString } from \"../utils\";\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport { setActiveConversation } from \"../actions\";\n\nclass ConversationItem extends PureComponent {\n\n\tconstructor(props) {\n    super(props);\n\t}\n\n\tselectConversation = () => {\n    const { conversation, onSelect } = this.props;\n    this.props.setActiveConversation(conversation);\n\n    if (onSelect && typeof onSelect == 'function') {\n      onSelect(conversation);\n    }\n\t}\n\n\trender() {\n    const { client, activeConversation, conversation } = this.props;\n    let message = conversation.lastMessage;\n\n\t\t// Handle last message\n\t\tconst lastMessageString = getLastMessageString(client, conversation);\n\n    // Set Last Message time\n    if(!message.createdAt) {\n      message.time = lastMessageTimeParser(Date());\n    } else {\n      message.time = lastMessageTimeParser(message.updatedAt);\n    }\n\n    // Set online icon\n    let onlineIcon;\n    if(conversation.user && conversation.user.isOnline) {\n      onlineIcon = <span className=\"ch-online-icon ch-show-element\"></span>\n    }\n\n    let style = {}\n    if (activeConversation && activeConversation.id == conversation.id) {\n      style = {'backgroundColor': '#fafafa'};\n    }\n\n\t\treturn (\n\t\t\t<li style={style} id={conversation.id} onClick={this.selectConversation}>\n          <div className=\"ch-conversation-image\" style={{backgroundImage:`url(${conversation.profileImageUrl})`}}>\n  \t\t\t\t\t{onlineIcon}\n  \t\t\t\t</div>\n          <div className=\"ch-conversation-content\">\n          <div className=\"ch-conversation-content__upper\">\n            <div id=\"ch_title\">{conversation.title}</div>\n            <div id=\"ch_created_at\" className=\"ch-created-at\">{message.time}</div>\n          </div>\n    \t\t\t<div className=\"ch-conversation-content__lower\">\n            <div id=\"ch_last_msg_box\" className=\"ch-last-msg-box\">\n              <div className=\"ch-last-message\">{lastMessageString}</div>\n            </div>\n          </div>\n          </div>\n          \n\t\t\t</li>\n\t\t);\n\t}\n}\n\nConversationItem = withChannelizeContext(ConversationItem);\n\nconst mapStateToProps = ({conversation}) => {\n  return {...conversation};\n}\n\nConversationItem = connect(\n  mapStateToProps,\n  { setActiveConversation },\n)(ConversationItem);\n\nexport { ConversationItem }","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { ConversationItem} from \"./ConversationItem\";\nimport { Loader } from \"./Loader\";\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { connect } from 'react-redux';\nimport { withChannelizeContext } from '../context';\nimport { \n  getConversationList,\n  loadMoreConversations,\n  setActiveConversation\n} from \"../actions\";\nimport { modifyConversation } from \"../utils\";\n\nclass ConversationList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.limit = 25;\n    this.skip = 0;\n\n    this.onScroll = this.onScroll.bind(this);\n    this.chRecentListingRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { client, connected, activeConversation, list } = this.props;\n    if (!connected) {\n      return\n    }\n\n    // Find if need to refresh conversation\n    const refresh = !prevProps.connected && this.props.connected;\n    if (refresh) {\n      this._init();\n    }\n\n    // Set a conversation active\n    if (!activeConversation && list.length) {\n      this.props.setActiveConversation(list[0]);\n    }\n  }\n\n  _init = () => {\n    const { client, list } = this.props;\n\n    if (list.length) {\n      return;\n    }\n\n    // Load conversations\n    let conversationListQuery = client.Conversation.createConversationListQuery();\n    conversationListQuery.limit = this.limit;\n    conversationListQuery.skip = this.skip;\n    this.props.getConversationList(conversationListQuery);\n  }\n\n  onCloseIconClick = () => {\n    const { onCloseIconClick } = this.props;\n    if (onCloseIconClick && typeof onCloseIconClick == 'function') {\n      onCloseIconClick();\n    }\n  }\n\n  onSearchIconClick = () => {\n    const { onSearchIconClick } = this.props;\n    if (onSearchIconClick && typeof onSearchIconClick == 'function') {\n      onSearchIconClick();\n    }\n  }\n\n  onScroll() {\n    const { list, client, loadingMoreConversations, allConversationsLoaded } = this.props;\n    const chRecentListingRef = this.chRecentListingRef.current;\n\n    if (loadingMoreConversations || allConversationsLoaded || list.length < this.limit) {\n      return\n    }\n\n    if(chRecentListingRef.scrollTop + chRecentListingRef.clientHeight == chRecentListingRef.scrollHeight) {\n      // Set skip\n      this.skip = list.length;\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      conversationListQuery.limit = this.limit;\n      conversationListQuery.skip = this.skip;\n      this.props.loadMoreConversations(conversationListQuery)\n    }\n  }\n\n  render() {\n    let { \n      client,\n      list,\n      connecting,\n      connected,\n      loading,\n      error,\n      loadingMoreConversations,\n      showSearchIcon,\n      onSearchIconClick,\n      showCloseIcon,\n      activeConversation,\n      onSelect\n    } = this.props;\n\n    const user = client.getCurrentUser();\n    let headerImage;\n    if(user && user.profileImageUrl) {\n      headerImage = user.profileImageUrl;\n    } else {\n      headerImage = IMAGES.AVTAR;\n    }\n\n    list = list.map(conversation => modifyConversation(conversation));\n\n    return (\n      <div id=\"ch_recent_window\" className=\"ch-recent-window\">\n        <Header \n          profileImageUrl={headerImage}\n          title={LANGUAGE_PHRASES.CHAT}\n          renderRight={() => {\n            return (\n              <div>\n                { showSearchIcon && <i title=\"Search\" className=\"material-icons\" onClick={this.onSearchIconClick}>search</i>}\n                { showCloseIcon && <i title=\"Close\" className=\"material-icons\" onClick={this.onCloseIconClick}>close</i>}\n              </div>\n            )\n          }}/>\n\n        <div id=\"ch_recent_listing\" className=\"ch-recent-listing\"  ref={this.chRecentListingRef} onScroll={this.onScroll}>\n          { (connecting || loading) &&  <div className=\"center\"><Loader /></div>}\n\n          { error && <div className=\"center error\">{error}</div>}\n\n          { connected && !list.length && !loading && <div className=\"center no-record-found\">No record Found</div>}\n\n          <ul id=\"ch_recent_ul\" className=\"ch-recent-ul\">\n            {\n              list.map((conversation) => {\n                return <ConversationItem \n                  key={conversation.id} \n                  activeConversation={activeConversation} \n                  conversation={conversation}\n                  onSelect={onSelect} />\n              })\n            }\n          </ul>\n\n          { loadingMoreConversations &&  <div> Loading... </div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nConversationList = withChannelizeContext(ConversationList);\n\nconst mapStateToProps = ({conversation, client, message}) => {\n  return {...conversation, ...client, activeConversation: message.conversation};\n}\n\nConversationList = connect(\n  mapStateToProps,\n  { \n    getConversationList,\n    loadMoreConversations,\n    setActiveConversation\n },\n)(ConversationList);\n\nexport { ConversationList }\n","import React, { Component } from 'react';\nimport { withChannelizeContext } from '../context';\nimport { dateSeparatorParser } from '../utils'\n\nclass MessageSimple extends Component {\n\tconstructor(props) {\n  \tsuper(props);\n\t}\n\n\tshowImage(url) {\n\t\tvar link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\n\t}\n\n\tdownloadFile(url, name) {\n\t  var link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  link.download = name;\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\t}\n\n\trender() {\n\t\tconst { client, message } = this.props;\n\t\tconst user = client.getCurrentUser();\n\n\t\t// Set class for user/owner message\n\t\tlet msgContainerPos = message.isUser ? \"right\" : \"left\";  \n\n\t\tlet fileMessage = message.attachments.map(attachment => {\n\t\t  switch(attachment.type) {\n\t\t\tcase \"image\":\n\t\t\t  return <img className=\"ch-image-message\" src={attachment.thumbnailUrl ? attachment.thumbnailUrl : attachment.fileUr} onClick={()=>this.showImage(attachment.fileUrl)}/>\n\t\t\t  break;\n\t\t\tcase \"video\":\n\t\t\t  return (\n\t\t\t\t<div className=\"ch-video-container\">\n\t\t\t\t  <img className=\"ch-image-message\" src={attachment.thumbnailUrl} onClick={()=>this.showImage(attachment.fileUrl)}/>\n\t\t\t\t  <i className=\"material-icons ch-video-play-icon\">play_circle_outline</i>\n\t\t\t\t</div>\n\t\t\t  );\n\t\t\t  break;\n\t\t  \tcase \"application\":\n\t\t\t  return (\n\t\t\t\t<div className=\"ch-text-message\">\n\t\t\t\t  <div className=\"ch-message-body\">\n\t\t\t\t  \t<div className=\"ch-docs-data\">\n\t\t\t\t\t  <i className=\"material-icons ch-attachment-icon\">description</i>\n\t\t\t\t\t  <span className=\"ch-docs-name\">{attachment.name}</span>\n\t\t\t\t\t  <i className=\"material-icons ch-docs-download-icon\" onClick={() =>this.downloadFile(attachment.fileUrl, attachment.name)}>arrow_downward</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ch-docs-details\">\n\t\t\t\t\t  <hr></hr>\n\t\t\t\t\t  <span>{attachment.extension}</span>\n\t\t\t\t\t</div>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t  )\n\t\t\t  break;\n\t\t\tdefault:\n\t\t\t  return null;\n\t\t\t  break;\n\t\t  }\n\t\t});\n\n\t\tconst ownerProfileImageUrl = message.owner.profileImageUrl; \n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ message.showDateSeparator && \n\t\t\t\t\t<div key={`${message.id}-date`} className=\"ch-msg-padding\">\n\t\t\t\t\t\t<div className=\"ch-message-date-separator\">\n\t\t\t\t\t\t\t<div className=\"message-date-separator_left\"></div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_text\">{dateSeparatorParser(message.createdAt)}</div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_right\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t<div key={message.id} className={`ch-msg-padding ${msgContainerPos}`}>\n\t\t\t\t\t<div className={`ch-msg-container`}>\n\t\t\t\t\t\t{ message.showOwnerAvatar && \n\t\t\t\t\t\t\t<div title={message.owner.displayName} className=\"ch-message-owner-avatar\" style={{backgroundImage:`url(${ownerProfileImageUrl})`}}></div>\n\t\t\t\t\t \t}\n\t\t\t\t\t\t<div className={`ch-msg-content ${msgContainerPos == 'left' && !message.showOwnerAvatar ? 'padding-left': ''}`}>\n\t\t\t\t\t\t\t\t{ message.body && <div className={`ch-text-message`}>{message.body}</div> }\n\n\t\t\t\t\t\t\t\t{fileMessage}\n\n\t\t\t\t\t\t\t\t<div className={`message-info`}>\n\t\t\t\t\t\t\t\t\t<span id=\"ch_msg_time\" className=\"ch-msg-time\">{message.time}</span>\n\t\t\t\t\t\t\t\t\t{ message.showReadStatus && message.readByAll &&\n\t\t\t\t\t\t\t\t\t\t<i id=\"ch_msg_status\" className=\"material-icons ch-msg-status ch-msg-read-status\">done_all</i>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{ message.showReadStatus && !message.readByAll &&\n\t\t\t\t\t\t\t\t\t\t<i id=\"ch_msg_status\" className=\"material-icons ch-msg-status\">done_all</i>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nMessageSimple = withChannelizeContext(MessageSimple);\n\nexport { MessageSimple };","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { Loader } from \"./Loader\";\nimport { MessageSimple } from \"./MessageSimple\";\nimport { modifyConversation, modifyMessageList } from \"../utils\";\nimport { connect } from 'react-redux';\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport { \n  getMessageList,\n  sendMessageToConversation,\n  sendMessageToUserId,\n  sendFileToConversation,\n  loadMoreMessages as loadMoreMessagesAction,\n  setActiveConversation,\n  setActiveUserId,\n  registerConversationEventHandlers\n} from '../actions';\nimport moment from 'moment';\nimport throttle from 'lodash/throttle';\nimport PropTypes from 'prop-types';\n\nclass ConversationWindow extends PureComponent {\n\n\tconstructor(props) {\n    super(props);\n    this.limit = 25;\n    this.skip = 0;\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n    this._markAsRead = throttle(this._markAsRead, 500);\n    this.sendMedia = this.sendMedia.bind(this);\n\n    this.chMessageBoxRef = React.createRef();\n\n    this.state = {\n      text: '',\n      dummyConversation: null,\n      userId: null\n    }\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  getSnapshotBeforeUpdate(prevProps) {\n    if (prevProps.list.length < this.props.list.length) {\n      if (!this.chMessageBoxRef) {\n        return null;\n      }\n\n      const chMessageBoxRef = this.chMessageBoxRef.current;\n      return {\n        scrollHeight: chMessageBoxRef.scrollHeight,\n        offsetTop: chMessageBoxRef.scrollTop,\n        offsetBottom: chMessageBoxRef.scrollHeight - chMessageBoxRef.scrollTop,\n      }\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { \n      client,\n      conversation,\n      newMessage,\n      userId,\n      loadingMoreMessages } = this.props;\n\n    // Find if need to refresh conversation\n    const refresh = !prevProps.connected && this.props.connected;\n    if (refresh) {\n      this._init();\n    }\n\n    // if userId switches, re-intialize the conversation\n    if (prevProps.userId != userId && userId) {\n      this._init();\n    }\n\n    // Set the conversation after sending first mesage in dummy conversation\n    if (!conversation && prevProps.sendingMessage && !this.props.sendingMessage) {\n      this._scrollToTarget()\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      if (userId) {\n        conversationListQuery.membersExactly = userId;\n        conversationListQuery.isGroup = false;\n      }\n\n      conversationListQuery.list((err, conversations) => {\n        if (conversations.length) {\n          this.props.setActiveConversation(conversations[0])\n          return\n        }\n\n        client.User.get(userId, (err, user) => {\n          this.setState({\n            dummyConversation: {isGroup: false, user}\n          })\n        })\n      })\n    }\n\n    if (!conversation) {\n      return\n    }\n\n    if ((!prevProps.conversation && conversation) || (prevProps.conversation.id != conversation.id)) {\n      this._init();\n    }\n\n    // Scroll to bottom on initial message loading\n    if (prevProps.loading && !this.props.loading) {\n      this._scrollToTarget()\n    }\n\n    // Scroll to Bottom on new message received\n    if((!prevProps.newMessage && newMessage) || (newMessage && prevProps.newMessage.id != newMessage.id) ) {\n      this._scrollToTarget()\n\n      const user = client.getCurrentUser();\n      if (user.id != newMessage.ownerId) {\n        this._markAsRead(conversation)\n      }\n    }\n\n    // Scroll to target after load more mesages\n    if(prevProps.list.length < this.props.list.length) {\n      if (snapshot) {\n        const chMessageBoxRef = this.chMessageBoxRef.current;\n        const target = chMessageBoxRef.scrollHeight - snapshot.offsetBottom;\n        this._scrollToTarget(target);\n      }\n    }\n  }\n\n  _markAsRead = (conversation) => {\n    if (conversation && conversation.config.typing_events) {\n      conversation.markAsRead();\n    }\n  }\n\n  _scrollToTarget = (target) => {\n    if (!this.chMessageBoxRef) {\n      return\n    }\n\n    const chMessageBoxRef = this.chMessageBoxRef.current;\n    if (Object.prototype.toString.call(target) === \"[object Number]\") {\n      chMessageBoxRef.scrollTop = target;\n      return\n    }\n\n    chMessageBoxRef.scrollTop = chMessageBoxRef.scrollHeight;\n  }\n\n  _init = () => {\n    const { client, conversation, userId, ownProps } = this.props;\n\n    if (!conversation && !userId) {\n      // Handle ownProps\n      if (Object.keys(ownProps).length) {\n        if (ownProps.conversation) {\n          let conversation = ownProps.conversation;\n\n          if (conversation.type != 'open' || conversation.__isWatching) {\n            this.props.setActiveConversation(conversation);\n            return;\n          }\n\n          // Start watching open conversation\n          conversation.startWatching((err, res) => {\n            this.props.setActiveConversation(conversation);\n          })\n          return;\n        }\n        if (ownProps.userId) {\n          this.props.setActiveUserId(ownProps.userId);\n          return;\n        }\n      }\n      return\n    }\n\n    // If conversation not exist, get the conversation from userId\n    if (!conversation) {\n      this.setState({\n        dummyConversation: null\n      })\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      if (userId) {\n        conversationListQuery.membersExactly = userId;\n        conversationListQuery.isGroup = false;\n      }\n\n      conversationListQuery.list((err, conversations) => {\n        if (conversations.length) {\n          this.props.setActiveConversation(conversations[0])\n          return\n        }\n\n        client.User.get(userId, (err, user) => {\n          this.setState({\n            dummyConversation: {isGroup: false, user}\n          })\n        })\n      })\n    }\n\n    if (!conversation) {\n      return\n    }\n\n    // Register conversation event handlers\n    this.props.registerConversationEventHandlers(conversation);\n\n    // Load messages\n    let messageListQuery = conversation.createMessageListQuery();\n    messageListQuery.limit = this.limit;\n    this.skip = 0;\n    messageListQuery.skip = this.skip;\n    this.props.getMessageList(messageListQuery);\n\n    // Mark as read conversation\n    if (conversation.unreadMessageCount > 0) {\n      conversation.markAsRead();\n    }\n  }\n\n  handleChange(event) {\n    this.setState({text: event.target.value});\n  }\n\n  handleKeyUp(event) {\n    if(event.keyCode === 13) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n\n  sendFile(file) {\n    const { client, conversation } = this.props;\n\n    let fileType = file.type.split('/').shift();\n\n    const body = {}\n    this.props.sendFileToConversation(client, conversation, file, body, fileType);\n  }\n  \n  sendMessage() {\n    const { conversation, client, userId } = this.props;\n    const { text } = this.state;\n    let body = {\n      body: text\n    }\n    this.setState({text: ''})\n\n    if (conversation) {\n      this.props.sendMessageToConversation(conversation, body)\n    } else {\n      body.userId = userId;\n      this.props.sendMessageToUserId(client, body)\n    }\n  }\n\n  onCloseIconClick = () => {\n    this.props.setActiveConversation(null)\n\n    const { onCloseIconClick } = this.props;\n    if (onCloseIconClick && typeof onCloseIconClick == 'function') {\n      onCloseIconClick();\n    }\n  }\n\n  onScroll() {\n    const { list, conversation, loadingMoreMessages, allMessagesLoaded } = this.props;\n    if (!conversation) {\n      return null\n    }\n\n    const chMessageBoxRef = this.chMessageBoxRef.current;\n    if (loadingMoreMessages || allMessagesLoaded || list.length < this.limit) {\n      return\n    }\n\n    if(chMessageBoxRef.scrollTop < chMessageBoxRef.clientHeight) {\n      // Set skip\n      this.skip = list.length;\n\n      let messageListQuery = conversation.createMessageListQuery();\n      messageListQuery.limit = this.limit;\n      messageListQuery.skip = this.skip;\n      this.props.loadMoreMessagesAction(messageListQuery)\n    }\n  }\n\n  blockUser() {\n\n  }\n\n  unblockUser() {\n\n  }\n\n  sendMedia(event) {\n    this.sendFile(event.target.files[0]);\n  }\n\n  render() {\n    let { \n      client,\n      connecting,\n      connected,\n      error,\n      loading,\n      loadingMoreMessages,\n      list,\n      conversation,\n      showCloseIcon,\n      showChevron,\n      disableComposer,\n      disableComposerMessage,\n      Message,\n      renderHeader\n    } = this.props;\n    const { text, dummyConversation } = this.state;\n\n    // Set dummy conversation if conversation doesn't exist\n    if (!conversation) {\n      conversation = dummyConversation\n      list = [];\n    }\n\n    // Modify message list\n    list = modifyMessageList(client, conversation, list);\n\n    // disable composer setting\n    let composerDisabled = false;\n    if (disableComposer && typeof disableComposer == 'function') {\n      composerDisabled = disableComposer(conversation)\n    }\n\n    // Set header details\n    let actionButton;\n    let headerTitle;\n    let headerImage;\n    let headerSubtitle;\n    if (conversation) {\n      conversation = modifyConversation(conversation)\n      headerTitle = conversation.title;\n      headerImage = conversation.profileImageUrl;\n\n      if (!conversation.isGroup && conversation.user) {\n        headerSubtitle = conversation.user.isOnline ? 'Online' : 'Last Seen ' + moment(conversation.user.lastSeen).fromNow();\n      }\n\n      if (conversation.isGroup) {\n        headerSubtitle = conversation.memberCount + ' Members';\n      }\n\n      // Action buttons\n      if(!conversation.isActive) {\n        actionButton = <div id=\"ch_conv_unblock\" onClick={() => this.unblockUser()}>Unblock User</div>\n      } else {\n        actionButton = <div id=\"ch_conv_block\" onClick={() => this.blockUser()}>Block User</div>\n      }\n    }\n\n    const user = client.getCurrentUser();\n\t\treturn (\n  \t\t<div id=\"ch_conv_window\" className=\"ch-conv-window\">\n        { conversation && renderHeader && renderHeader(conversation) }\n  \t\t\t{ conversation && !renderHeader && <Header \n          profileImageUrl={headerImage}\n          title={headerTitle}\n          subtitle={headerSubtitle}\n          showChevron={(showChevron && actionButton) ? true : false}\n          renderDropDownList={() => {\n            if (!actionButton) {\n              return\n            }\n\n            return (\n              <div className=\"ch-drop-down-list\">\n                {actionButton}\n              </div>\n            )\n          }}\n          renderRight={() => {\n            return (\n              <React.Fragment>\n                { showCloseIcon && <i title=\"Close\" className=\"material-icons\" onClick={this.onCloseIconClick}>close</i>}\n              </React.Fragment>\n            )\n          }}/>\n        }\n\n        <div id=\"ch_messages_box\" ref={this.chMessageBoxRef} className=\"ch-messages-box\" onScroll={this.onScroll}>\n          { <div className=\"ch-conversation-padding\"> </div>}\n         \n          { (connecting || loading) &&  <div className=\"center\"><Loader /></div>}\n\n          { error && <div className=\"center error\">{error}</div>}\n\n          <div className=\"ch-msg-list\">\n            { connected && !conversation && <div className=\"center no-record-found\">No conversation seleted</div>}\n\n            { loadingMoreMessages &&  <Loader />}\n\n            { conversation && !list.length && !loading && <div className=\"center no-record-found\">No record Found</div>}\n\n    \t\t\t\t{\n    \t\t\t\t\tlist.map(message => {\n                return <Message key={message.id} message={message}/>\n              })\n    \t\t\t\t}\n          </div>\n        </div>\n\n        { conversation &&\n          <React.Fragment>\n            { composerDisabled ?\n              <div className=\"ch-composer-disabled-box\">\n                <div>{disableComposerMessage}</div>\n              </div>\n              :\n        \t\t\t<div id=\"ch_send_box\" className=\"ch-send-box\">\n\n                <div className=\"ch-media-icon-box\">\n                  <i title=\"Image\" className=\"material-icons ch-attachment-icon\">insert_photo</i>\n                  <input id=\"ch_gallary_input\" className=\"ch-gallary-input\" type=\"file\" accept=\"image/*\" onChange={this.sendMedia} />\n                </div>\n\n                <div className=\"ch-media-icon-box\">\n                  <i title=\"Document\" className=\"material-icons ch-attachment-icon\">description</i>\n                  <input id=\"ch_document_input\" className=\"ch-document-input\" type=\"file\" accept=\"application/*,.doc,.docx,.xls,.ppt\" onChange={this.sendMedia} />\n                </div>\n\n        \t\t\t\t<textarea \n                  id=\"ch_input_box\"\n                  className=\"ch-input-box\"\n                  type=\"text\"\n                  placeholder=\"Send a message\"\n                  value={text}\n                  onChange={this.handleChange} \n                  onKeyUp={this.handleKeyUp}></textarea>\n\n      \t\t\t\t\t<button id=\"ch_send_button\" className=\"ch-send-button\" onClick={this.sendMessage}><i className=\"ch-send-icon material-icons\">send</i></button>\n        \t\t\t</div>\n            }\n          </React.Fragment>\n        }\n  \t\t</div>\n\t\t);\n  }\n}\n\nConversationWindow = withChannelizeContext(ConversationWindow);\n\nConversationWindow.propTypes = {\n  Message: PropTypes.elementType,\n}\n\nConversationWindow.defaultProps = {\n  Message: MessageSimple\n};\n\nconst mapStateToProps = ({message, client}, ownProps) => {\n  return {...message, ...client, ownProps: ownProps}\n}\n\nConversationWindow = connect(\n  mapStateToProps,\n   {\n    getMessageList,\n    sendMessageToConversation,\n    sendMessageToUserId,\n    sendFileToConversation,\n    loadMoreMessagesAction,\n    setActiveConversation,\n    setActiveUserId,\n    registerConversationEventHandlers\n   }\n)(ConversationWindow);\n\nexport { ConversationWindow }","import React, { Component } from 'react';\nimport { withChannelizeContext } from '../context';\nimport { dateSeparatorParser } from '../utils'\n\nclass MessageLivestream extends Component {\n\tconstructor(props) {\n  \tsuper(props);\n\t}\n\n\tshowImage(url) {\n\t\tvar link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\n\t}\n\n\tdownloadFile(url, name) {\n\t  var link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  link.download = name;\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\t}\n\n\trender() {\n\t\tconst { client, message } = this.props;\n\t\tconst user = client.getCurrentUser();\n\n\t\t// Set class for user/owner message\n\t\tlet msgContainerPos = \"left\";  \n\n\t\tlet fileMessage = message.attachments.map(attachment => {\n\t\t  switch(attachment.type) {\n\t\t\tcase \"image\":\n\t\t\t  return <img className=\"ch-image-message\" src={attachment.thumbnailUrl ? attachment.thumbnailUrl : attachment.fileUr} onClick={()=>this.showImage(attachment.fileUrl)}/>\n\t\t\t  break;\n\t\t\tcase \"video\":\n\t\t\t  return (\n\t\t\t\t<div className=\"ch-video-container\">\n\t\t\t\t  <img className=\"ch-image-message\" src={attachment.thumbnailUrl} onClick={()=>this.showImage(attachment.fileUrl)}/>\n\t\t\t\t  <i className=\"material-icons ch-video-play-icon\">play_circle_outline</i>\n\t\t\t\t</div>\n\t\t\t  );\n\t\t\t  break;\n\t\t  \tcase \"application\":\n\t\t\t  return (\n\t\t\t\t<div className=\"ch-text-message\">\n\t\t\t\t  <div className=\"ch-message-body\">\n\t\t\t\t  \t<div className=\"ch-docs-data\">\n\t\t\t\t\t  <i className=\"material-icons ch-attachment-icon\">description</i>\n\t\t\t\t\t  <span className=\"ch-docs-name\">{attachment.name}</span>\n\t\t\t\t\t  <i className=\"material-icons ch-docs-download-icon\" onClick={() =>this.downloadFile(attachment.fileUrl, attachment.name)}>arrow_downward</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ch-docs-details\">\n\t\t\t\t\t  <hr></hr>\n\t\t\t\t\t  <span>{attachment.extension}</span>\n\t\t\t\t\t</div>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t  )\n\t\t\t  break;\n\t\t\tdefault:\n\t\t\t  return null;\n\t\t\t  break;\n\t\t  }\n\t\t});\n\n\t\tconst ownerProfileImageUrl = message.owner.profileImageUrl; \n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ message.showDateSeparator && \n\t\t\t\t\t<div key={`${message.id}-date`} className=\"ch-msg-padding\">\n\t\t\t\t\t\t<div className=\"ch-message-date-separator\">\n\t\t\t\t\t\t\t<div className=\"message-date-separator_left\"></div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_text\">{dateSeparatorParser(message.createdAt)}</div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_right\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t<div key={message.id} className={`ch-msg-padding ${msgContainerPos}`}>\n\t\t\t\t\t<div className={`ch-msg-container`}>\n\t\t\t\t\t\t<div title={message.owner.displayName} className=\"ch-message-owner-avatar\" style={{backgroundImage:`url(${ownerProfileImageUrl})`}}></div>\n\t\t\t\t\t\t<div className=\"ch__message-livestream__owner-name\">{message.owner.displayName}</div>\n\t\t\t\t\t\t<div className={`ch-msg-content`}>\n\t\t\t\t\t\t\t\t{ message.body && <div className={`ch__message-livestream__text`}>{message.body}</div> }\n\n\t\t\t\t\t\t\t\t{fileMessage}\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nMessageLivestream = withChannelizeContext(MessageLivestream);\n\nexport { MessageLivestream };","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { Loader } from \"./Loader\";\nimport { connect } from 'react-redux';\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport { \n  getFriendsList,\n  loadMoreFriends,\n  getMoreUsersList,\n  searchFriends as searchFriendsAction,\n  setActiveUserId,\n} from '../actions';\nimport debounce from 'lodash/debounce';\n\nclass SearchWindow extends PureComponent {\n\n\tconstructor(props) {\n    super(props);\n    this.searchLimit = 10;\n    this.friendsLimit = 50;\n\n    this.state = {\n      searchText: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this._searchOnServer = debounce(this._searchOnServer, 800)\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { client, connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    if (!prevProps.connected && connected) {\n      this._init();\n    }\n  }\n\n  _init = () => {\n    const { client } = this.props;\n\n    // Load friends\n    let friendsListQuery = client.User.createUserListQuery();\n    friendsListQuery.limit = this.friendsLimit;\n    friendsListQuery.skip = 0;\n    friendsListQuery.sort = 'isOnline DESC, displayName ASC ';\n    this.props.getFriendsList(friendsListQuery);\n  }\n\n  handleChange(event) {\n    let inputValue = event.target.value;\n    this.setState({searchText: inputValue})\n\n    if (!inputValue) {\n      return\n    }\n    this._searchOnServer(inputValue);\n  }\n\n  _searchOnServer = (value) => {\n    const { client } = this.props;\n\n    // search friends\n    let friendsListQuery = client.User.createUserListQuery();\n    friendsListQuery.limit = this.searchLimit;\n    friendsListQuery.skip = 0;\n    friendsListQuery.search = value;\n    friendsListQuery.sort = 'isOnline DESC, displayName ASC';\n    this.props.searchFriendsAction(friendsListQuery);\n\n    // Load more users\n    let moreUsersListQuery = client.User.createUserListQuery();\n    moreUsersListQuery.limit = this.searchLimit;\n    moreUsersListQuery.skip = 0;\n    moreUsersListQuery.search = value;\n    moreUsersListQuery.sort = 'isOnline DESC, displayName ASC';\n    this.props.getMoreUsersList(moreUsersListQuery);\n  }\n\n  clearSearch = () => {\n    this.setState({searchText: ''})\n  }\n\n  onContactClick = (userId) => {\n    const { onContactClick } = this.props;\n    this.props.setActiveUserId(userId)\n\n    if (onContactClick && typeof onContactClick == 'function') {\n      onContactClick(userId)\n    }\n  }\n\n  render() {\n    let {\n      connecting, \n      connected,\n      loadingFriendsList,\n      loadingSearchFriends,\n      friendslist,\n      moreUsersList,\n      searchFriends,\n      showArrowBack,\n      onBack\n    } = this.props;\n    const { searchText } = this.state;\n\n    let list = friendslist;\n    if (searchText) {\n      list = searchFriends;\n    } else {\n      moreUsersList = [];\n    }\n\n    const showMoreUsers = moreUsersList.length ? true : false;\n\n  \treturn (\n      <div id=\"ch_search_window\" className=\"ch-search-window\">\n        <Header\n          showArrowBack={showArrowBack}\n          onBack={onBack}\n          title={LANGUAGE_PHRASES.SEARCH} \n        />\n\n        <div id=\"ch_search_box\" className=\"ch-search-box\">\n          <input placeholder=\"Search\" id=\"ch_search_input_box\" className=\"ch-search-input-box\" value={searchText} onChange={this.handleChange} />\n          { searchText && <i id=\"ch_clear_search_icon\" className=\"material-icons ch-clear-search-icon\" onClick={this.clearSearch}>close</i>}\n        </div>\n\n        <div id=\"ch_friends_box\" className=\"ch-friends-box\">\n          { (connecting || loadingFriendsList) && <div className=\"center\"><Loader /></div>}\n\n          { loadingSearchFriends && <div><Loader /></div>}\n\n          { connected && searchText && !list.length && !showMoreUsers && !loadingFriendsList && !loadingSearchFriends && <div className=\"center no-record-found\">No Record Found</div>}\n\n          <div id=\"ch_suggested_box\">\n            { !searchText && !loadingFriendsList && <div id=\"ch_suggested\" className=\"ch-suggested\">{LANGUAGE_PHRASES.SUGGESTED}</div>}\n\n            {list.map(friend => {\n              const imgUrl = friend.profileImageUrl ? friend.profileImageUrl : IMAGES.AVTAR;\n              return (\n                <li key={friend.id} id={friend.id} className=\"ch-friends-list\" onClick={() => this.onContactClick(friend.id)}>\n                  <div className=\"ch-contact-img\" style={{backgroundImage:`url(${imgUrl})`}}>\n                    { friend.isOnline && <span className=\"ch-online-icon ch-show-element\"></span> }\n                  </div>\n                  <div id=\"ch_friend_name\" className=\"ch-friend-name\">{friend.displayName}</div>\n                </li>\n              )})\n            }\n          </div>\n\n          { showMoreUsers &&\n            <div id=\"ch_users_box\">\n              <div id=\"ch_more_users\" className=\"ch-more-users\">{LANGUAGE_PHRASES.MORE_USERS}</div>\n              { moreUsersList.map((user) => {\n                const imgUrl = user.profileImageUrl ? user.profileImageUrl : IMAGES.AVTAR;\n                return (\n                  <li key={user.id} id={user.id} className=\"ch-friends-list\" onClick={() => this.onContactClick(user.id)}>\n                    <div className=\"ch-contact-img\" style={{backgroundImage:`url(${imgUrl})`}}>\n                      { user.isOnline && <span className=\"ch-online-icon ch-show-element\"></span> }\n                    </div>\n                    <div id=\"ch_friend_name\" className=\"ch-friend-name\">{user.displayName}</div>\n                  </li>\n                )})\n              }\n            </div>\n          }\n        </div>\n      </div>\n\t\t);\n  }\n}\n\nSearchWindow = withChannelizeContext(SearchWindow);\n\nconst mapStateToProps = ({user, client}) => {\n  return {...user, ...client}\n}\n\nSearchWindow = connect(\n  mapStateToProps,\n  { \n  getFriendsList,\n  loadMoreFriends ,\n  getMoreUsersList,\n  searchFriendsAction,\n  setActiveUserId }\n)(SearchWindow)\n\nexport { SearchWindow };","import { \n  LOADING_FRIENDS_LIST,\n  FRIENDS_LIST_FAIL,\n  FRIENDS_LIST_SUCCESS,\n  LOADING_LOAD_MORE_FRIENDS,\n  LOAD_MORE_FRIENDS_SUCCESS,\n  LOAD_MORE_FRIENDS_FAIL,\n  LOADING_MORE_USERS_LIST,\n  MORE_USERS_LIST_FAIL,\n  MORE_USERS_LIST_SUCCESS,\n  LOADING_SEARCH_FRIENDS,\n  SEARCH_FRIENDS_SUCCESS,\n  SEARCH_FRIENDS_FAIL\n} from '../constants';\n\nexport const getFriendsList = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_FRIENDS_LIST,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: FRIENDS_LIST_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: FRIENDS_LIST_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n\nexport const loadMoreFriends = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_FRIENDS,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_FRIENDS_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: LOAD_MORE_FRIENDS_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n\nexport const getMoreUsersList = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_MORE_USERS_LIST,\n      payload: {}\n    });\n    return userListQuery.usersList((err, response) => {\n      if (err) {\n        dispatch({\n          type: MORE_USERS_LIST_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: MORE_USERS_LIST_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n\nexport const searchFriends = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_SEARCH_FRIENDS,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: SEARCH_FRIENDS_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: SEARCH_FRIENDS_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};","import {\n  CONNECTING, \n  CONNECT_SUCCESS,\n  CONNECT_FAIL,\n  DISCONNECT_SUCCESS,\n  DISCONNECT_FAIL\n} from '../constants';\n\nconst INITIAL_STATE = {\n  connecting: false,\n  connected: false,\n  error: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case CONNECTING:\n    return { ...state, connecting: true };\n  case CONNECT_SUCCESS:\n\t  return { ...state, connected: true , connecting: false};\n\tcase CONNECT_FAIL:\n\t  return { ...state, connected: false, error: action.payload, connecting: false };\n\tcase DISCONNECT_SUCCESS:\n\t  return { ...state, connected: false };\n\tcase DISCONNECT_FAIL:\n\t  return { ...state, connected: true, error: action.payload };\n  \tdefault:\n      return state;\n  }\n};\n","import {\n  LOADING_CONVERSATION_LIST,\n  CONVERSATION_LIST_FAIL,\n  CONVERSATION_LIST_SUCCESS,\n  LOADING_LOAD_MORE_CONVERSATIONS,\n  LOAD_MORE_CONVERSATIONS_FAIL,\n  LOAD_MORE_CONVERSATIONS_SUCCESS,\n  USER_STATUS_UPDATED_EVENT,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  USER_JOINED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  CONVERSATION_UPDATED_EVENT,\n  USER_UPDATED_EVENT,\n  MARK_AS_READ_EVENT\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\n\nconst INITIAL_STATE = {\n  list: [],\n  loading: false,\n  loadingMoreConversations: false,\n  allConversationsLoaded: false,\n  error: null\n};\n\nexport const loadingConversationList = (state, action) => {\n  state.loading = true;\n};\n\nexport const listConversationSuccess = (state, action) => {\n  state.loading = false;\n  state.list = action.payload;\n};\n\nexport const listConversationFail = (state, action) => {\n  state.loading = false;\n  state.error = action.payload;\n};\n\nexport const loadingLoadMoreConversations = (state, action) => {\n  state.loadingMoreConversations = true;\n};\n\nexport const loadMoreConversationsSuccess = (state, action) => {\n  state.loadingMoreConversations = false;\n  if (!action.payload.length) {\n    state.allConversationsLoaded = true;\n  } else {\n    state.list = [...state.list, ...action.payload];\n    state.list = uniqueList(state.list);\n  }\n};\n\nexport const loadMoreConversationsFail = (state, action) => {\n  state.loadingMoreConversations = false;\n  state.error = action.payload;\n};\n\nexport const userStatusUpdated = (state, action) => {\n  let user = action.payload.user;\n  const finalList = state.list.map((conversation, index) => {\n    if (!conversation.isGroup && conversation.user.id == user.id) {\n      conversation.user.isOnline = user.isOnline;\n      conversation.user.lastSeen = user.lastSeen;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  state.list = finalList;\n};\n\nexport const userUpdated = (state, action) => {\n  let user = action.payload.user;\n  const finalList = state.list.map((conversation, index) => {\n    if (!conversation.isGroup && conversation.user.id == user.id) {\n      conversation.user.isOnline = user.isOnline;\n      conversation.user.lastSeen = user.lastSeen;\n      conversation.user.displayName = user.displayName;\n      conversation.user.profileImageUrl = user.profileImageUrl;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  state.list = finalList;\n};\n\nexport const newMessageReceived = (state, action) => {\n  let message = action.payload.message;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.list.map((conversation, index) => {\n    if (conversation.id == message.conversationId) {\n      conversation.lastMessage = message;\n      conversation.updatedAt = action.payload.timestamp;\n\n      conversationIndex = index;\n      latestConversation = conversation;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.list = finalList;\n};\n\nexport const conversationUpdated = (state, action) => {\n  let conversation = action.payload.conversation;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.list.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.title = conversation.title;\n      item.profileImageUrl = conversation.profileImageUrl;\n      item.updatedAt = action.payload.timestamp;\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.list = finalList;\n};\n\nexport const userJoined = (state, action) => {\n  const { conversation } = action.payload;\n  state.list = [...[conversation], ...state.list];\n  state.list = uniqueList(state.list);\n};\n\nexport const membersAdded = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.list.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.memberCount = conversation.memberCount;\n      item.updatedAt = timestamp;\n      item.members = item.members.concat(members)\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.list = finalList;\n};\n\nexport const membersRemoved = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.list.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.memberCount = conversation.memberCount;\n      item.updatedAt = timestamp;\n\n      // Remove members\n      members.forEach(removedMember => {\n        const index = item.members.findIndex(member => member.userId == removedMember.id)\n        if (index >=0) {\n          item.members.splice(index, 1);\n        }\n      })\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.list = finalList;\n};\n\nexport const markAsRead = (state, action) => {\n  let { conversation, user, timestamp } = action.payload;\n\n  const finalList = state.list.map((item, index) => {\n    if (item.id == conversation.id) {\n      if (item.lastReadAt[user.id]) {\n        item.lastReadAt[user.id] = timestamp;\n      }\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  state.list = finalList;\n}\n\nexport const handlers = {\n  [LOADING_CONVERSATION_LIST]: loadingConversationList,\n  [CONVERSATION_LIST_FAIL]: listConversationFail,\n  [CONVERSATION_LIST_SUCCESS]: listConversationSuccess,\n  [LOADING_LOAD_MORE_CONVERSATIONS]: loadingLoadMoreConversations,\n  [LOAD_MORE_CONVERSATIONS_FAIL]: loadMoreConversationsFail,\n  [LOAD_MORE_CONVERSATIONS_SUCCESS]: loadMoreConversationsSuccess,\n  [USER_STATUS_UPDATED_EVENT]: userStatusUpdated,\n  [NEW_MESSAGE_RECEIVED_EVENT]: newMessageReceived,\n  [USER_JOINED_EVENT]: userJoined,\n  [MEMBERS_ADDED_EVENT]: membersAdded,\n  [MEMBERS_REMOVED_EVENT]: membersRemoved,\n  [CONVERSATION_UPDATED_EVENT]: conversationUpdated,\n  [USER_UPDATED_EVENT]: userUpdated,\n  [MARK_AS_READ_EVENT]: markAsRead\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { \n  LOADING_MESSAGE_LIST,\n  MESSAGE_LIST_FAIL,\n  MESSAGE_LIST_SUCCESS,\n  SENDING_MESSAGE,\n  SEND_MESSAGE_FAIL,\n  SEND_MESSAGE_SUCCESS,\n  LOADING_LOAD_MORE_MESSAGES,\n  LOAD_MORE_MESSAGES_SUCCESS,\n  LOAD_MORE_MESSAGES_FAIL,\n  SET_ACTIVE_CONVERSATION,\n  SET_ACTIVE_USERID,\n  CONVERSATION_UPDATED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  USER_STATUS_UPDATED_EVENT,\n  USER_UPDATED_EVENT,\n  MARK_AS_READ_EVENT\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\nimport { Channelize } from 'channelize-chat';\n\nconst INITIAL_STATE = {\n  list: [],\n  loading: false,\n  error: null,\n  loadingMoreMessages: false,\n  allMessagesLoaded: false,\n  sendingMessage: false,\n\n  // Active conversation and userId\n  conversation: null,\n  userId: null,\n\n  newMessage: null\n};\n\nexport const loadingMessageList = (state, action) => {\n  state.loading = true;\n  state.list = [];\n  state.allMessagesLoaded = false;\n};\n\nexport const messageListSuccess = (state, action) => {\n  state.loading = false;\n  state.list = action.payload;\n};\n\nexport const messageListFail = (state, action) => {\n  state.loading = false;\n  state.error = action.payload;\n};\n\nexport const loadingLoadMoreMessages = (state, action) => {\n  state.loadingMoreMessages = true;\n};\n\nexport const loadMoreMessagesFail = (state, action) => {\n  state.loadingMoreMessages = false;\n  state.error = action.payload;\n};\n\nexport const loadMoreMessagesSuccess = (state, action) => {\n  state.loadingMoreMessages = false;\n  if (!action.payload.length) {\n    state.allMessagesLoaded = true;\n  } else {\n    state.list = [...action.payload, ...state.list];\n    state.list = uniqueList(state.list);\n  }\n};\n\nexport const sendingMessage = (state, action) => {\n  state.sendingMessage = true;\n  // action.payload.status = \"pending\";\n  // state.list = [...state.list, ...[action.payload]];\n  // state.list = uniqueList(state.list);\n};\n\nexport const sendMessageSuccess = (state, action) => {\n  state.sendingMessage = false;\n  state.list = [...state.list, ...[action.payload]];\n  state.list = uniqueList(state.list);\n};\n\nexport const sendMessageFail = (state, action) => {\n  action.payload.status = \"failed\";\n  state.list = [...state.list, ...[action.payload]];\n  state.list = uniqueList(state.list);\n};\n\nexport const setActiveConversation = (state, action) => {\n  state.conversation = action.payload;\n  state.userId = null;\n};\n\nexport const setActiveUserId = (state, action) => {\n  state.userId = action.payload;\n  state.conversation = null;\n};\n\nexport const newMessageReceived = (state, action) => {\n  let message = action.payload.message;\n  if (state.conversation && state.conversation.id == message.conversationId) {\n    state.list = [...state.list, ...[message]];\n    state.list = uniqueList(state.list);\n\n    state.newMessage = message;\n  }\n};\n\nexport const conversationUpdated = (state, action) => {\n  let { id, title, profileImageUrl } = action.payload.conversation;\n  if (state.conversation && state.conversation.id == id) {\n    const jsonConversaton = state.conversation.toJSON();\n    let conversation = {...jsonConversaton, title, profileImageUrl, updatedAt: action.payload.timestamp};\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, conversation);\n  }\n};\n\nexport const membersAdded = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.members = jsonConversaton.members.concat(members)\n    jsonConversaton.memberCount = conversation.memberCount;\n    jsonConversaton.updatedAt = timestamp;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const membersRemoved = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.memberCount = conversation.memberCount;\n    jsonConversaton.updatedAt = timestamp;\n\n    // Remove members\n    members.forEach(removedMember => {\n      const index = jsonConversaton.members.findIndex(member => member.userId == removedMember.id)\n      if (index >=0) {\n        jsonConversaton.members.splice(index, 1);\n      }\n    })\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const userStatusUpdated = (state, action) => {\n  const user = action.payload.user;\n  if (state.conversation && !state.conversation.isGroup && state.conversation.user.id == user.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.user.isOnline = user.isOnline;\n    jsonConversaton.user.lastSeen = user.lastSeen;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n};\n\nexport const userUpdated = (state, action) => {\n  const user = action.payload.user;\n  if (state.conversation && !state.conversation.isGroup && state.conversation.user.id == user.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.user.isOnline = user.isOnline;\n    jsonConversaton.user.lastSeen = user.lastSeen;\n    jsonConversaton.user.displayName = user.displayName;\n    jsonConversaton.user.profileImageUrl = user.profileImageUrl;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n};\n\nexport const markAsRead = (state, action) => {\n  let { conversation, user, timestamp } = action.payload;\n\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    if (jsonConversaton.lastReadAt[user.id]) {\n      jsonConversaton.lastReadAt[user.id] = timestamp;\n    }\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const handlers = {\n  [LOADING_MESSAGE_LIST]: loadingMessageList,\n  [MESSAGE_LIST_SUCCESS]: messageListSuccess,\n  [MESSAGE_LIST_FAIL]: messageListFail,\n  [SENDING_MESSAGE]: sendingMessage,\n  [SEND_MESSAGE_SUCCESS]: sendMessageSuccess,\n  [SEND_MESSAGE_FAIL]: sendMessageFail,\n  [LOADING_LOAD_MORE_MESSAGES]: loadingLoadMoreMessages,\n  [LOAD_MORE_MESSAGES_SUCCESS]: loadMoreMessagesSuccess,\n  [LOAD_MORE_MESSAGES_FAIL]: loadMoreMessagesFail,\n  [SET_ACTIVE_CONVERSATION]: setActiveConversation,\n  [SET_ACTIVE_USERID]: setActiveUserId,\n  [CONVERSATION_UPDATED_EVENT]: conversationUpdated,\n  [MEMBERS_ADDED_EVENT]: membersAdded,\n  [MEMBERS_REMOVED_EVENT]: membersRemoved,\n  [NEW_MESSAGE_RECEIVED_EVENT]: newMessageReceived,\n  [USER_STATUS_UPDATED_EVENT]: userStatusUpdated,\n  [USER_UPDATED_EVENT]: userUpdated,\n  [MARK_AS_READ_EVENT]: markAsRead\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { \n  LOADING_FRIENDS_LIST,\n  FRIENDS_LIST_FAIL,\n  FRIENDS_LIST_SUCCESS,\n  LOADING_LOAD_MORE_FRIENDS,\n  LOAD_MORE_FRIENDS_SUCCESS,\n  LOAD_MORE_FRIENDS_FAIL,\n  LOADING_MORE_USERS_LIST,\n  MORE_USERS_LIST_FAIL,\n  MORE_USERS_LIST_SUCCESS,\n  LOADING_SEARCH_FRIENDS,\n  SEARCH_FRIENDS_SUCCESS,\n  SEARCH_FRIENDS_FAIL\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\n\nconst INITIAL_STATE = {\n  friendslist: [],\n  loadingFriendsList: false,\n  error: null,\n  loadingMoreFriends: false,\n  allFriendsLoaded: false,\n\n  moreUsersList: [],\n  loadingMoreUsersList: false,\n\n  searchFriends: [],\n  loadingSearchFriends: false\n};\n\nexport const loadingFriendsList = (state, action) => {\n  state.loadingFriendsList = true;\n  state.allFriendsLoaded = false;\n  state.friendslist= [];\n};\n\nexport const friendsListSuccess = (state, action) => {\n  state.loadingFriendsList = false;\n  state.friendslist = action.payload;\n};\n\nexport const friendsListFail = (state, action) => {\n  state.loadingFriendsList = false;\n  state.error = action.payload;\n};\n\nexport const loadingLoadMoreFriends = (state, action) => {\n  state.loadingMoreFriends = true;\n};\n\nexport const loadMoreFriendsFail = (state, action) => {\n  state.loadingMoreFriends = false;\n  state.error = action.payload;\n};\n\nexport const loadMoreFriendsSuccess = (state, action) => {\n  state.loadingMoreFriends = false;\n  if (!action.payload.length) {\n    state.allFriendsLoaded = true;\n  } else {\n    state.friendslist = [...state.friendslist, ...action.payload];\n    state.friendslist = uniqueList(state.friendslist);\n  }\n};\n\nexport const loadingMoreUsersList = (state, action) => {\n  state.loadingMoreUsersList = true;\n  state.moreUsersList = [];\n};\n\nexport const moreUsersListSuccess = (state, action) => {\n  state.loadingMoreUsersList = false;\n  state.moreUsersList = action.payload;\n};\n\nexport const moreUsersListFail = (state, action) => {\n  state.loadingMoreUsersList = false;\n  state.error = action.payload;\n};\n\nexport const loadingSearchFriends = (state, action) => {\n  state.loadingSearchFriends = true;\n  state.searchFriends = [];\n};\n\nexport const searchFriendsSuccess = (state, action) => {\n  state.loadingSearchFriends = false;\n  state.searchFriends = action.payload;\n};\n\nexport const searchFriendsFail = (state, action) => {\n  state.loadingSearchFriends = false;\n  state.error = action.payload;\n};\n\nexport const handlers = {\n  [LOADING_FRIENDS_LIST]: loadingFriendsList,\n  [FRIENDS_LIST_SUCCESS]: friendsListSuccess,\n  [FRIENDS_LIST_FAIL]: friendsListFail,\n  [LOADING_LOAD_MORE_FRIENDS]: loadingLoadMoreFriends,\n  [LOAD_MORE_FRIENDS_SUCCESS]: loadMoreFriendsSuccess,\n  [LOAD_MORE_FRIENDS_FAIL]: loadMoreFriendsFail,\n  [LOADING_MORE_USERS_LIST]: loadingMoreUsersList,\n  [MORE_USERS_LIST_SUCCESS]: moreUsersListSuccess,\n  [MORE_USERS_LIST_FAIL]: moreUsersListFail,\n  [LOADING_SEARCH_FRIENDS]: loadingSearchFriends,\n  [SEARCH_FRIENDS_SUCCESS]: searchFriendsSuccess,\n  [SEARCH_FRIENDS_FAIL]: searchFriendsFail,\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { combineReducers } from 'redux';\nimport clientReducer from './clientReducer';\nimport conversationReducer from './conversationReducer';\nimport messageReducer from './messageReducer';\nimport userReducer from './userReducer';\n\nexport default combineReducers({\n  client: clientReducer,\n  conversation: conversationReducer,\n  message: messageReducer,\n  user: userReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger';\nimport { composeWithDevTools } from 'remote-redux-devtools';\n\nimport rootReducer from '../reducers';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n  thunk,\n];\n\nlet composeFunction = compose;\n\nif (process.env.NODE_ENV === 'development') {\n  composeFunction = composeWithDevTools;\n  middleware.push(logger);\n}\n\nconst composedEnhancers = composeFunction(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  composedEnhancers\n);\n\n","export * from './components';\nexport * from './utils';\nexport * from './context';\nexport * from './store';"],"sourceRoot":""}