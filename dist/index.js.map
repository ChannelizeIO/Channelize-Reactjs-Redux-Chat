{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"prop-types\"","webpack:///external \"react-redux\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"redux\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"lodash/debounce\"","webpack:///external \"uuid\"","webpack:///external \"moment\"","webpack:///external \"immer\"","webpack:///external \"lodash/throttle\"","webpack:///external \"react-avatar\"","webpack:///external \"react-markdown\"","webpack:///external \"remark-gfm\"","webpack:///external \"redux-thunk\"","webpack:///external \"sprintf-js\"","webpack:///external \"redux-logger\"","webpack:///external \"remote-redux-devtools\"","webpack:///./src/constants.js","webpack:///./src/actions/clientActions.js","webpack:///./src/actions/conversationActions.js","webpack:///./src/actions/messageActions.js","webpack:///./src/context.js","webpack:///./src/components/App.js","webpack:///./src/components/Avatar.js","webpack:///./src/components/Header.js","webpack:///./src/components/Launcher.js","webpack:///./src/components/Loader.js","webpack:///./src/utils/index.js","webpack:///./src/components/ConversationItem.js","webpack:///./src/components/ConversationList.js","webpack:///./src/components/MediaLightBox.js","webpack:///./src/components/GuestJoinForm.js","webpack:///./src/components/OutsideClickHandler.js","webpack:///./src/components/MessageSimple.js","webpack:///./src/components/SimpleList.js","webpack:///./src/components/ConversationWindow.js","webpack:///./src/components/MessageLivestream.js","webpack:///./src/components/SearchWindow.js","webpack:///./src/actions/userActions.js","webpack:///./src/reducers/clientReducer.js","webpack:///./src/reducers/conversationReducer.js","webpack:///./src/reducers/messageReducer.js","webpack:///./src/reducers/userReducer.js","webpack:///./src/reducers/index.js","webpack:///./src/store/index.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","LANGUAGE_PHRASES","ADMIN_MSG_FORMATS","admin_group_create","admin_group_join","admin_group_add_members","admin_group_remove_members","admin_group_leave","admin_group_make_admin","admin_group_change_title","admin_group_change_photo","admin_call_video_missed","admin_call_voice_missed","admin_custom_auction_winner","admin_custom_auction_backup","CALL_FORMATS","admin_call_rejected","admin_call_completed","admin_call_not_answered","admin_call_missed","IMAGES","connectSuccess","dispatch","response","type","payload","connectFail","error","registerEventHandlers","client","chsocket","on","conversation","Conversation","getConversation","id","err","setActiveConversation","setActiveUserId","userId","ChannelizeContext","React","createContext","ChannelizeProvider","Provider","withChannelizeContext","OriginalComponent","getContextAwareComponent","context","originalComponent","Context","ContextAwareComponent","props","Consumer","themePath","extraThemePaths","displayName","replace","App","state","this","accessToken","connected","setConnected","chConnect","prevProps","getContext","className","children","PureComponent","connect","Promise","resolve","reject","res","connectAsAnonymous","_connect","then","catch","Avatar","initials","src","avatarProps","isValidSrc","trim","finalAvatarProps","maxInitials","size","round","Fragment","title","style","backgroundImage","propTypes","PropTypes","string","defaultProps","Header","setState","showDropDownList","subtitle","imageSrc","imageInitials","showArrowBack","onBack","showChevron","renderDropDownList","renderRight","callButtons","translate","onClick","toggleDropDownList","Launcher","alt","Loader","sprintf","createReducer","initialState","actionsMap","action","produce","draft","caseReducer","undefined","uniqueList","list","reduce","uniqList","currentValue","ids","map","item","indexOf","push","splice","setAutoFreeze","modifyConversation","loginUser","isGroup","user","profileImageUrl","otherMemberIds","members","member","modifyMessageList","lastMessage","getCurrentUser","forEach","message","ownerId","readByAll","showReadStatus","pending","readByAllMembers","createdAt","Date","now","AMorPMTimeParser","owner","capitalize","isUser","isDeleted","body","length","nextMessage","showOwnerAvatar","isUserLastMessage","isSameUser","prevMessage","showDateSeparator","isSameDay","system","_modifyAdminMessage","getLastMessageString","lastMessageString","keys","messageOwnerName","attachments","attachment","lastMessageTimeParser","time","today","todayDate","getDate","todayMonth","getMonth","todayYear","getFullYear","inputDate","inputTimeDate","inputTimeMonth","inputTimeYear","showWeekDay","getDay","hours","getHours","AmOrPm","getMinutes","substr","dateSeparatorParser","currentMessage","diffMessage","currentCreatedAt","diffCreatedAt","typingString","typing","split","firstUser","commaSeparatedUsers","slice","join","x","toUpperCase","subName","objNames","metaData","duration","second","Number","h","Math","floor","secondsToHms","text","adminMessageType","subType","subId","subUser","objType","objValues","objUsers","Array","isArray","names","objUser","find","format","getCookie","cname","ca","document","cookie","charAt","substring","setCookie","cvalue","exdays","setTime","getTime","expires","toUTCString","ConversationItem","onSelect","activeConversation","updatedAt","selectConversation","isOnline","ConversationList","conversationlist","conversationListQuery","createConversationListQuery","limit","skip","include","getConversationList","onCloseIconClick","onSearchIconClick","onScroll","chRecentListingRef","createRef","_init","loadingMoreConversations","allConversationsLoaded","current","scrollTop","clientHeight","scrollHeight","loadMoreConversations","connecting","conversationLoading","conversationError","showSearchIcon","showCloseIcon","ref","MediaLightBox","url","link","createElement","href","target","download","appendChild","click","removeChild","file","fileUrl","thumbnailUrl","onCloseClick","downloadFile","controls","preload","loop","autoPlay","GuestJoinForm","errors","joining","handleChange","handleSubmit","event","a","onJoinedAsGuest","preventDefault","validateForm","switchToGuest","onSubmit","placeholder","onChange","disabled","func","DISPLAY","BLOCK","FLEX","INLINE","INLINE_BLOCK","CONTENTS","node","isRequired","onOutsideClick","bool","useCapture","display","oneOf","values","OutsideClickHandler","args","onMouseDown","onMouseUp","setChildNodeRef","addMouseDownEventListener","prevDisabled","removeEventListeners","e","childNode","contains","addEventListener","capture","removeEventListener","includes","Component","MessageSimple","showMoreOptions","fileMessage","renderMoreOptions","msgContainerPos","adminMsg","fileUr","onClickEvent","extension","pop","toggleMoreOptions","hideMoreOptions","SimpleList","ConversationWindow","config","typing_events","markAsRead","chMessageBoxRef","toString","ownProps","handleTabChange","dummyConversation","membersExactly","conversations","User","registerConversationEventHandlers","messageListQuery","createMessageListQuery","getMessageList","isAdmin","banListQuery","createBanListQuery","getConversationBanList","unreadMessageCount","__isWatching","startWatchingAndSetActiveConversation","textMessage","_startTyping","_stopTyping","startTyping","stopTyping","showMediaLightBox","handleKeyPress","sendMessage","_markAsRead","throttle","sendMedia","debounce","toggleGuestJoinForm","guestJoinFormOpened","activeTab","messagelist","offsetTop","offsetBottom","prevState","snapshot","newMessage","loadingMoreMessages","sendingMessage","_scrollToTarget","messageLoading","stopWatchingAndSetNullConversation","_onTextMessageChanged","guest","fileType","shift","match","uuid","sendFileToConversation","getFileThumbnailUrl","URL","createObjectURL","msgId","deleteMessagesForEveryone","deleteMessagesForMe","banConversationUsers","unbanConversationUsers","allowGuestUsers","isAnonymousUser","sendMessageToConversation","sendMessageToUserId","cb","fileReader","FileReader","onload","result","readAsDataURL","blob","Blob","video","timeupdate","snapImage","pause","canvas","width","videoWidth","height","videoHeight","drawImage","image","toDataURL","success","revokeObjectURL","muted","playsInline","play","readAsArrayBuffer","allMessagesLoaded","loadMoreMessagesAction","sendFile","files","openMediaFile","messageError","disableComposer","disableComposerMessage","Message","showHeader","renderHeader","showComposerActions","noConversationFoundMessage","banList","showDeletedMessageCard","headerActionButton","headerTitle","headerImage","headerSubtitle","composerDisabled","conversationAdmins","showTabs","moment","lastSeen","fromNow","memberCount","isActive","blockUser","unblockUser","ban","canChat","filter","typingStrings","isSentByAdmin","viewMediaToggle","showMoreOptionsIcon","privateKey","allow_delete_message_by_admin","accept","onKeyPress","elementType","reverse","msgBody","attachmentType","createThumbnail","File","upload","fileData","fileMsgObject","messageIds","userIds","banUsers","unbanUsers","startWatching","stopWatching","conversationBanListQuery","MessageLivestream","remarkPlugins","gfm","linkTarget","showImage","renderMarkdown","SearchWindow","friendsListQuery","createUserListQuery","friendsLimit","sort","getFriendsList","searchLimit","search","searchFriendsAction","moreUsersListQuery","getMoreUsersList","searchText","onContactClick","_searchOnServer","inputValue","loadingFriendsList","loadingSearchFriends","friendslist","moreUsersList","searchFriends","showMoreUsers","clearSearch","friend","userListQuery","friendsList","loadMoreFriends","usersList","INITIAL_STATE","finalList","index","conversationIndex","latestConversation","conversationId","timestamp","unshift","concat","removedMember","findIndex","lastReadAt","messages","msg","Channelize","window","sendingFile","status","toJSON","core","Client","getInstance","Model","jsonConversaton","isTyping","deletedMessageIds","banUserList","loadingMoreFriends","allFriendsLoaded","loadingMoreUsersList","combineReducers","clientReducer","conversationReducer","messageReducer","userReducer","middleware","thunk","composedEnhancers","compose","applyMiddleware","store","createStore","rootReducer"],"mappings":"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","file":"dist/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 27);\n","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"prop-types\");","module.exports = require(\"react-redux\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"redux\");","module.exports = require(\"@babel/runtime/helpers/extends\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"lodash/debounce\");","module.exports = require(\"uuid\");","module.exports = require(\"moment\");","module.exports = require(\"immer\");","module.exports = require(\"lodash/throttle\");","module.exports = require(\"react-avatar\");","module.exports = require(\"react-markdown\");","module.exports = require(\"remark-gfm\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"sprintf-js\");","module.exports = require(\"redux-logger\");","module.exports = require(\"remote-redux-devtools\");","export const LANGUAGE_PHRASES = {\n\tCHAT : \"Chat\",\n\tCLOSE : \"Close\",\n\tONLINE : \"Online\",\n\tNO_CONV_FOUND : \"No conversations found!\",\n\tNO_MESSAGES_FOUND : \"No messages found!\",\n\tDELETED_MEMBER : \"Deleted Member\",\n\tMESSAGE_DELETED : \"This message was deleted\",\n\tLAST_SEEN : \"Last Seen \",\n\tMUTE_CONV : \"Mute Conversation\",\n\tCLEAR_CONV : \"Clear Conversation\",\n\tDELETE_CONV : \"Delete Conversation\",\n\tBLOCK_USER : \"Block User\",\n\tUNBLOCK_USER : \"Unblock User\",\n\tSEND_MESSAGE : \"Send a message\",\n\tDELETE : \"Delete\",\n\tIMAGE : \"Image\",\n\tAUDIO : \"Audio\",\n\tVIDEO : \"Video\",\n\tLOCATION : \"Location\",\n\tSTICKER : \"Sticker\",\n\tGIF : \"GIF\",\n\tSHARE_GALLERY : \"Share photo & video\",\n\tSHARE_DOCUMENT : \"Share a document\",\n\tSEND_ATTACHMENTS : \"Send Attachments\",\n\tMEMBERS : \"Members\",\n\tFILE_SIZE_WARNING : \"File size should be less then 25mb\",\n\tSEARCH : \"Search\",\n\tSUGGESTED : \"Suggested\",\n\tMORE_USERS : \"More Users\",\n\tLOGIN : \"Login\",\n\tLOGOUT : \"Logout\",\n\tNAME : \"Name\",\n\tSTART : \"Start\",\n\tLOGIN_WITH_TEST_USERS : \"OR Login with Test users\",\n\tENTER_NAME : \"Please enter a name\",\n\tUSER_EXIST : \"User already exist with this username\",\n\tDELETE_MESSAGE : \"Delete message\",\n\tDELETE_FOR_ME : \"Delete for me\",\n\tDELETE_FOR_EVERYONE : \"Delete for everyone\",\n\tDOWNLOAD_FILE_NAME : \"File\",\n\tYOU : \"You\",\n\tSEND : \"Send\",\n\tHOST : \"Host\",\n\tNO_CONVERSATION_SELECTED: 'No conversation seleted',\n\tGUEST_JOIN_HEADING: 'Enter your name to join the Chat',\n\tGUEST_JOIN_ERROR_DISPLAY_NAME: 'Please enter a valid name',\n\tGUEST_JOIN_LABEL_DISPLAY_NAME: 'Enter your name here',\n\tBAN_USER: 'Ban User',\n\tUNBAN_USER: 'Unban User',\n\tBAN_USER_MESSAGE: 'You are currently not allowed to post messages on this Show',\n\tNOT_ALLOWED_TO_CHAT: 'You must sign-in to chat',\n}\n\nexport const ADMIN_MSG_FORMATS = {\n\tadmin_group_create: \"%s created group %s\",\n\tadmin_group_join: \"%s joined\",\n\tadmin_group_add_members: \"%s added %s\",\n\tadmin_group_remove_members: \"%s removed %s\",\n\tadmin_group_leave: \"%s left\",\n\tadmin_group_make_admin: \"%s are now an admin\",\n\tadmin_group_change_title: \"%s changed the title to %s\",\n\tadmin_group_change_photo: \"%s changed group photo\",\n\tadmin_call_video_missed: \"%s missed a video call from %s\",\n\tadmin_call_voice_missed: \"%s missed a voice call from %s\",\n\tadmin_custom_auction_winner: \"🎉 Winner: %s\",\n\tadmin_custom_auction_backup: \"⏳ Backup: %s\",\n}\n\nexport const CALL_FORMATS = {\n\tadmin_call_rejected : \"Call Rejected\",\n\tadmin_call_completed : \"Call Completed\",\n\tadmin_call_not_answered : \"Call Not Answered\",\n\tadmin_call_missed : \"Missed Call\"\n}\n\nexport const IMAGES = {\n\tLAUNCHER_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/launcher-icon.svg\",\n\tANNA_SMITH : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/anna-smith.jpg\",\n\tKATRINA_CHARLEY : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/katrina-charley.png\",\n\tNATALIE_IVANOVIC : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/natalie-ivanovic.jpeg\",\n\tERIC_ANDREWS : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/eric-andrews.jpeg\",\n\tGALLERY_ICON : \"https:/cdn.channelize.io/apps/web-widget/1.0.0/images/gallery.png\",\n\tAUDIO_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/audio.png\",\n\tVIDEO_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/video.svg\",\n\tLOCATION_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/location.svg\",\n\tSTICKER_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/sticker.png\",\n\tGIF_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/gif.png\",\n\t// AVTAR : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/avtar.png\",\n\t// GROUP : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/group.png\",\n}\n\nexport const SETTINGS = {\n\tLOCATION_API_KEY : \"AIzaSyBzrL8FaUvmYPIxEUd_VTPpqcACtPdniik\",\n\tLOCATION_IMG_URL : \"https://maps.googleapis.com/maps/api/staticmap\"\n}\n\nexport const CONNECTING = 'CONNECTING'\nexport const CONNECT_SUCCESS = 'CONNECT_SUCCESS'\nexport const CONNECT_FAIL = 'CONNECT_FAIL'\nexport const DISCONNECT_SUCCESS = 'DISCONNECT_SUCCESS'\nexport const DISCONNECT_FAIL = 'DISCONNECT_FAIL'\n\nexport const NEW_MESSAGE_RECEIVED_EVENT = 'NEW_MESSAGE_RECEIVED_EVENT'\nexport const USER_STATUS_UPDATED_EVENT = 'USER_STATUS_UPDATED'\nexport const MARK_AS_READ_EVENT = 'MARK_AS_READ_EVENT'\nexport const USER_BLOCKED_EVENT = 'USER_BLOCKED_EVENT'\nexport const USER_UNBLOCKED_EVENT = 'USER_UNBLOCKED_EVENT'\nexport const USER_JOINED_EVENT = 'USER_JOINED_EVENT'\nexport const MEMBERS_ADDED_EVENT = 'MEMBERS_ADDED_EVENT'\nexport const MEMBERS_REMOVED_EVENT = 'MEMBERS_REMOVED_EVENT'\nexport const CONVERSATION_UPDATED_EVENT = 'CONVERSATION_UPDATED_EVENT'\nexport const USER_UPDATED_EVENT = 'USER_UPDATED_EVENT'\n\nexport const LOADING_FRIENDS_LIST = 'LOADING_FRIENDS_LIST'\nexport const FRIENDS_LIST_FAIL = 'FRIENDS_LIST_FAIL'\nexport const FRIENDS_LIST_SUCCESS = 'FRIENDS_LIST_SUCCESS'\nexport const LOADING_LOAD_MORE_FRIENDS = 'LOADING_LOAD_MORE_FRIENDS'\nexport const LOAD_MORE_FRIENDS_SUCCESS = 'LOAD_MORE_FRIENDS_SUCCESS'\nexport const LOAD_MORE_FRIENDS_FAIL = 'LOAD_MORE_FRIENDS_FAIL'\nexport const LOADING_MORE_USERS_LIST = 'LOADING_MORE_USERS_LIST'\nexport const MORE_USERS_LIST_FAIL = 'MORE_USERS_LIST_FAIL'\nexport const MORE_USERS_LIST_SUCCESS = 'MORE_USERS_LIST_SUCCESS'\nexport const LOADING_SEARCH_FRIENDS = 'LOADING_SEARCH_FRIENDS'\nexport const SEARCH_FRIENDS_SUCCESS = 'SEARCH_FRIENDS_SUCCESS'\nexport const SEARCH_FRIENDS_FAIL = 'SEARCH_FRIENDS_FAIL'\n\nexport const LOADING_CONVERSATION_LIST = 'LOADING_CONVERSATION_LIST'\nexport const CONVERSATION_LIST_FAIL = 'CONVERSATION_LIST_FAIL'\nexport const CONVERSATION_LIST_SUCCESS = 'CONVERSATION_LIST_SUCCESS'\nexport const LOADING_LOAD_MORE_CONVERSATIONS = 'LOADING_LOAD_MORE_CONVERSATIONS'\nexport const LOAD_MORE_CONVERSATIONS_FAIL = 'LOAD_MORE_CONVERSATIONS_FAIL'\nexport const LOAD_MORE_CONVERSATIONS_SUCCESS = 'LOAD_MORE_CONVERSATIONS_SUCCESS'\n\nexport const LOADING_MESSAGE_LIST = 'LOADING_MESSAGE_LIST'\nexport const MESSAGE_LIST_FAIL = 'MESSAGE_LIST_FAIL'\nexport const MESSAGE_LIST_SUCCESS = 'MESSAGE_LIST_SUCCESS'\nexport const SENDING_MESSAGE = 'SENDING_MESSAGE'\nexport const SEND_MESSAGE_FAIL = 'SEND_MESSAGE_FAIL'\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS'\nexport const SENDING_FILE = 'SENDING_FILE'\nexport const SEND_FILE_FAIL = 'SEND_FILE_FAIL'\nexport const SEND_FILE_SUCCESS = 'SEND_FILE_SUCCESS'\nexport const LOADING_LOAD_MORE_MESSAGES = 'LOADING_LOAD_MORE_MESSAGES'\nexport const LOAD_MORE_MESSAGES_SUCCESS = 'LOAD_MORE_MESSAGES_SUCCESS'\nexport const LOAD_MORE_MESSAGES_FAIL = 'LOAD_MORE_MESSAGES_FAIL'\nexport const SET_ACTIVE_CONVERSATION = 'SET_ACTIVE_CONVERSATION'\nexport const SET_ACTIVE_USERID = 'SET_ACTIVE_USERID'\nexport const TYPING_EVENT = 'TYPING_EVENT'\nexport const DELETE_MESSAGE_FOR_EVERYONE_EVENT = 'DELETE_MESSAGE_FOR_EVERYONE_EVENT'\nexport const DELETE_MESSAGE_EVENT = 'DELETE_MESSAGE_EVENT'\nexport const DELETING_MESSAGES_FOR_EVERYONE = 'DELETING_MESSAGES_FOR_EVERYONE'\nexport const DELETE_MESSAGES_FOR_EVERYONE_FAIL = 'DELETE_MESSAGES_FOR_EVERYONE_FAIL'\nexport const DELETE_MESSAGES_FOR_EVERYONE_SUCCESS = 'DELETE_MESSAGES_FOR_EVERYONE_SUCCESS'\nexport const DELETING_MESSAGES_FOR_ME = 'DELETING_MESSAGES_FOR_ME'\nexport const DELETE_MESSAGES_FOR_ME_FAIL = 'DELETE_MESSAGES_FOR_ME_FAIL'\nexport const DELETE_MESSAGES_FOR_ME_SUCCESS = 'DELETE_MESSAGES_FOR_ME_SUCCESS'\nexport const START_WATCHING_PROGRESS = 'START_WATCHING_PROGRESS'\nexport const START_WATCHING_FAIL = 'START_WATCHING_FAIL'\nexport const START_WATCHING_SUCCESS = 'START_WATCHING_SUCCESS'\nexport const STOP_WATCHING_PROGRESS = 'STOP_WATCHING_PROGRESS'\nexport const STOP_WATCHING_FAIL = 'STOP_WATCHING_FAIL'\nexport const STOP_WATCHING_SUCCESS = 'STOP_WATCHING_SUCCESS'\nexport const BAN_CONVERSATION_USERS = 'BAN_CONVERSATION_USERS'\nexport const BAN_CONVERSATION_USERS_FAIL = 'BAN_CONVERSATION_USERS_FAIL'\nexport const BAN_CONVERSATION_USERS_SUCCESS = 'BAN_CONVERSATION_USERS_SUCCESS'\nexport const UNBAN_CONVERSATION_USERS = 'UNBAN_CONVERSATION_USERS'\nexport const UNBAN_CONVERSATION_USERS_FAIL = 'UNBAN_CONVERSATION_USERS_FAIL'\nexport const UNBAN_CONVERSATION_USERS_SUCCESS = 'UNBAN_CONVERSATION_USERS_SUCCESS'\nexport const LOADING_CONVERSATION_BAN_LIST = 'LOADING_CONVERSATION_BAN_LIST'\nexport const CONVERSATION_BAN_LIST_FAIL = 'CONVERSATION_BAN_LIST_FAIL'\nexport const CONVERSATION_BAN_LIST_SUCCESS = 'CONVERSATION_BAN_LIST_SUCCESS'\nexport const CONVERSATION_BAN_UPDATED_EVENT = 'CONVERSATION_BAN_UPDATED_EVENT'","import {\n  CONNECTING,\n  CONNECT_SUCCESS,\n  CONNECT_FAIL,\n  DISCONNECT_SUCCESS,\n  DISCONNECT_FAIL,\n  TYPING_EVENT,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n  DELETE_MESSAGE_EVENT,\n  USER_STATUS_UPDATED_EVENT,\n  MARK_AS_READ_EVENT,\n  USER_BLOCKED_EVENT,\n  USER_UNBLOCKED_EVENT,\n  USER_JOINED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  CONVERSATION_UPDATED_EVENT,\n  USER_UPDATED_EVENT,\n  CONVERSATION_BAN_UPDATED_EVENT,\n} from '../constants';\n\nconst _connect = (client, userId, accessToken) => {\n  return new Promise((resolve, reject) => {\n    if (!client) {\n      reject('Channelize.io client was not created.');\n    }\n\n    if (userId && accessToken) {\n      return client.connect(userId, accessToken, (error, res) => {\n        if (error) {\n          return reject('Channelize.io connection Failed.');\n        } else {\n          return resolve(res);\n        }\n      });\n    }\n\n    client.connectAsAnonymous((error, res) => {\n      if (error) {\n        reject('Channelize.io connection Failed.');\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nexport const setConnected = (value = true) => {\n  return dispatch => {\n    dispatch({\n      type: CONNECT_SUCCESS,\n      payload: {}\n    });\n  }\n}\n\nexport const chConnect = (client, userId, accessToken) => {\n  return dispatch => {\n    dispatch({\n      type: CONNECTING,\n      payload: {}\n    });\n    return _connect(client, userId, accessToken)\n      .then(response => connectSuccess(dispatch, response))\n      .catch(error => connectFail(dispatch, error));\n  };\n};\n\nconst connectSuccess = (dispatch, response) => {\n  dispatch({\n    type: CONNECT_SUCCESS,\n    payload: response\n  });\n};\n\nconst connectFail = (dispatch, error) => {\n  dispatch({\n    type: CONNECT_FAIL,\n    payload: error\n  });\n};\n\nconst _disconnect = (client) => {\n  return new Promise((resolve, reject) => {\n    if (client) {\n      client.disconnect(() => {\n        resolve(null);\n      });\n    } else {\n      resolve(null);\n    }\n  });\n};\n\nexport const chDisconnect = (client) => {\n  return dispatch => {\n    return _disconnect(client)\n      .then(response => disconnectSuccess(dispatch, response))\n      .catch(error => disconnectFail(dispatch, error));\n  };\n};\n\nconst disconnectSuccess = (dispatch, response) => {\n  dispatch({\n    type: DISCONNECT_SUCCESS,\n    payload: response\n  });\n};\n\nconst disconnectFail = (dispatch, error) => {\n  dispatch({\n    type: DISCONNECT_FAIL,\n    payload: error\n  });\n};\n\nexport const registerEventHandlers = (client) => {\n  return dispatch => {\n    client.chsocket.on('user.status_updated', function (payload) {\n      dispatch({\n        type: USER_STATUS_UPDATED_EVENT,\n        payload: payload\n      });\n    });\n\n    client.chsocket.on('user.updated', function (payload) {\n      dispatch({\n        type: USER_UPDATED_EVENT,\n        payload: payload\n      });\n    });\n\n    client.chsocket.on('user.message_created', function (response) {\n      dispatch({\n        type: NEW_MESSAGE_RECEIVED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('message.deleted_for_everyone', function (response) {\n      dispatch({\n        type: DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.message_deleted', function (response) {\n      const { conversation } = response;\n      // Get the lastest conversation object to handle the last message in the conversation list.\n      client.Conversation.getConversation(conversation.id, null, (err, conversation) => {\n        if (err) return;\n\n        response.conversation = conversation;\n        dispatch({\n          type: DELETE_MESSAGE_EVENT,\n          payload: response\n        });\n      });\n    });\n\n    client.chsocket.on('user.joined', function (response) {\n      // Load conversation will all attributes from server\n      const { conversation } = response;\n      client.Conversation.getConversation(conversation.id, null, (err, conversation) => {\n        if (err) {\n          return;\n        }\n\n        response.conversation = conversation;\n\n        dispatch({\n          type: USER_JOINED_EVENT,\n          payload: response\n        });\n      })\n    });\n\n    client.chsocket.on('conversation.members_added', function (response) {\n      dispatch({\n        type: MEMBERS_ADDED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.members_removed', function (response) {\n      dispatch({\n        type: MEMBERS_REMOVED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.conversation_ban_updated', function (response) {\n      dispatch({\n        type: CONVERSATION_BAN_UPDATED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.updated', function (response) {\n      dispatch({\n        type: CONVERSATION_UPDATED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.mark_as_read', function (response) {\n      dispatch({\n        type: MARK_AS_READ_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.typing', function (response) {\n      dispatch({\n        type: TYPING_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.blocked', function (response) {\n      dispatch({\n        type: USER_BLOCKED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.unblocked', function (response) {\n      dispatch({\n        type: USER_UNBLOCKED_EVENT,\n        payload: response\n      });\n    });\n  };\n};","import { \n  LOADING_CONVERSATION_LIST,\n  CONVERSATION_LIST_FAIL,\n  CONVERSATION_LIST_SUCCESS,\n  LOADING_LOAD_MORE_CONVERSATIONS,\n  LOAD_MORE_CONVERSATIONS_FAIL,\n  LOAD_MORE_CONVERSATIONS_SUCCESS,\n} from '../constants';\n\nexport const getConversationList = (conversationListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_CONVERSATION_LIST,\n      payload: {}\n    });\n    return conversationListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: CONVERSATION_LIST_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: CONVERSATION_LIST_SUCCESS,\n        payload: response\n      }); \n      return;\n    })\n  };\n};\n\nexport const loadMoreConversations = (conversationListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_CONVERSATIONS,\n      payload: {}\n    });\n    return conversationListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_CONVERSATIONS_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: LOAD_MORE_CONVERSATIONS_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};\n","import { \n  LOADING_MESSAGE_LIST,\n  MESSAGE_LIST_FAIL,\n  MESSAGE_LIST_SUCCESS,\n  SENDING_MESSAGE,\n  SEND_MESSAGE_FAIL,\n  SEND_MESSAGE_SUCCESS,\n  SENDING_FILE,\n  SEND_FILE_FAIL,\n  SEND_FILE_SUCCESS,\n  LOADING_LOAD_MORE_MESSAGES,\n  LOAD_MORE_MESSAGES_SUCCESS,\n  LOAD_MORE_MESSAGES_FAIL,\n  SET_ACTIVE_CONVERSATION,\n  SET_ACTIVE_USERID,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  DELETING_MESSAGES_FOR_EVERYONE,\n  DELETE_MESSAGES_FOR_EVERYONE_FAIL,\n  DELETE_MESSAGES_FOR_EVERYONE_SUCCESS,\n  DELETING_MESSAGES_FOR_ME,\n  DELETE_MESSAGES_FOR_ME_FAIL,\n  DELETE_MESSAGES_FOR_ME_SUCCESS,\n  START_WATCHING_PROGRESS,\n  START_WATCHING_FAIL,\n  START_WATCHING_SUCCESS,\n  STOP_WATCHING_PROGRESS,\n  STOP_WATCHING_FAIL,\n  STOP_WATCHING_SUCCESS,\n  DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n  BAN_CONVERSATION_USERS,\n  BAN_CONVERSATION_USERS_FAIL,\n  BAN_CONVERSATION_USERS_SUCCESS,\n  UNBAN_CONVERSATION_USERS,\n  UNBAN_CONVERSATION_USERS_FAIL,\n  UNBAN_CONVERSATION_USERS_SUCCESS,\n  LOADING_CONVERSATION_BAN_LIST,\n  CONVERSATION_BAN_LIST_FAIL,\n  CONVERSATION_BAN_LIST_SUCCESS,\n} from '../constants';\n\nexport const sendFileToConversation = (client, conversation, file, body, attachmentType) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_FILE,\n      payload: body\n    });\n\n    let createThumbnail = attachmentType === \"application\" ? false : true;\n\n    const fileData = client.File.upload(file, attachmentType, createThumbnail, (err, fileData) => {\n      if (err) {\n        body.error = err;\n        dispatch({\n          type: SEND_FILE_FAIL,\n          payload: body\n        });\n        return;\n      }\n\n      let fileMsgObject = {};\n      fileMsgObject['id'] = body.id;\n      fileMsgObject['attachments'] = [fileData];\n      \n      return conversation.sendMessage(fileMsgObject, (err, response) => {\n        if (err) {\n          fileMsgObject.error = err;\n          dispatch({\n            type: SEND_FILE_FAIL,\n            payload: fileMsgObject\n          });\n          return;\n        }\n        dispatch({\n          type: SEND_FILE_SUCCESS,\n          payload: response\n        });\n        return;\n      });\n    });\n  }\n};\n\nexport const sendMessageToConversation = (conversation, body) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_MESSAGE,\n      payload: body\n    });\n\n    let msgBody = {\n      id: body.id,\n      body: body.body,\n      attachments: body.attachments ? body.attachments : [], \n    }\n    \n    return conversation.sendMessage(msgBody, (err, response) => {\n      if (err) {\n        msgBody.error = err;\n        dispatch({\n          type: SEND_MESSAGE_FAIL,\n          payload: msgBody\n        });\n        return;\n      }\n      dispatch({\n        type: SEND_MESSAGE_SUCCESS,\n        payload: response\n      });\n      return;\n    });\n  };\n};\n\nexport const sendMessageToUserId = (client, body) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_MESSAGE,\n      payload: body\n    });\n    return client.Message.sendMessage(body, (err, response) => {\n      if (err) {\n        dispatch({\n          type: SEND_MESSAGE_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: SEND_MESSAGE_SUCCESS,\n        payload: response\n      });\n      return;\n    });\n  };\n};\n\nexport const getMessageList = (messageListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_MESSAGE_LIST,\n      payload: {}\n    });\n    return messageListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: MESSAGE_LIST_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: MESSAGE_LIST_SUCCESS,\n        payload: response.reverse()\n      });\n      return;\n    })\n  };\n};\n\nexport const loadMoreMessages = (messageListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_MESSAGES,\n      payload: {}\n    });\n    return messageListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_MESSAGES_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: LOAD_MORE_MESSAGES_SUCCESS,\n        payload: response.reverse()\n      });\n      return;\n    })\n  };\n};\n\nexport const deleteMessagesForEveryone = (client, messageIds) => {\n\n  return dispatch => {\n    dispatch({\n      type: DELETING_MESSAGES_FOR_EVERYONE,\n      payload: messageIds\n    });\n    return client.Message.deleteMessagesForEveryone(messageIds, (err, response) => {\n      if (err) {\n        dispatch({\n          type: DELETE_MESSAGES_FOR_EVERYONE_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: DELETE_MESSAGES_FOR_EVERYONE_SUCCESS,\n        payload: messageIds\n      });\n      return;\n    })\n  };\n};\n\nexport const deleteMessagesForMe = (client, messageIds) => {\n  return dispatch => {\n    dispatch({\n      type: DELETING_MESSAGES_FOR_ME,\n      payload: messageIds\n    });\n    return client.Message.deleteMessagesForMe(messageIds, (err, response) => {\n      if (err) {\n        dispatch({\n          type: DELETE_MESSAGES_FOR_ME_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: DELETE_MESSAGES_FOR_ME_SUCCESS,\n        payload: messageIds\n      });\n      return;\n    })\n  };\n};\n\nexport const setActiveConversation = (conversation) => {\n  return dispatch => {\n    dispatch({\n      type: SET_ACTIVE_CONVERSATION,\n      payload: conversation\n    });\n    return;\n  };\n};\n\nexport const setActiveUserId = (userId) => {\n  return dispatch => {\n    dispatch({\n      type: SET_ACTIVE_USERID,\n      payload: userId\n    });\n    return;\n  };\n};\n\nexport const registerConversationEventHandlers = (conversation) => {\n  return dispatch => {\n    if (!conversation.__isWatching) {\n      return\n    }\n\n    conversation.on('watcher.message.created', (response) => {\n      dispatch({\n        type: NEW_MESSAGE_RECEIVED_EVENT,\n        payload: response\n      });\n      return;\n    });\n\n    conversation.on('watcher.message.deleted_for_everyone', (response) => {\n      dispatch({\n        type: DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n        payload: response\n      });\n      return;\n    });\n  }\n}\n\nexport const startWatchingAndSetActiveConversation = (conversation) => {\n  return dispatch => {\n    dispatch({\n      type: START_WATCHING_PROGRESS,\n      payload: {}\n    });\n    return conversation.startWatching((err, response) => {\n      if (err) {\n        dispatch({\n          type: START_WATCHING_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: START_WATCHING_SUCCESS,\n        payload: response\n      });\n      dispatch({\n        type: SET_ACTIVE_CONVERSATION,\n        payload: conversation\n      });\n      return;\n    })\n  };\n};\n\nexport const stopWatchingAndSetNullConversation = (conversation) => {\n  return dispatch => {\n    dispatch({\n      type: STOP_WATCHING_PROGRESS,\n      payload: {}\n    });\n    return conversation.stopWatching((err, response) => {\n      if (err) {\n        dispatch({\n          type: STOP_WATCHING_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: STOP_WATCHING_SUCCESS,\n        payload: response\n      });\n      dispatch({\n        type: SET_ACTIVE_CONVERSATION,\n        payload: null\n      });\n      return;\n    })\n  };\n};\n\nexport const getConversationBanList = (conversationBanListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_CONVERSATION_BAN_LIST,\n      payload: {}\n    });\n    return conversationBanListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: CONVERSATION_BAN_LIST_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: CONVERSATION_BAN_LIST_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};\n\nexport const banConversationUsers = (conversation, userIds, displayName) => {\n  return dispatch => {\n    dispatch({\n      type: BAN_CONVERSATION_USERS,\n      payload: {}\n    });\n\n    return conversation.banUsers(userIds, null, null, (err, response) => {\n      if (err) {\n        dispatch({\n          type: BAN_CONVERSATION_USERS_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: BAN_CONVERSATION_USERS_SUCCESS,\n        payload: { conversation, userIds, displayName}\n      });\n      return;\n    });\n  };\n};\n\nexport const unbanConversationUsers = (conversation, userIds) => {\n  return dispatch => {\n    dispatch({\n      type: UNBAN_CONVERSATION_USERS,\n      payload: {}\n    });\n\n    return conversation.unbanUsers(userIds, (err, response) => {\n      if (err) {\n        dispatch({\n          type: UNBAN_CONVERSATION_USERS_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: UNBAN_CONVERSATION_USERS_SUCCESS,\n        payload: { conversation, userIds}\n      });\n      return;\n    });\n  };\n};\n","import React from 'react';\n\nexport const ChannelizeContext = React.createContext({ client: null });\n\nexport const ChannelizeProvider = ChannelizeContext.Provider;\n\nexport function withChannelizeContext(OriginalComponent) {\n  const ContextAwareComponent = getContextAwareComponent(\n    ChannelizeContext,\n    OriginalComponent,\n  );\n  return ContextAwareComponent;\n}\n\nconst getContextAwareComponent = function(context, originalComponent) {\n  const Context = context;\n  const OriginalComponent = originalComponent;\n  const ContextAwareComponent = function(props) {\n    return (\n      <Context.Consumer>\n        {(c) => <OriginalComponent {...c} {...props} />}\n      </Context.Consumer>\n    );\n  };\n\n  ContextAwareComponent.themePath = OriginalComponent.themePath;\n  ContextAwareComponent.extraThemePaths = OriginalComponent.extraThemePaths;\n  ContextAwareComponent.displayName =\n    OriginalComponent.displayName || OriginalComponent.name || 'Component';\n  ContextAwareComponent.displayName = ContextAwareComponent.displayName.replace(\n    'Base',\n    '',\n  );\n\n  return ContextAwareComponent;\n};","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { \n  chConnect,\n  registerEventHandlers,\n  setConnected\n} from \"../actions\";\nimport { IMAGES } from \"../constants\";\nimport { ChannelizeProvider } from '../context';\n\nclass App extends PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      conversation: null,\n      userId: null\n    }\n  }\n\n  componentDidMount() {\n    const { client, userId, accessToken } = this.props;\n    if (!client.connected) {\n      this.props.chConnect(client, userId, accessToken);\n      return\n    }\n    this.props.setConnected(true)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.props.connected) {\n      return;\n    }\n\n    // Register real time events after successful connection\n    if (!prevProps.connected && this.props.connected) {\n      this.props.registerEventHandlers(this.props.client)\n    }\n  }\n\n  getContext = () => ({\n    client: this.props.client\n  });\n\n  render() {\n    const { connected } = this.props;\n\n    return (\n      <ChannelizeProvider value={this.getContext()}>\n        <div className=\"channelize-chat\">{ this.props.children }</div>\n      </ChannelizeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = ({client}) => {\n  return {...client}\n}\n\nApp = connect(\n  mapStateToProps,\n  { chConnect, registerEventHandlers, setConnected }\n)(App);\n\nexport { App };","import React, { PureComponent } from 'react';\nimport ReactAvatar from 'react-avatar';\nimport PropTypes from 'prop-types';\nclass Avatar extends PureComponent {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      initials,\n      src,\n      className,\n      avatarProps\n    } = this.props;\n    \n    const isValidSrc = src && src.trim();\n    const defaultAvatarProps = {\n      maxInitials: 2,\n      size: 30,\n      round: true\n    }\n    const finalAvatarProps = { ...defaultAvatarProps, ...avatarProps };\n\n    return (\n      <React.Fragment>\n        {\n          isValidSrc ?\n          <div title={initials} className= {className} style={{ backgroundImage: `url(${src})` }}>\n            {this.props.children}\n          </div> :\n          <div title={initials} className= {className}>\n            <ReactAvatar name={initials} {...finalAvatarProps}/>\n            {this.props.children}\n          </div>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nAvatar.propTypes = {\n  src: PropTypes.string,\n  initials: PropTypes.string,\n  className: PropTypes.string,\n  avatarProps: PropTypes.object\n}\n\nAvatar.defaultProps = {\n  avatarProps: {}\n};\n\nexport { Avatar }","import React, { PureComponent } from 'react';\nimport { Avatar } from './Avatar';\nclass Header extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDropDownList: false\n    };\n  }\n\n  toggleDropDownList = () => {\n    this.setState((state) => ({\n      showDropDownList: !state.showDropDownList\n    }))\n  }\n\n  render() {\n    const { \n      title,\n      subtitle,\n      imageSrc,\n      imageInitials,\n      showArrowBack,\n      onBack,\n      showChevron,\n      renderDropDownList,\n      renderRight,\n      callButtons\n    } = this.props;\n    const { showDropDownList } = this.state;\n\n    return (\n    <div id=\"ch_header\" className=\"ch-header\">\n      { showArrowBack && <i translate=\"no\" className=\"material-icons arrow-back\" onClick={onBack}>arrow_back</i>}\n\n      { (imageSrc || imageInitials) && <Avatar src={imageSrc} initials={imageInitials} className=\"ch-header-image\"></Avatar> }\n\n      <div className=\"ch-header_details\">\n        <div className=\"ch-header_content\">\n          { title && \n            <div className=\"ch-header-title\">\n              <div>{title}</div>\n              { showChevron && <i translate=\"no\" className=\"material-icons ch-chevron-icon\" onClick={this.toggleDropDownList}>keyboard_arrow_down</i>}\n            </div>\n          }\n          { subtitle && <div className=\"ch-header-subtitle\">{subtitle}</div>}\n          { showDropDownList && renderDropDownList && renderDropDownList()}\n        </div>\n        {callButtons}\n        <div className=\"ch-header_right-icons\">\n          {renderRight && this.props.renderRight()}\n        </div>\n      </div>\n    </div>\n   );\n  }\n}\n\nexport { Header }","import React from 'react';\nimport { IMAGES } from \"../constants\";\n\nfunction Launcher(props) {\n  const { onClick } = props;\n\n  return (\n  \t<div id=\"ch_launcher\" className=\"ch-launcher\" onClick={onClick}>\n\t  <img id=\"ch_launcher_image\" className=\"ch-launcher-image\" src={IMAGES.LAUNCHER_ICON} alt=\"\" />\n  \t</div>\n  );\n}\n\nexport { Launcher };","import React from 'react';\n\nfunction Loader(props) {\n\treturn (\n\t\t<div id=\"ch_conv_loader_container\">\n\t\t\t<div id=\"ch_conv_loader\" className=\"ch-loader\"></div>\n\t\t</div>\n\t);\n}\n\nexport { Loader };","import {produce, setAutoFreeze} from \"immer\"\nimport moment from 'moment';\nimport { LANGUAGE_PHRASES, ADMIN_MSG_FORMATS, CALL_FORMATS, IMAGES } from \"../constants\";\nvar sprintf = require('sprintf-js').sprintf;\nsetAutoFreeze(false);\n\nexport function createReducer(initialState, actionsMap) {\n  return (state = initialState, action) => {\n    return produce(state, draft => {\n      const caseReducer = actionsMap[action.type];\n      return caseReducer ? caseReducer(draft, action) : undefined;\n    });\n  };\n}\n\nexport function uniqueList(list) {\n  return list.reduce((uniqList, currentValue) => {\n    let ids = uniqList.map(item => {\n      return item.id;\n    });\n    if (ids.indexOf(currentValue.id) < 0) {\n      uniqList.push(currentValue);\n    }else {\n      uniqList.splice(ids.indexOf(currentValue.id), 1, currentValue);\n    }\n    return uniqList;\n  }, []);\n};\n\nexport const modifyConversation = (conversation, loginUser) => {\n  if (!conversation) {\n    return\n  }\n\n  if (!conversation.isGroup) {\n    if (conversation.user) {\n      conversation.title = conversation.user.displayName;\n      if (conversation.user.profileImageUrl) {\n        conversation.profileImageUrl = conversation.user.profileImageUrl;\n      }\n    } else {\n      conversation.title = \"Deleted User\";\n    }\n  }\n\n  // Set conversation members\n  conversation.otherMemberIds = [];\n  if (conversation.members) {\n    conversation.members.map((member) => {\n      if(member.userId != loginUser.id) {\n        conversation.otherMemberIds.push(member.userId);\n      }\n    });\n  }\n\n  return conversation;\n}\n\nexport const modifyMessageList = (client, conversation, list) => {\n  const user = client.getCurrentUser();\n\n  // Find last message of logged-in user\n  let lastMessage;\n  list.forEach(message => {\n    if (user.id == message.ownerId) {\n      lastMessage = message;\n    }\n  })\n\n  return list.map((message, i) => {\n    // Determine if show read status\n    message.readByAll = null;\n    message.showReadStatus = false;\n    if (lastMessage && lastMessage.id == message.id) {\n      message.showReadStatus = true;\n      message.readByAll = !message.pending && conversation.readByAllMembers(message);\n    }\n\n    // Handle created At\n    if(!('createdAt' in message)) {\n      message.createdAt = Date.now();\n    }\n    message['time'] = AMorPMTimeParser(message.createdAt);\n\n    // Handle message owner\n    if(!message.owner) {\n      message.owner = {\n        id: user.id,\n        displayName: user.displayName,\n        profileImageUrl: user.profileImageUrl\n      };\n    }\n    if (('displayName' in message.owner)) {\n      message.owner.displayName = capitalize(message.owner.displayName)\n    }\n\n    // Determine if message owner is self or other?\n    message['isUser'] = false;\n    if (user.id == message.ownerId) {\n      message.isUser = true;\n    }\n\n    // Replace body of deleted message\n    if(message.isDeleted) {\n      message.body = LANGUAGE_PHRASES.MESSAGE_DELETED;\n    }\n\n    // Set showOwnerAvatar & showDateSeparator props\n    if (i < list.length) {\n      let nextMessage = list[i + 1];\n\n      message.showOwnerAvatar = false;\n      const isUserLastMessage = (i == list.length -1 && user.id == message.owner.id);\n      message.showOwnerAvatar = !(isSameUser(message, nextMessage, user) || isUserLastMessage || message.isUser);\n\n      let prevMessage = list[i - 1];\n      message.showDateSeparator = !isSameDay(message, prevMessage)\n    }\n\n    // Handle admin message\n    if (message.type == 'admin') {\n      message.system = true;\n      message = _modifyAdminMessage(user, message);\n    }\n    \n    return message;\n  });\n};\n\nexport const getLastMessageString = (client, conversation) => {\n  const user = client.getCurrentUser();\n  let message = conversation.lastMessage;\n\n  let lastMessageString;\n  if (!Object.keys(message).length) {\n    lastMessageString = '';\n    return lastMessageString;\n  }\n\n  // Handle admin message\n  if (message.type == 'admin') {\n    lastMessageString = 'Admin message';\n\n    return lastMessageString\n  }\n\n  // Handle attachment\n  const attachments = message.attachments;\n  if (attachments && attachments.length) {\n    const attachment = attachments[0];\n\n    if (message.owner.id == user.id) {\n      lastMessageString = `You sent a ${attachment.type}`\n    } else {\n      const displayName = capitalize(message.owner.displayName);\n      lastMessageString = `${displayName} sent a ${attachment.type}`\n    }\n\n    return lastMessageString;\n  }\n\n  // Set messageOwnerName\n  let messageOwnerName;\n  if (message.owner) {\n    if (message.owner.id == user.id) {\n      messageOwnerName = 'You: '\n    } else {\n      if (conversation.isGroup) {\n        const displayName = capitalize(message.owner.displayName);\n        messageOwnerName = `${displayName}: `;\n      }\n    }\n  }\n\n  if (message.isDeleted) {\n    message.body = \"This message was deleted.\"\n  }\n\n  if (!messageOwnerName) {\n    lastMessageString = `${message.body}`\n  } else {\n    lastMessageString = `${messageOwnerName}${message.body}`\n  }\n\n  return lastMessageString;\n}\n\nexport function lastMessageTimeParser(time) {\n  const today = new Date();\n  const todayDate = today.getDate();\n  const todayMonth = today.getMonth() + 1;\n  const todayYear = today.getFullYear();\n\n  const inputDate = new Date(time);\n  const inputTimeDate = inputDate.getDate();\n  const inputTimeMonth = inputDate.getMonth() + 1;\n  const inputTimeYear = inputDate.getFullYear();\n\n  const showWeekDay = inputTimeYear == todayYear && inputTimeMonth == todayMonth && todayDate - inputTimeDate <= 7;\n  const showTime = inputTimeYear == todayYear && inputTimeMonth == todayMonth && inputTimeDate == todayDate;\n  if (showTime) {\n    return AMorPMTimeParser(inputDate);\n  } else if (showWeekDay) {\n    const weeks = [\n     'Sun',\n     'Mon',\n     'Tue',\n     'Wed',\n     'Thu',\n     'Fri',\n     'Sat'\n    ]\n    return weeks[inputDate.getDay()];\n  } else {\n    return inputTimeMonth + '/' + inputTimeDate + '/' + inputTimeYear;\n  }\n}\n\nexport function AMorPMTimeParser(time) {\n  const inputDate = new Date(time);\n  let hours = inputDate.getHours();\n  var AmOrPm = hours >= 12 ? 'PM' : 'AM';\n  hours = (hours % 12) || 12;\n  var minutes = '0' + inputDate.getMinutes() ;\n  return hours + \":\" + minutes.substr(-2) + \" \" + AmOrPm;\n}\n\nexport function dateSeparatorParser(time) {\n  const today = new Date();\n  const todayDate = today.getDate();\n  const todayMonth = today.getMonth() + 1;\n  const todayYear = today.getFullYear();\n\n  const inputDate = new Date(time);\n  const inputTimeDate = inputDate.getDate();\n  const inputTimeMonth = inputDate.getMonth() + 1;\n  const inputTimeYear = inputDate.getFullYear();\n\n  const showToday = inputTimeYear == todayYear && inputTimeMonth == todayMonth && todayDate == inputTimeDate;\n  const showYesterday = inputTimeYear == todayYear && inputTimeMonth == todayMonth && (todayDate - inputTimeDate) == 1;\n  if(showToday) {\n    return 'Today';\n  } else if (showYesterday) {\n    return 'Yesterday';\n  } else {\n    return inputTimeMonth + '/' + inputTimeDate + '/' + inputTimeYear;\n  }\n}\n\nexport function isSameDay(currentMessage, diffMessage) {\n  if (!currentMessage || !currentMessage.createdAt || !diffMessage || !diffMessage.createdAt) {\n    return false;\n  }\n\n  let currentCreatedAt = new Date(currentMessage.createdAt);\n  let diffCreatedAt = new Date(diffMessage.createdAt);\n  return currentCreatedAt.getDate() == diffCreatedAt.getDate();\n}\n\nexport const typingString = (typing) => {\n  if (!typing.length) {\n    return null;\n  }\n\n  typing = typing.map(user => capitalize(user.displayName.trim().split(' ')[0]));\n  if (typing.length == 1) {\n    return `${typing[0]} is typing...`;\n  } else if(typing.length == 2) {\n    const firstUser = typing[0];\n    const secondUser = typing[1];\n    return `${firstUser} and {secondUser} are typing...`;\n  } else if(typing.length > 2) {\n    const commaSeparatedUsers = typing.slice(0, -1).join(', ')\n    const lastuser = typing.slice(-1);\n    return `${commaSeparatedUsers} and {lastuser} are typing...`;\n  }\n}\n\nexport function isSameUser(currentMessage, diffMessage, user) {\n  return !!(diffMessage &&\n    diffMessage.owner &&\n    currentMessage.owner && (\n    user.id === currentMessage.owner.id ||\n    diffMessage.owner.id === currentMessage.owner.id));\n}\n\nexport const capitalize = (s) => {\n  if (!s) return\n  s = s.split(\" \");\n\n  for (var i = 0, x = s.length; i < x; i++) {\n      if (!s[i]) {\n        s[i] = s[i];\n      } else {\n        s[i] = s[i][0].toUpperCase() + s[i].substr(1);\n      }\n  }\n\n  return s.join(\" \");\n}\n\nconst _modifyAdminMessage = (user, message) => {\n  if (message.type != 'admin') {\n    return message;\n  }\n\n  const attachments = message.attachments;\n  if (!attachments.length) {\n    return message;\n  }\n\n  let attachment = attachments[0];\n  let metaData = attachment.metaData;\n\n  if(metaData.type == \"voice\" || metaData.type == \"video\") {\n    let duration = metaData.duration ? \" \" + secondsToHms(metaData.duration) : \"\";\n    message.text = CALL_FORMATS[attachment.adminMessageType] + duration;\n    return message;\n  }\n\n  // Manipulate subject\n  let subName;\n  if (metaData.subType == 'user') {\n    if (user.id == metaData.subId) {\n      subName = LANGUAGE_PHRASES.YOU;\n    } else {\n      if (metaData.subUser) {\n        subName = capitalize(metaData.subUser.displayName);\n      } else {\n        subName = LANGUAGE_PHRASES.DELETED_MEMBER;\n      }\n    }\n  }\n\n  // Manipulate object\n  let objNames;\n  const objType = metaData.objType;\n  const objValues = metaData.objValues;\n  if (metaData.objType == 'user') {\n    if (metaData.objUsers) {\n      if (user.id == metaData.objUsers.id) {\n        objNames = LANGUAGE_PHRASES.YOU;\n      } else {\n        objNames = capitalize(metaData.objUsers.displayName);\n      }\n    } else {\n      objNames = LANGUAGE_PHRASES.DELETED_MEMBER;\n    }\n  } else if(metaData.objType == 'users' && Array.isArray(objValues)) {\n    let names = [];\n    objValues.forEach(value => {\n      const objUser = metaData.objUsers.find(objUser => objUser && objUser.id == value);\n      let name;\n      if (objUser) {\n        name = capitalize(objUser.displayName);\n      } else {\n        name = LANGUAGE_PHRASES.DELETED_MEMBER;\n      }\n      names.push(name);\n    });\n    objNames = names.join(', ');\n  } else if(metaData.objType == 'group') {\n    if(typeof objValues == 'string') {\n      objNames = capitalize(objValues);\n    } else {\n      objNames = objValues;\n    }\n  }\n\n  const format = ADMIN_MSG_FORMATS[attachment.adminMessageType];\n  if (format) {\n    message.text = sprintf(format, subName, objNames);\n  }\n\n  return message\n}\n\nfunction secondsToHms(second) {\n  second = Number(second);\n  var h = Math.floor(second / 3600);\n  var m = Math.floor(second % 3600 / 60);\n  var s = Math.floor(second % 3600 % 60);\n\n  var hDisplay = h > 0 ? h + \"h \" : \"\";\n  var mDisplay = m > 0 ? m + \"m \" : \"\";\n  var sDisplay = s > 0 ? s + \"s \": \"\";\n  return hDisplay + mDisplay + sDisplay; \n}\n\nexport const getCookie = (cname) => {\n  var name = cname + \"=\";\n  var ca = document.cookie.split(';');\n  for(var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport const setCookie = (cname, cvalue, exdays) => {\n  var d = new Date();\n  d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n  var expires = \"expires=\"+d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { lastMessageTimeParser, getLastMessageString } from \"../utils\";\nimport { withChannelizeContext } from '../context';\nimport { setActiveConversation } from \"../actions\";\nimport { Avatar } from \"./Avatar\";\n\nclass ConversationItem extends PureComponent {\n\n  constructor(props) {\n    super(props);\n  }\n\n  selectConversation = () => {\n    const { conversation, onSelect } = this.props;\n    this.props.setActiveConversation(conversation);\n\n    if (onSelect && typeof onSelect == 'function') {\n      onSelect(conversation);\n    }\n  }\n\n  render() {\n    const { client, activeConversation, conversation } = this.props;\n    let message = { ...conversation.lastMessage };\n\n    // Handle last message\n    const lastMessageString = getLastMessageString(client, conversation);\n\n    // Set Last Message time\n    if(!message.createdAt) {\n      message.time = lastMessageTimeParser(Date());\n    } else {\n      message.time = lastMessageTimeParser(message.updatedAt);\n    }\n\n    let style = {}\n    if (activeConversation && activeConversation.id == conversation.id) {\n      style = {'backgroundColor': '#fafafa'};\n    }\n\n    return (\n      <li style={style} id={conversation.id} onClick={this.selectConversation}>\n\n          <Avatar\n            src={conversation.profileImageUrl}\n            initials={conversation.title}\n            className=\"ch-conversation-image\">\n              { conversation && conversation.user && conversation.user.isOnline && \n                <span className=\"ch-online-icon ch-show-element\"></span> }\n            </Avatar>\n\n          <div className=\"ch-conversation-content\">\n          <div className=\"ch-conversation-content__upper\">\n            <div id=\"ch_title\">{conversation.title}</div>\n            <div id=\"ch_created_at\" className=\"ch-created-at\">{message.time}</div>\n          </div>\n          <div className=\"ch-conversation-content__lower\">\n            <div id=\"ch_last_msg_box\" className=\"ch-last-msg-box\">\n              <div className=\"ch-last-message\">{lastMessageString}</div>\n            </div>\n          </div>\n          </div>\n          \n      </li>\n    );\n  }\n}\n\nConversationItem = withChannelizeContext(ConversationItem);\n\nconst mapStateToProps = ({conversation}) => {\n  return {...conversation};\n}\n\nConversationItem = connect(\n  mapStateToProps,\n  { setActiveConversation },\n)(ConversationItem);\n\nexport { ConversationItem }","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { ConversationItem} from \"./ConversationItem\";\nimport { Loader } from \"./Loader\";\nimport { LANGUAGE_PHRASES } from \"../constants\";\nimport { connect } from 'react-redux';\nimport { withChannelizeContext } from '../context';\nimport { \n  getConversationList,\n  loadMoreConversations,\n  setActiveConversation\n} from \"../actions\";\nimport { modifyConversation } from \"../utils\";\n\nclass ConversationList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.limit = 25;\n    this.skip = 0;\n\n    this.onScroll = this.onScroll.bind(this);\n    this.chRecentListingRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { client, connected, activeConversation, conversationlist } = this.props;\n    if (!connected) {\n      return\n    }\n\n    // Find if need to refresh conversation\n    const refresh = !prevProps.connected && this.props.connected;\n    if (refresh) {\n      this._init();\n    }\n\n    // Set a conversation active\n    if (!activeConversation && conversationlist.length) {\n      this.props.setActiveConversation(conversationlist[0]);\n    }\n  }\n\n  _init = () => {\n    const { client, conversationlist } = this.props;\n\n    if (conversationlist.length) {\n      return;\n    }\n\n    // Load conversations\n    let conversationListQuery = client.Conversation.createConversationListQuery();\n    conversationListQuery.limit = this.limit;\n    conversationListQuery.skip = this.skip;\n    conversationListQuery.include = 'members';\n    this.props.getConversationList(conversationListQuery);\n  }\n\n  onCloseIconClick = () => {\n    const { onCloseIconClick } = this.props;\n    if (onCloseIconClick && typeof onCloseIconClick == 'function') {\n      onCloseIconClick();\n    }\n  }\n\n  onSearchIconClick = () => {\n    const { onSearchIconClick } = this.props;\n    if (onSearchIconClick && typeof onSearchIconClick == 'function') {\n      onSearchIconClick();\n    }\n  }\n\n  onScroll() {\n    const { conversationlist, client, loadingMoreConversations, allConversationsLoaded } = this.props;\n    const chRecentListingRef = this.chRecentListingRef.current;\n\n    if (loadingMoreConversations || allConversationsLoaded || conversationlist.length < this.limit) {\n      return\n    }\n\n    if(chRecentListingRef.scrollTop + chRecentListingRef.clientHeight == chRecentListingRef.scrollHeight) {\n      // Set skip\n      this.skip = conversationlist.length;\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      conversationListQuery.limit = this.limit;\n      conversationListQuery.skip = this.skip;\n      this.props.loadMoreConversations(conversationListQuery)\n    }\n  }\n\n  render() {\n    let { \n      client,\n      conversationlist,\n      connecting,\n      connected,\n      conversationLoading,\n      conversationError,\n      loadingMoreConversations,\n      showSearchIcon,\n      onSearchIconClick,\n      showCloseIcon,\n      activeConversation,\n      onSelect\n    } = this.props;\n\n    const user = client.getCurrentUser();\n\n    conversationlist = conversationlist.map(conversation => modifyConversation(conversation, user));\n\n    return (\n      <div id=\"ch_recent_window\" className=\"ch-recent-window\">\n        <Header \n          imageSrc={user && user.profileImageUrl}\n          imageInitials={user && user.displayName}\n          title={LANGUAGE_PHRASES.CHAT}\n          renderRight={() => {\n            return (\n              <div>\n                { showSearchIcon && <i title=\"Search\" translate=\"no\" className=\"material-icons\" onClick={this.onSearchIconClick}>search</i>}\n                { showCloseIcon && <i title=\"Close\" translate=\"no\" className=\"material-icons\" onClick={this.onCloseIconClick}>close</i>}\n              </div>\n            )\n          }}/>\n\n        <div id=\"ch_recent_listing\" className=\"ch-recent-listing\"  ref={this.chRecentListingRef} onScroll={this.onScroll}>\n          { (connecting || conversationLoading) &&  <div className=\"center\"><Loader /></div>}\n\n          { conversationError && <div className=\"center error\">{conversationError}</div>}\n\n          { connected && !conversationlist.length && !conversationLoading && <div className=\"center no-record-found\">No record Found</div>}\n\n          <ul id=\"ch_recent_ul\" className=\"ch-recent-ul\">\n            {\n              conversationlist.map((conversation) => {\n                return <ConversationItem \n                  key={conversation.id} \n                  activeConversation={activeConversation} \n                  conversation={conversation}\n                  onSelect={onSelect} />\n              })\n            }\n          </ul>\n\n          { loadingMoreConversations &&  <div> Loading... </div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nConversationList = withChannelizeContext(ConversationList);\n\nconst mapStateToProps = ({conversation, client, message}) => {\n  return {...conversation, ...client, activeConversation: message.conversation};\n}\n\nConversationList = connect(\n  mapStateToProps,\n  { \n    getConversationList,\n    loadMoreConversations,\n    setActiveConversation\n },\n)(ConversationList);\n\nexport { ConversationList }\n","import React, { PureComponent } from 'react';\nimport { LANGUAGE_PHRASES } from \"../constants\";\n\nclass MediaLightBox extends PureComponent {\n\n\tdownloadFile(url, name) {\n\t\tname = name ? name : LANGUAGE_PHRASES.DOWNLOAD_FILE_NAME;\n\t  var link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  link.download = name;\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\t}\n\n\trender() {\n\t\tconst { file } = this.props;\n\t\tconst fileUrl = file.fileUrl ? file.fileUrl : file.thumbnailUrl;\n\n\t\treturn (\n\t\t\t<div className=\"ch-light-box-container\">\n\n\t\t\t\t<div>\n\t\t\t\t\t<i title=\"Close\" translate=\"no\" className=\"material-icons ch-close-light-box-icon\" onClick={this.props.onCloseClick}>close</i>\n\t\t\t\t\t<i title=\"Download\" translate=\"no\" className=\"material-icons ch-close-light-box-icon\" onClick={()=> this.downloadFile(fileUrl, file.name)}>arrow_downward</i>\n\t\t\t\t</div>\n\n\t\t\t\t{ file.type == \"image\" &&\n\t\t\t\t\t<img className=\"ch-light-box-file\" src={fileUrl} />\n\t\t\t\t}\n\t\t\t\t{ file.type == \"video\" &&\n\t\t\t\t\t<video controls id=\"videoPlayer\" className=\"ch-light-box-file\" preload=\"auto\" loop=\"loop\" autoPlay=\"autoplay\">\n\t\t\t\t    <source src={fileUrl} />\n\t\t\t\t\t</video>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport { MediaLightBox };","import React, { PureComponent } from 'react';\nimport { LANGUAGE_PHRASES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport PropTypes from 'prop-types';\nimport { setCookie } from '../utils';\nclass GuestJoinForm extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayName: '',\n      errors: {},\n      joining: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value, errors: {} });\n  }\n\n  validateForm() {\n    const displayName = this.state.displayName.trim();\n    const errors = {}\n    const MAX_LENGTH = 30;\n    if (!displayName || displayName.length > MAX_LENGTH) {\n      errors.displayName = LANGUAGE_PHRASES.GUEST_JOIN_ERROR_DISPLAY_NAME;\n    }\n    this.setState({ errors });\n    return !Object.keys(errors).length;\n  }\n\n  async handleSubmit(event) {\n    const { client, onJoinedAsGuest, onCloseClick } = this.props;\n    const displayName = this.state.displayName.trim();\n    event.preventDefault();\n    if (!this.validateForm()) {\n      return false;\n    }\n    this.setState({ joining: true });\n    await client.switchToGuest(displayName);\n    setCookie('ch_guest_display_name', displayName, 1000)\n    if (onJoinedAsGuest) await onJoinedAsGuest(displayName);\n    this.setState({ joining: false });\n    onCloseClick();\n  }\n\n  render() {\n    const { onCloseClick } = this.props;\n    const { joining, errors } = this.state;\n    return (\n      <div className=\"ch-light-box-container ch-guest-light-box-container\">\n        <div className=\"ch-guest-light-box\">\n          <div className=\"ch-guest-light-box-close-container\">\n            <i title=\"Close\" translate=\"no\" className=\"material-icons ch-guest-light-box-close\" onClick={onCloseClick}>close</i>\n          </div>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-element-wrapper\">\n              <div className=\"form-heading\">{LANGUAGE_PHRASES.GUEST_JOIN_HEADING}</div>\n            </div>\n            <div className=\"form-element-wrapper\">\n              <input id=\"displayName\" className=\"form-element\" name=\"displayName\" type=\"text\" placeholder={LANGUAGE_PHRASES.GUEST_JOIN_LABEL_DISPLAY_NAME} value={this.state.displayName} onChange={this.handleChange} />\n              {errors.displayName && <div className=\"form-error\">{errors.displayName}</div>}\n            </div>\n            <div className=\"form-element-wrapper\">\n              <input type=\"submit\" value=\"Join\" disabled={joining} />\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nGuestJoinForm = withChannelizeContext(GuestJoinForm);\n\nGuestJoinForm.propTypes = {\n  onJoinedAsGuest: PropTypes.func,\n  onCloseClick: PropTypes.func,\n}\n\nexport { GuestJoinForm }","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DISPLAY = {\n  BLOCK: 'block',\n  FLEX: 'flex',\n  INLINE: 'inline',\n  INLINE_BLOCK: 'inline-block',\n  CONTENTS: 'contents',\n};\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  onOutsideClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  useCapture: PropTypes.bool,\n  display: PropTypes.oneOf(Object.values(DISPLAY)),\n};\n\nconst defaultProps = {\n  disabled: false,\n\n  // `useCapture` is set to true by default so that a `stopPropagation` in the\n  // children will not prevent all outside click handlers from firing - maja\n  useCapture: true,\n  display: DISPLAY.BLOCK,\n};\n\nclass OutsideClickHandler extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.setChildNodeRef = this.setChildNodeRef.bind(this);\n  }\n\n  componentDidMount() {\n    const { disabled, useCapture } = this.props;\n\n    if (!disabled) this.addMouseDownEventListener(useCapture);\n  }\n\n  componentDidUpdate({ disabled: prevDisabled }) {\n    const { disabled, useCapture } = this.props;\n    if (prevDisabled !== disabled) {\n      if (disabled) {\n        this.removeEventListeners();\n      } else {\n        this.addMouseDownEventListener(useCapture);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeEventListeners();\n  }\n\n  // Use mousedown/mouseup to enforce that clicks remain outside the root's\n  // descendant tree, even when dragged. This should also get triggered on\n  // touch devices.\n  onMouseDown(e) {\n    const { useCapture } = this.props;\n\n    if (!this.childNode) {\n      return\n    }\n\n    const isDescendantOfRoot = this.childNode && this.childNode.contains(e.target);\n    if (!isDescendantOfRoot) {\n      document.addEventListener(\n        'mouseup',\n        this.onMouseUp,\n        { capture: useCapture },\n      );\n    }\n  }\n\n  // Use mousedown/mouseup to enforce that clicks remain outside the root's\n  // descendant tree, even when dragged. This should also get triggered on\n  // touch devices.\n  onMouseUp(e) {\n    const { onOutsideClick } = this.props;\n    if (!this.childNode) {\n      return\n    }\n\n    const isDescendantOfRoot = this.childNode && this.childNode.contains(e.target);\n    if (!isDescendantOfRoot) {\n      onOutsideClick(e);\n    }\n  }\n\n  setChildNodeRef(ref) {\n    this.childNode = ref;\n  }\n\n  addMouseDownEventListener(useCapture) {\n    document.addEventListener(\n      'mousedown',\n      this.onMouseDown,\n      { capture: useCapture },\n    );\n  }\n\n  removeEventListeners() {\n    document.removeEventListener('mousedown', this.onMouseDown);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  render() {\n    const { children, display } = this.props;\n\n    return (\n      <div\n        className=\"outside-event\"\n        ref={this.setChildNodeRef}\n        style={\n          display !== DISPLAY.BLOCK && Object.values(DISPLAY).includes(display)\n            ? { display }\n            : undefined\n        }\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nOutsideClickHandler.propTypes = propTypes;\nOutsideClickHandler.defaultProps = defaultProps;\n\nexport { OutsideClickHandler }","import React, { Component } from 'react';\nimport { withChannelizeContext } from '../context';\nimport { dateSeparatorParser, modifyAdminMessage } from '../utils';\nimport { LANGUAGE_PHRASES } from \"../constants\";\nimport { OutsideClickHandler } from './OutsideClickHandler';\nimport { Avatar } from \"./Avatar\";\n\nclass MessageSimple extends Component {\n\tconstructor(props) {\n  \tsuper(props);\n  \tthis.state = {\n  \t\tshowMoreOptions: false\n\t\t}\n\t}\n\n\tdownloadFile(url, name) {\n\t  var link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  link.download = name;\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\t}\n\n\ttoggleMoreOptions = () => {\n    this.setState((state) => ({\n    \t\tshowMoreOptions: !state.showMoreOptions\n    }));\n\t}\n\n\thideMoreOptions = () => {\n\t\tif (!this.state.showMoreOptions) return;\n\t\tthis.setState((state) => ({\n\t\t\tshowMoreOptions: false\n\t\t}));\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclient,\n\t\t\tmessage,\n\t\t\trenderMoreOptions\n\t\t} = this.props;\n\t\tconst { showMoreOptions } = this.state;\n\n\t\tconst user = client.getCurrentUser();\n\n\t\t// Set class for user/owner message\n\t\tlet msgContainerPos = message.isUser ? \"right\" : \"left\";\n\n\t\tlet adminMsg = message.type === \"admin\" ? true : false;\n\t\tlet adminMessageType = null;\n\t\tif (adminMsg) {\n\t\t\tconst attachment = message.attachments.length ? message.attachments[0] : null;\n\t\t\tif (attachment) {\n\t\t\t\tadminMessageType = attachment.adminMessageType;\n\t\t\t}\n\t\t}\n\n\t\tlet fileMessage;\n\n\t\tif(message.attachments && message.attachments.length) {\n\t\t\tfileMessage = message.attachments.map(attachment => {\n\t\t\t\tswitch(attachment.type) {\n\t\t\t\t\tcase \"image\":\n\t\t\t\t\t\treturn <img key={message.id} className=\"ch-image-message\" src={attachment.thumbnailUrl ? attachment.thumbnailUrl : attachment.fileUr} onClick={this.props.onClickEvent}/>\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"video\":\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={message.id} className=\"ch-video-container\">\n\t\t\t\t\t\t\t\t<img className=\"ch-image-message\" src={attachment.thumbnailUrl} onClick={this.props.onClickEvent}/>\n\t\t\t\t\t\t\t\t<i translate=\"no\" className=\"material-icons ch-video-play-icon\" onClick={this.props.onClickEvent}>play_circle_outline</i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"application\":\n\t\t\t\t\t\tlet extension = message.attachments[0].extension ? message.attachments[0].extension : message.attachments[0].name.split(\".\").pop();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={message.id} className=\"ch-text-message\">\n\t\t\t\t\t\t\t\t<div className=\"ch-message\">\n\t\t\t\t\t\t\t\t\t<div className=\"ch-message-body\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"ch-docs-data\">\n\t\t\t\t\t\t\t\t\t\t\t<i translate=\"no\" className=\"material-icons ch-attachment-icon\">description</i>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"ch-docs-name\">{attachment.name}</span>\n\t\t\t\t\t\t\t\t\t\t\t{ attachment.fileUrl && <i translate=\"no\" className=\"material-icons ch-docs-download-icon\" onClick={() =>this.downloadFile(attachment.fileUrl, attachment.name)}>arrow_downward</i>}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"ch-docs-details\">\n\t\t\t\t\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t\t\t\t\t<span>{extension}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ message.showDateSeparator && \t\n\t\t\t\t\t<div key={`${message.id}-date`} className=\"ch-msg-padding\">\n\t\t\t\t\t\t<div className=\"ch-message-date-separator\">\n\t\t\t\t\t\t\t<div className=\"message-date-separator_left\"></div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_text\">{dateSeparatorParser(message.createdAt)}</div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_right\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t{ adminMsg ?\n\t\t\t\t\t<div className={`ch-admin-msg-container ${message.type} ${adminMessageType}`}>\n\t\t\t\t\t\t<span className=\"ch-admin-msg\">{message.text}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div key={message.id} className={`ch-msg-padding ${msgContainerPos}`}>\n\t\t\t\t\t\t<div className={`ch-msg-container ch-msg-container-simple ${message.type}`}>\n\n\t\t\t\t\t\t\t{ message.showOwnerAvatar && <Avatar src={message.owner.profileImageUrl} initials={message.owner.displayName} className=\"ch-message-owner-avatar\"></Avatar> }\n\n\t\t\t\t\t\t\t<div className={`ch-msg-content ${msgContainerPos == 'left' && !message.showOwnerAvatar ? 'padding-left': ''}`}>\n\t\t\t\t\t\t\t\t{ message.body && <div className={`ch-text-message ${message.isDeleted ? \"deleted\" : \"\"}`}>{message.body}</div> }\n\n\t\t\t\t\t\t\t\t{ fileMessage }\n\n\t\t\t\t\t\t\t\t<div className={`message-info`}>\n\t\t\t\t\t\t\t\t\t<span id=\"ch_msg_time\" className=\"ch-msg-time\">{message.time}</span>\n\t\t\t\t\t\t\t\t\t{ message.showReadStatus && message.readByAll &&\n\t\t\t\t\t\t\t\t\t\t<i id=\"ch_msg_status\" translate=\"no\" className=\"material-icons ch-msg-status ch-msg-read-status\">done_all</i>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{ message.showReadStatus && !message.pending && !message.readByAll &&\n\t\t\t\t\t\t\t\t\t\t<i id=\"ch_msg_status\" translate=\"no\" className=\"material-icons ch-msg-status\">done</i>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{ message.showReadStatus && message.pending &&\n\t\t\t\t\t\t\t\t\t\t<i id=\"ch_msg_status\" translate=\"no\" className=\"material-icons ch-msg-status\">schedule</i>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"ch-msg-more-icon\">\n\t\t\t\t\t\t\t\t<i translate=\"no\" className=\"material-icons\" onClick={()=>this.toggleMoreOptions()}>more_vert</i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<OutsideClickHandler onOutsideClick={()=>this.hideMoreOptions()}>\n\t\t\t\t\t\t\t\t<div onClick={()=>this.toggleMoreOptions()}>\n\t\t\t\t\t\t\t\t\t{ showMoreOptions && renderMoreOptions && renderMoreOptions()}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</OutsideClickHandler>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nMessageSimple = withChannelizeContext(MessageSimple);\n\nexport { MessageSimple };","import React, { Component } from 'react';\nimport { withChannelizeContext } from '../context';\nimport { dateSeparatorParser } from '../utils'\nimport { Avatar } from \"./Avatar\";\nimport { LANGUAGE_PHRASES } from \"../constants\";\nimport { OutsideClickHandler } from './OutsideClickHandler';\n\nclass SimpleList extends Component {\n\tconstructor(props) {\n  \tsuper(props);\n\t}\n\trender() {\n\t\tconst { title, action } = this.props;\n\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<span>{title}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"action\">\n\t\t\t\t\t{ action && action()}\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nSimpleList = withChannelizeContext(SimpleList);\n\nexport { SimpleList };","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { Loader } from \"./Loader\";\nimport { MediaLightBox } from \"./MediaLightBox\";\nimport { GuestJoinForm } from \"./GuestJoinForm\";\nimport { MessageSimple } from \"./MessageSimple\";\nimport { SimpleList } from \"./SimpleList\";\nimport { modifyConversation, modifyMessageList, typingString } from \"../utils\";\nimport { connect } from 'react-redux';\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport { \n  getMessageList,\n  sendMessageToConversation,\n  sendMessageToUserId,\n  sendFileToConversation,\n  loadMoreMessages as loadMoreMessagesAction,\n  setActiveConversation,\n  setActiveUserId,\n  registerConversationEventHandlers,\n  deleteMessagesForEveryone,\n  deleteMessagesForMe,\n  banConversationUsers,\n  unbanConversationUsers,\n  startWatchingAndSetActiveConversation,\n  stopWatchingAndSetNullConversation,\n  getConversationBanList,\n  registerEventHandlers\n} from '../actions';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport throttle from 'lodash/throttle';\nimport debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\n\nclass ConversationWindow extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.limit = 25;\n    this.skip = 0;\n    this.showMediaLightBox = false;\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTabChange = this.handleTabChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n    this._markAsRead = throttle(this._markAsRead, 500);\n    this.sendMedia = this.sendMedia.bind(this);\n    this._startTyping = throttle(this._startTyping, 3000);\n    this._stopTyping = debounce(this._stopTyping, 3000);\n\n    this.toggleGuestJoinForm = this.toggleGuestJoinForm.bind(this);\n    this.onJoinedAsGuest = this.onJoinedAsGuest.bind(this);\n\n    this.chMessageBoxRef = React.createRef();\n\n    this.state = {\n      text: '',\n      dummyConversation: null,\n      userId: null,\n      guestJoinFormOpened: false,\n      activeTab: 'chat'\n    }\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  getSnapshotBeforeUpdate(prevProps) {\n    if (prevProps.messagelist.length < this.props.messagelist.length) {\n      if (!this.chMessageBoxRef || !this.chMessageBoxRef.current) {\n        return null;\n      }\n      \n      const chMessageBoxRef = this.chMessageBoxRef.current;\n\n      return {\n        scrollHeight: chMessageBoxRef.scrollHeight,\n        offsetTop: chMessageBoxRef.scrollTop,\n        offsetBottom: chMessageBoxRef.scrollHeight - chMessageBoxRef.scrollTop,\n      }\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { \n      client,\n      conversation,\n      newMessage,\n      userId,\n      loadingMoreMessages } = this.props;\n\n    // Find if need to refresh conversation\n    const refresh = !prevProps.connected && this.props.connected;\n    if (refresh) {\n      this._init();\n    }\n\n    // if userId switches, re-intialize the conversation\n    if (prevProps.userId != userId && userId) {\n      this._init();\n    }\n\n    // Set the conversation after sending first mesage in dummy conversation\n    if (!conversation && prevProps.sendingMessage && !this.props.sendingMessage) {\n      this._scrollToTarget()\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      if (userId) {\n        conversationListQuery.membersExactly = userId;\n        conversationListQuery.isGroup = false;\n      }\n\n      conversationListQuery.list((err, conversations) => {\n        if (conversations.length) {\n          this.props.setActiveConversation(conversations[0])\n          return\n        }\n\n        client.User.get(userId, (err, user) => {\n          this.setState({\n            dummyConversation: {isGroup: false, user}\n          })\n        })\n      })\n    }\n\n    if (!conversation) {\n      return\n    }\n\n    if ((!prevProps.conversation && conversation) || (prevProps.conversation.id != conversation.id)) {\n      this._init();\n    }\n\n    // Scroll to bottom on initial message loading\n    if (prevProps.messageLoading && !this.props.messageLoading) {\n      this._scrollToTarget()\n    }\n\n    // Scroll to Bottom on new message received\n    if((!prevProps.newMessage && newMessage) || (newMessage && prevProps.newMessage.id != newMessage.id) ) {\n      this._scrollToTarget()\n\n      const user = client.getCurrentUser();\n      if (user.id != newMessage.ownerId) {\n        this._markAsRead(conversation)\n      }\n    }\n\n    // Scroll to target after load more mesages\n    if(prevProps.messagelist.length < this.props.messagelist.length) {\n      if (snapshot) {\n        const chMessageBoxRef = this.chMessageBoxRef.current;\n        const target = chMessageBoxRef.scrollHeight - snapshot.offsetBottom;\n        this._scrollToTarget(target);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { conversation } = this.props;\n\n    if (!conversation || conversation.type != 'open' || !conversation.__isWatching) {\n      this.props.setActiveConversation(null);\n      return;\n    }\n\n    // Stop watching open conversation\n    this.props.stopWatchingAndSetNullConversation(conversation)\n  }\n\n  _markAsRead = (conversation) => {\n    if (conversation && conversation.config.typing_events) {\n      conversation.markAsRead();\n    }\n  }\n\n  _scrollToTarget = (target) => {\n    if (!this.chMessageBoxRef) {\n      return\n    }\n\n    const chMessageBoxRef = this.chMessageBoxRef.current;\n    if (Object.prototype.toString.call(target) === \"[object Number]\") {\n      chMessageBoxRef.scrollTop = target;\n      return\n    }\n\n    chMessageBoxRef.scrollTop = chMessageBoxRef.scrollHeight;\n  }\n\n  _init = () => {\n    const { client, conversation, userId, ownProps } = this.props;\n    this.handleTabChange('chat');\n\n    if (!conversation && !userId) {\n      // Handle ownProps\n      if (Object.keys(ownProps).length) {\n        if (ownProps.conversation) {\n          let conversation = ownProps.conversation;\n\n          if (conversation.type != 'open' || conversation.__isWatching) {\n            this.props.setActiveConversation(conversation);\n            return;\n          }\n\n          // Start watching open conversation\n          this.props.startWatchingAndSetActiveConversation(conversation)\n          return;\n        }\n        if (ownProps.userId) {\n          this.props.setActiveUserId(ownProps.userId);\n          return;\n        }\n      }\n      return\n    }\n\n    // If conversation not exist, get the conversation from userId\n    if (!conversation) {\n      this.setState({\n        dummyConversation: null\n      })\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      if (userId) {\n        conversationListQuery.membersExactly = userId;\n        conversationListQuery.isGroup = false;\n      }\n\n      conversationListQuery.list((err, conversations) => {\n        if (conversations.length) {\n          this.props.setActiveConversation(conversations[0])\n          return\n        }\n\n        client.User.get(userId, (err, user) => {\n          this.setState({\n            dummyConversation: {isGroup: false, user}\n          })\n        })\n      })\n    }\n\n    if (!conversation) {\n      return\n    }\n\n    // Register conversation event handlers\n    this.props.registerConversationEventHandlers(conversation);\n\n    // Load messages\n    let messageListQuery = conversation.createMessageListQuery();\n    messageListQuery.limit = this.limit;\n    this.skip = 0;\n    messageListQuery.skip = this.skip;\n    this.props.getMessageList(messageListQuery);\n\n    // Load Banned User Listing\n    if (conversation.isGroup && conversation.isAdmin) {\n      let banListQuery = conversation.createBanListQuery();\n      banListQuery.limit = 100;\n      this.props.getConversationBanList(banListQuery);\n    }\n\n    // Mark as read conversation\n    if (conversation.unreadMessageCount > 0) {\n      conversation.markAsRead();\n    }\n  }\n\n  handleChange(event) {\n    this.setState({text: event.target.value});\n  }\n\n  handleTabChange(type) {\n    this.setState({activeTab: type});\n  }\n\n  handleKeyPress(event) {\n    if(event.key === 'Enter') {\n      event.preventDefault();\n      this.sendMessage();\n      return;\n    }\n\n    this._onTextMessageChanged(event.target.value);\n  }\n\n  toggleGuestJoinForm() {\n    this.setState({guestJoinFormOpened: !this.state.guestJoinFormOpened})\n  }\n  \n  async onJoinedAsGuest(guest) {\n    this.props.registerEventHandlers(this.props.client)\n    await this.props.onJoinedAsGuest(guest)\n    await this.sendMessage();\n  }\n\n  _onTextMessageChanged = (textMessage) => {\n    if (textMessage) {\n      this._startTyping();\n    }\n\n    this._stopTyping();\n  }\n\n  _startTyping = () => {\n    const { conversation } = this.props;\n    if (conversation && conversation.type == \"private\") {\n      conversation.startTyping();\n    }\n  }\n\n  _stopTyping = () => {\n    const { conversation } = this.props;\n    if (conversation  && conversation.type == \"private\") {\n      conversation.stopTyping();\n    }\n  }\n\n  sendFile(file) {\n    const { client, conversation } = this.props;\n    const user = client.getCurrentUser();\n\n    let fileType = file.type.split('/').shift();\n\n    if(file.type.match('application')) {\n\n      const body = {\n        id: uuid(),\n        pending: true,\n        ownerId: user.id,\n        attachments: [{\n          type: fileType,\n          name: file.name\n        }],\n      }\n      \n      this.props.sendFileToConversation(client, conversation, file, body, fileType);\n      return;\n    }\n\n    this.getFileThumbnailUrl(file, (url) => {\n      const body = {\n        id: uuid(),\n        pending: true,\n        ownerId: user.id,\n        attachments: [{\n          type: fileType,\n          thumbnailUrl: url\n        }],\n      }\n\n      if(file.type.match('video')) {\n        body.attachments[0].fileUrl = URL.createObjectURL(file);\n      }\n      \n      this.props.sendFileToConversation(client, conversation, file, body, fileType);\n    });\n  }\n  \n  deleteMessagesForEveryone(msgId) {\n    if (!msgId) return;\n    const { client } = this.props;\n    this.props.deleteMessagesForEveryone(client, [msgId]);\n  }\n\n  deleteMessagesForMe(msgId) {\n    if (!msgId) return;\n    const { client } = this.props;\n    this.props.deleteMessagesForMe(client, [msgId]);\n  }\n\n  banConversationUsers(userId, displayName) {\n    if (!userId) return;\n    const { client, conversation } = this.props;\n    if (!conversation) {\n      return;\n    }\n    this.props.banConversationUsers(conversation, [userId], displayName);\n  }\n\n  unbanConversationUsers(userId) {\n    if (!userId) return;\n    const { client, conversation } = this.props;\n    if (!conversation) {\n      return;\n    }\n    this.props.unbanConversationUsers(conversation, [userId]);\n  }\n  \n  sendMessage() {\n    const { conversation, client, userId, allowGuestUsers } = this.props;\n\n    if (allowGuestUsers && client.isAnonymousUser()) {\n      return this.toggleGuestJoinForm();\n    }\n    \n    const user = client.getCurrentUser();\n    const { text } = this.state;\n\n    if (!text) return;\n\n    let body = {\n      id: uuid(),\n      body: text,\n      ownerId: user.id,\n      pending: true,\n    }\n    this.setState({text: ''})\n\n\n    if (conversation) {\n      this.props.sendMessageToConversation(conversation, body)\n    } else {\n      body.userId = userId;\n      this.props.sendMessageToUserId(client, body)\n    }\n  }\n\n  getFileThumbnailUrl(file, cb) {\n    var fileReader = new FileReader();\n    if (file.type.match('image')) {\n      fileReader.onload = function() {\n        var img = document.createElement('img');\n        cb(fileReader.result);\n      };\n      fileReader.readAsDataURL(file);\n    } else if(file.type.match('video')) {\n      fileReader.onload = function() {\n        var blob = new Blob([fileReader.result], {type: file.type});\n        var url = URL.createObjectURL(blob);\n        var video = document.createElement('video');\n        var timeupdate = function() {\n          if (snapImage()) {\n            video.removeEventListener('timeupdate', timeupdate);\n            video.pause();\n          }\n        };\n        video.addEventListener('loadeddata', function() {\n          if (snapImage()) {\n            video.removeEventListener('timeupdate', timeupdate);\n          }\n        });\n        var snapImage = function() {\n          var canvas = document.createElement('canvas');\n          canvas.width = video.videoWidth;\n          canvas.height = video.videoHeight;\n          canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n          var image = canvas.toDataURL();\n          var success = image.length > 100000;\n          if (success) {\n            var img = document.createElement('img');\n            img.src = image;\n            cb(image);\n            URL.revokeObjectURL(url);\n          }\n          return success;\n        };\n        video.addEventListener('timeupdate', timeupdate);\n        video.preload = 'metadata';\n        video.src = url;\n        // Load video in Safari / IE11\n        video.muted = true;\n        video.playsInline = true;\n        video.play();\n      };\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  onCloseIconClick = () => {\n    this.props.setActiveConversation(null)\n\n    const { onCloseIconClick } = this.props;\n    if (onCloseIconClick && typeof onCloseIconClick == 'function') {\n      onCloseIconClick();\n    }\n  }\n\n  onScroll() {\n    const { messagelist, conversation, loadingMoreMessages, allMessagesLoaded } = this.props;\n    if (!conversation) {\n      return null\n    }\n\n    const chMessageBoxRef = this.chMessageBoxRef.current;\n    if (loadingMoreMessages || allMessagesLoaded || messagelist.length < this.limit) {\n      return\n    }\n\n    if(chMessageBoxRef.scrollTop < chMessageBoxRef.clientHeight) {\n      // Set skip\n      this.skip = messagelist.length;\n\n      let messageListQuery = conversation.createMessageListQuery();\n      messageListQuery.limit = this.limit;\n      messageListQuery.skip = this.skip;\n      this.props.loadMoreMessagesAction(messageListQuery)\n    }\n  }\n\n  blockUser() {\n\n  }\n\n  unblockUser() {\n\n  }\n\n  sendMedia(event) {\n    this.sendFile(event.target.files[0]);\n    event.target.value = null;\n  }\n\n  viewMediaToggle(message) {\n    let file = message ? message.attachments[0] : null\n    this.setState({openMediaFile: file});\n  }\n\n  render() {\n    let { \n      client,\n      connecting,\n      connected,\n      messageError,\n      messageLoading,\n      loadingMoreMessages,\n      messagelist,\n      conversation,\n      showCloseIcon,\n      showChevron,\n      disableComposer,\n      disableComposerMessage,\n      Message,\n      showHeader = true,\n      renderHeader,\n      showComposerActions = true,\n      typing,\n      noConversationFoundMessage,\n      allowGuestUsers,\n      banList,\n      showDeletedMessageCard = true\n    } = this.props;\n\n    const { text, dummyConversation, activeTab } = this.state;\n\n    // Set dummy conversation if conversation doesn't exist\n    if (!conversation) {\n      conversation = dummyConversation\n      messagelist = [];\n    }\n\n    // Modify message list\n    messagelist = modifyMessageList(client, conversation, messagelist);\n\n    // Disable composer setting\n    let composerDisabled = false;\n    if (disableComposer && typeof disableComposer == 'function') {\n      composerDisabled = disableComposer(conversation)\n    }\n\n    // Set header details\n    let headerActionButton;\n    let headerTitle;\n    let headerImage;\n    let headerSubtitle;\n    let conversationAdmins = [];\n    let showTabs = false;\n\n    const user = client.getCurrentUser();\n\n    if (conversation) {\n      conversation = modifyConversation(conversation, user);\n      headerTitle = conversation.title;\n      headerImage = conversation.profileImageUrl;\n\n      if (!conversation.isGroup && conversation.user) {\n        headerSubtitle = conversation.user.isOnline ? 'Online' : 'Last Seen ' + moment(conversation.user.lastSeen).fromNow();\n      }\n\n      if (conversation.isGroup) {\n        headerSubtitle = conversation.memberCount + ' Members';\n      }\n\n      // Action buttons\n      if(!conversation.isActive) {\n        headerActionButton = <div id=\"ch_conv_unblock\" onClick={() => this.unblockUser()}>Unblock User</div>\n      } else {\n        headerActionButton = <div id=\"ch_conv_block\" onClick={() => this.blockUser()}>Block User</div>\n      }\n\n      if(conversation.ban && Object.keys(conversation.ban).length) {\n        composerDisabled = true;\n        disableComposerMessage = LANGUAGE_PHRASES.BAN_USER_MESSAGE\n      }\n\n      if(!allowGuestUsers && !conversation.canChat()) {\n        composerDisabled = true;\n        disableComposerMessage = LANGUAGE_PHRASES.NOT_ALLOWED_TO_CHAT\n      }\n\n      // Store conversation admins for easy comparision later\n      if (conversation.members && conversation.members.length) {\n        conversationAdmins = conversation.members\n        .filter(member => member.isAdmin === true)\n        .map(member => member.userId);\n      }\n\n      // Check show tabs in conversation window or not.\n      showTabs = connected && !messageLoading && conversation.isAdmin && conversation.type && [\"open\", \"public\"].includes(conversation.type);\n    }\n    const typingStrings = typingString(typing);\n\n    return (\n      <div id=\"ch_conv_window\" className=\"ch-conv-window\">\n        { conversation && showHeader && renderHeader && renderHeader(conversation) }\n        { conversation && showHeader && !renderHeader && <Header\n          imageSrc={headerImage}\n          imageInitials={headerTitle}\n          title={headerTitle}\n          subtitle={headerSubtitle}\n          showChevron={(showChevron && headerActionButton) ? true : false}\n          renderDropDownList={() => {\n            if (!headerActionButton) {\n              return\n            }\n\n            return (\n              <div className=\"ch-drop-down-list\">\n                {headerActionButton}\n              </div>\n            )\n          }}\n\n          renderRight={() => {\n            return (\n              <React.Fragment>\n                { showCloseIcon && <i title=\"Close\" translate=\"no\" className=\"material-icons\" onClick={this.onCloseIconClick}>close</i>}\n              </React.Fragment>\n            )\n          }}/>\n        }\n\n        { showTabs && \n          <div className=\"conversation-window-tabs\">\n            <button onClick={()=>this.handleTabChange('chat')} className={\"chat \" + (activeTab == 'chat' ? 'active' : '')}>Chat</button>\n            <button onClick={()=>this.handleTabChange('manage')} className={\"manage \" + (activeTab == 'manage' ? 'active' : '')}>Manage</button>\n          </div>\n        }\n        \n        <React.Fragment >\n          <div style={{display: (activeTab == 'chat') ? 'block' : 'none'}} id=\"ch_messages_box\" ref={this.chMessageBoxRef} className=\"ch-messages-box\" onScroll={this.onScroll}>\n            { <div className=\"ch-conversation-padding\"> </div>}\n           \n            { (connecting || messageLoading) &&  <div className=\"center\"><Loader /></div>}\n\n            { messageError && <div className=\"center error\">{messageError}</div>}\n\n            <div className=\"ch-msg-list\">\n              { connected && !conversation && !messageLoading && noConversationFoundMessage && <div className=\"center no-record-found\">{noConversationFoundMessage}</div>}\n\n              { loadingMoreMessages && <Loader />}\n\n              { conversation && !messagelist.length && !messageLoading && <div className=\"center no-record-found\">Be the first one to post a message!</div>}\n\n\n              {\n                messagelist.map(message => {\n                  if(message.isDeleted && !showDeletedMessageCard) {\n                    return;\n                  }\n                  return <Message \n                      key={message.id} \n                      message={message} \n                      isSentByAdmin={ conversationAdmins.includes(message.ownerId) }\n                      onClickEvent={()=>this.viewMediaToggle(message)}\n                      showMoreOptionsIcon={[\"open\"].includes(conversation.type) && !conversation.isAdmin ? false : true}\n                      renderMoreOptions={() => {\n                      return (\n                        <div className=\"ch-more-options-container\">\n                          { client.privateKey && conversation.config.allow_delete_message_by_admin && !message.isDeleted && <p onClick={()=>this.deleteMessagesForEveryone(message.id)}>{LANGUAGE_PHRASES.DELETE_MESSAGE}</p>}\n                          { !client.privateKey && message.ownerId == user.id && !message.isDeleted && <p onClick={()=>this.deleteMessagesForEveryone(message.id)}>{LANGUAGE_PHRASES.DELETE_FOR_EVERYONE}</p>}\n                          { !client.privateKey && ![\"open\", \"public\"].includes(conversation.type) && <p onClick={()=>this.deleteMessagesForMe(message.id)}>{LANGUAGE_PHRASES.DELETE_FOR_ME}</p> }\n                          { \n                            message.ownerId != user.id &&\n                            conversation.isGroup && \n                            conversation.isAdmin && \n                            !banList.find(user => user.userId == message.ownerId) && \n                            <p onClick={()=> this.banConversationUsers(message.ownerId, message.owner.displayName)}>{LANGUAGE_PHRASES.BAN_USER}</p>\n                          }\n                          { \n                            message.ownerId != user.id &&\n                            conversation.isGroup && \n                            conversation.isAdmin && \n                            banList.find(user => user.userId == message.ownerId) && \n                            <p onClick={()=> this.unbanConversationUsers(message.ownerId)}>{LANGUAGE_PHRASES.UNBAN_USER}</p>\n                          }\n                        </div>\n                      )\n                      }}\n                    />\n                })\n              }\n\n              <div className=\"ch-typing-strings\">{typingStrings}</div>\n            </div>\n          </div>\n\n          { conversation &&\n            <div style={{display: (activeTab == 'chat') ? 'block' : 'none'}}>\n              { composerDisabled ?\n                <div className=\"ch-composer-disabled-box\">\n                  <div>{disableComposerMessage}</div>\n                </div>\n                :\n                <div id=\"ch_send_box\" className=\"ch-send-box\">\n\n                { showComposerActions &&\n                  <>\n                    <div className=\"ch-media-icon-box\">\n                      <i title={LANGUAGE_PHRASES.SHARE_GALLERY} translate=\"no\" className=\"material-icons ch-attachment-icon\">insert_photo</i>\n                      <input id=\"ch_gallary_input\" title={LANGUAGE_PHRASES.SHARE_GALLERY} className=\"ch-gallary-input\" type=\"file\" accept=\"image/*, video/*\" onChange={this.sendMedia} />\n                    </div>\n\n                    <div className=\"ch-media-icon-box\">\n                      <i title={LANGUAGE_PHRASES.SHARE_DOCUMENT} translate=\"no\" className=\"material-icons ch-attachment-icon\">description</i>\n                      <input id=\"ch_document_input\" title={LANGUAGE_PHRASES.SHARE_DOCUMENT} className=\"ch-document-input\" type=\"file\" accept=\"application/*,.doc,.docx,.xls,.ppt\" onChange={this.sendMedia} />\n                    </div>\n                  </>\n                }\n                  <textarea \n                    id=\"ch_input_box\"\n                    className=\"ch-input-box\"\n                    type=\"text\"\n                    placeholder={LANGUAGE_PHRASES.SEND_MESSAGE}\n                    value={text}\n                    onKeyPress={(e) => { this.handleKeyPress(e) }}\n                    onChange={(e) => { this.handleChange(e) }} \n                    ></textarea>\n\n                    <button\n                      id=\"ch_send_button\"\n                      className=\"ch-send-button\"\n                      title={LANGUAGE_PHRASES.SEND}\n                      onClick={this.sendMessage}\n                    >\n                      <i translate=\"no\" className=\"ch-send-icon material-icons\">send</i>\n                    </button>\n\n                </div>\n              }\n            </div>\n          }\n\n          { this.state.openMediaFile && <MediaLightBox file={this.state.openMediaFile} onCloseClick={()=> this.viewMediaToggle(null)} /> }\n\n          { this.state.guestJoinFormOpened && <GuestJoinForm onCloseClick={this.toggleGuestJoinForm} onJoinedAsGuest={this.onJoinedAsGuest} /> }\n        </React.Fragment>\n\n        <React.Fragment>\n          <div className=\"conversation-window-manage\" style={{display: (activeTab == 'manage') ? 'block' : 'none'}}>\n            { !banList.length && <div className=\"center no-record-found\">Currently, no user is banned from sending messages to this Show</div>}\n            <ul>\n              {\n                banList.map(user => {\n                  return (\n                    <SimpleList\n                      key={user.userId}\n                      title={user.user.displayName}\n                      action={() => {\n                        return (\n                          <React.Fragment>\n                            <span onClick={()=>this.unbanConversationUsers(user.userId)}>{LANGUAGE_PHRASES.UNBAN_USER}</span>\n                          </React.Fragment>\n                        )\n                      }}\n                    />\n                  );\n               })\n              }\n            </ul>\n          </div>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nConversationWindow = withChannelizeContext(ConversationWindow);\n\nConversationWindow.propTypes = {\n  Message: PropTypes.elementType,\n}\n\nConversationWindow.defaultProps = {\n  Message: MessageSimple,\n  showHeader: true,\n  showComposerActions: true,\n  noConversationFoundMessage: LANGUAGE_PHRASES.NO_CONVERSATION_SELECTED, \n  allowGuestUsers: false\n};\n\nconst mapStateToProps = ({message, conversation, client}, ownProps) => {\n  return {...message, ...client, ownProps: ownProps}\n}\n\nConversationWindow = connect(\n  mapStateToProps,\n   {\n    getMessageList,\n    sendMessageToConversation,\n    sendMessageToUserId,\n    sendFileToConversation,\n    loadMoreMessagesAction,\n    setActiveConversation,\n    setActiveUserId,\n    registerConversationEventHandlers,\n    deleteMessagesForEveryone,\n    deleteMessagesForMe,\n    banConversationUsers,\n    unbanConversationUsers,\n    startWatchingAndSetActiveConversation,\n    stopWatchingAndSetNullConversation,\n    getConversationBanList,\n    registerEventHandlers\n   }\n)(ConversationWindow);\n\nexport { ConversationWindow }","import React, { Component } from 'react';\nimport { withChannelizeContext } from '../context';\nimport { dateSeparatorParser } from '../utils'\nimport { Avatar } from \"./Avatar\";\nimport { LANGUAGE_PHRASES } from \"../constants\";\nimport { OutsideClickHandler } from './OutsideClickHandler';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\n\nclass MessageLivestream extends Component {\n\tconstructor(props) {\n  \tsuper(props);\n  \tthis.state = {\n  \t\tshowMoreOptions: false\n\t\t}\n\t}\n\n\ttoggleMoreOptions = () => {\n    this.setState((state) => ({\n  \t\tshowMoreOptions: !state.showMoreOptions\n    }));\n\t}\n\n\thideMoreOptions = () => {\n\t\tif (!this.state.showMoreOptions) return;\n\t\tthis.setState((state) => ({\n\t\t\tshowMoreOptions: false\n\t\t}));\n\t}\n\n\tshowImage(url) {\n\t\tvar link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\n\t}\n\n\tdownloadFile(url, name) {\n\t  var link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  link.download = name;\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\t}\n\n\trenderMarkdown = (text) => {\n\t\treturn (\n\t\t\t<ReactMarkdown\n\t\t\t\tremarkPlugins={[gfm]}\n\t\t\t\tchildren={text}\n\t\t\t\tlinkTarget=\"_blank\"\n\t\t\t/>\n\t\t)\n\t}\n\n\trender() {\n\t\tconst { client, message, isSentByAdmin, showMoreOptionsIcon, renderMoreOptions } = this.props;\n\n\t\tconst { showMoreOptions } = this.state;\n\n\t\t// Set class for user/owner message\n\t\tlet msgContainerPos = \"left\";  \n\n\t\tlet adminMsg = message.type === \"admin\" ? true : false;\n\t\tlet adminMessageType = null;\n\t\tif (adminMsg) {\n\t\t\tconst attachment = message.attachments.length ? message.attachments[0] : null;\n\t\t\tif (attachment) {\n\t\t\t\tadminMessageType = attachment.adminMessageType;\n\t\t\t}\n\t\t}\n\n\t\tlet fileMessage;\n\t\tif (message.attachments && message.attachments.length) {\n\t\t\tfileMessage = message.attachments.map(attachment => {\n\t\t\t\tswitch(attachment.type) {\n\t\t\t\tcase \"image\":\n\t\t\t\t\treturn <img className=\"ch-image-message\" src={attachment.thumbnailUrl ? attachment.thumbnailUrl : attachment.fileUr} onClick={()=>this.showImage(attachment.fileUrl)}/>\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"video\":\n\t\t\t\t\treturn (\n\t\t\t\t\t<div className=\"ch-video-container\">\n\t\t\t\t\t\t<img className=\"ch-image-message\" src={attachment.thumbnailUrl} onClick={()=>this.showImage(attachment.fileUrl)}/>\n\t\t\t\t\t\t<i translate=\"no\" className=\"material-icons ch-video-play-icon\">play_circle_outline</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"application\":\n\t\t\t\t\treturn (\n\t\t\t\t\t<div className=\"ch-text-message\">\n\t\t\t\t\t\t<div className=\"ch-message-body\">\n\t\t\t\t\t\t\t<div className=\"ch-docs-data\">\n\t\t\t\t\t\t\t<i translate=\"no\" className=\"material-icons ch-attachment-icon\">description</i>\n\t\t\t\t\t\t\t<span className=\"ch-docs-name\">{attachment.name}</span>\n\t\t\t\t\t\t\t<i translate=\"no\" className=\"material-icons ch-docs-download-icon\" onClick={() =>this.downloadFile(attachment.fileUrl, attachment.name)}>arrow_downward</i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"ch-docs-details\">\n\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t<span>{attachment.extension}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ message.showDateSeparator && \n\t\t\t\t\t<div key={`${message.id}-date`} className=\"ch-msg-padding\">\n\t\t\t\t\t\t<div className=\"ch-message-date-separator\">\n\t\t\t\t\t\t\t<div className=\"message-date-separator_left\"></div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_text\">{dateSeparatorParser(message.createdAt)}</div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_right\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t{ adminMsg ?\n\t\t\t\t\t<div className={`ch-admin-msg-container ${message.type} ${adminMessageType}`}>\n\t\t\t\t\t\t<span className=\"ch-admin-msg\">{message.text}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div key={message.id} className={`ch-msg-padding ${msgContainerPos}`}>\n\t\t\t\t\t\t<div className={`ch-msg-container ch-msg-container-livestream ${message.type}`}>\n\t\t\t\t\t\t\t<Avatar src={message.owner.profileImageUrl} initials={message.owner.displayName} className=\"ch-message-owner-avatar\"></Avatar>\n\t\t\t\t\t\t\t<div className={`ch-msg-content ch-msg-content__livestream`}>\n\t\t\t\t\t\t\t\t{ message.body && \n\t\t\t\t\t\t\t\t\t<div className={`ch-text-message`}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"ch-message-owner-name\">{message.owner.displayName}\n\t\t\t\t\t\t\t\t\t\t\t{isSentByAdmin && <span> ({LANGUAGE_PHRASES.HOST})</span>}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{this.renderMarkdown(message.body)}\n\t\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{fileMessage}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{showMoreOptionsIcon && \n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"ch-msg-more-icon\">\n\t\t\t\t\t\t\t\t\t\t<i translate=\"no\" className=\"material-icons\" onClick={()=>this.toggleMoreOptions()}>more_vert</i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<OutsideClickHandler onOutsideClick={()=>this.hideMoreOptions()}>\n\t\t\t\t\t\t\t\t\t\t<div onClick={()=>this.toggleMoreOptions()}>\n\t\t\t\t\t\t\t\t\t\t\t{ showMoreOptions && renderMoreOptions && renderMoreOptions()}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</OutsideClickHandler>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nMessageLivestream = withChannelizeContext(MessageLivestream);\n\nexport { MessageLivestream };","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { Loader } from \"./Loader\";\nimport { connect } from 'react-redux';\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport { \n  getFriendsList,\n  loadMoreFriends,\n  getMoreUsersList,\n  searchFriends as searchFriendsAction,\n  setActiveUserId,\n} from '../actions';\nimport debounce from 'lodash/debounce';\nimport { Avatar } from './Avatar';\n\nclass SearchWindow extends PureComponent {\n\n\tconstructor(props) {\n    super(props);\n    this.searchLimit = 10;\n    this.friendsLimit = 50;\n\n    this.state = {\n      searchText: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this._searchOnServer = debounce(this._searchOnServer, 800)\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { client, connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    if (!prevProps.connected && connected) {\n      this._init();\n    }\n  }\n\n  _init = () => {\n    const { client } = this.props;\n\n    // Load friends\n    let friendsListQuery = client.User.createUserListQuery();\n    friendsListQuery.limit = this.friendsLimit;\n    friendsListQuery.skip = 0;\n    friendsListQuery.sort = 'isOnline DESC, displayName ASC ';\n    this.props.getFriendsList(friendsListQuery);\n  }\n\n  handleChange(event) {\n    let inputValue = event.target.value;\n    this.setState({searchText: inputValue})\n\n    if (!inputValue) {\n      return\n    }\n    this._searchOnServer(inputValue);\n  }\n\n  _searchOnServer = (value) => {\n    const { client } = this.props;\n\n    // search friends\n    let friendsListQuery = client.User.createUserListQuery();\n    friendsListQuery.limit = this.searchLimit;\n    friendsListQuery.skip = 0;\n    friendsListQuery.search = value;\n    friendsListQuery.sort = 'isOnline DESC, displayName ASC';\n    this.props.searchFriendsAction(friendsListQuery);\n\n    // Load more users\n    let moreUsersListQuery = client.User.createUserListQuery();\n    moreUsersListQuery.limit = this.searchLimit;\n    moreUsersListQuery.skip = 0;\n    moreUsersListQuery.search = value;\n    moreUsersListQuery.sort = 'isOnline DESC, displayName ASC';\n    this.props.getMoreUsersList(moreUsersListQuery);\n  }\n\n  clearSearch = () => {\n    this.setState({searchText: ''})\n  }\n\n  onContactClick = (userId) => {\n    const { onContactClick } = this.props;\n    this.props.setActiveUserId(userId)\n\n    if (onContactClick && typeof onContactClick == 'function') {\n      onContactClick(userId)\n    }\n  }\n\n  render() {\n    let {\n      connecting, \n      connected,\n      loadingFriendsList,\n      loadingSearchFriends,\n      friendslist,\n      moreUsersList,\n      searchFriends,\n      showArrowBack,\n      onBack\n    } = this.props;\n    const { searchText } = this.state;\n\n    let list = friendslist;\n    if (searchText) {\n      list = searchFriends;\n    } else {\n      moreUsersList = [];\n    }\n\n    const showMoreUsers = moreUsersList.length ? true : false;\n\n  \treturn (\n      <div id=\"ch_search_window\" className=\"ch-search-window\">\n        <Header\n          showArrowBack={showArrowBack}\n          onBack={onBack}\n          title={LANGUAGE_PHRASES.SEARCH} \n        />\n\n        <div id=\"ch_search_box\" className=\"ch-search-box\">\n          <input placeholder=\"Search\" id=\"ch_search_input_box\" className=\"ch-search-input-box\" value={searchText} onChange={this.handleChange} />\n          { searchText && <i id=\"ch_clear_search_icon\" translate=\"no\" className=\"material-icons ch-clear-search-icon\" onClick={this.clearSearch}>close</i>}\n        </div>\n\n        <div id=\"ch_friends_box\" className=\"ch-friends-box\">\n          { (connecting || loadingFriendsList) && <div className=\"center\"><Loader /></div>}\n\n          { loadingSearchFriends && <div><Loader /></div>}\n\n          { connected && searchText && !list.length && !showMoreUsers && !loadingFriendsList && !loadingSearchFriends && <div className=\"center no-record-found\">No Record Found</div>}\n\n          <div id=\"ch_suggested_box\">\n            { !searchText && !loadingFriendsList && <div id=\"ch_suggested\" className=\"ch-suggested\">{LANGUAGE_PHRASES.SUGGESTED}</div>}\n\n            {list.map(friend => {\n              return (\n                <li key={friend.id} id={friend.id} className=\"ch-friends-list\" onClick={() => this.onContactClick(friend.id)}>\n                  <Avatar \n                    src={friend.profileImageUrl}\n                    initials={friend.displayName} \n                    className=\"ch-contact-img\" \n                  >\n                    {friend.isOnline && <span className=\"ch-online-icon ch-show-element\"></span>}\n                  </Avatar>\n                  <div id=\"ch_friend_name\" className=\"ch-friend-name\">{friend.displayName}</div>\n                </li>\n              )})\n            }\n          </div>\n\n          { showMoreUsers &&\n            <div id=\"ch_users_box\">\n              <div id=\"ch_more_users\" className=\"ch-more-users\">{LANGUAGE_PHRASES.MORE_USERS}</div>\n              { moreUsersList.map((user) => {\n                return (\n                  <li key={user.id} id={user.id} className=\"ch-friends-list\" onClick={() => this.onContactClick(user.id)}>\n                    <Avatar \n                      src={user.profileImageUrl}\n                      initials={user.displayName} \n                      className=\"ch-contact-img\"\n                      >\n                        {user.isOnline && <span className=\"ch-online-icon ch-show-element\"></span>}\n                      </Avatar>\n                    <div id=\"ch_friend_name\" className=\"ch-friend-name\">{user.displayName}</div>\n                  </li>\n                )})\n              }\n            </div>\n          }\n        </div>\n      </div>\n\t\t);\n  }\n}\n\nSearchWindow = withChannelizeContext(SearchWindow);\n\nconst mapStateToProps = ({user, client}) => {\n  return {...user, ...client}\n}\n\nSearchWindow = connect(\n  mapStateToProps,\n  { \n  getFriendsList,\n  loadMoreFriends ,\n  getMoreUsersList,\n  searchFriendsAction,\n  setActiveUserId }\n)(SearchWindow)\n\nexport { SearchWindow };","import { \n  LOADING_FRIENDS_LIST,\n  FRIENDS_LIST_FAIL,\n  FRIENDS_LIST_SUCCESS,\n  LOADING_LOAD_MORE_FRIENDS,\n  LOAD_MORE_FRIENDS_SUCCESS,\n  LOAD_MORE_FRIENDS_FAIL,\n  LOADING_MORE_USERS_LIST,\n  MORE_USERS_LIST_FAIL,\n  MORE_USERS_LIST_SUCCESS,\n  LOADING_SEARCH_FRIENDS,\n  SEARCH_FRIENDS_SUCCESS,\n  SEARCH_FRIENDS_FAIL\n} from '../constants';\n\nexport const getFriendsList = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_FRIENDS_LIST,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: FRIENDS_LIST_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: FRIENDS_LIST_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};\n\nexport const loadMoreFriends = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_FRIENDS,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_FRIENDS_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: LOAD_MORE_FRIENDS_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};\n\nexport const getMoreUsersList = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_MORE_USERS_LIST,\n      payload: {}\n    });\n    return userListQuery.usersList((err, response) => {\n      if (err) {\n        dispatch({\n          type: MORE_USERS_LIST_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: MORE_USERS_LIST_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};\n\nexport const searchFriends = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_SEARCH_FRIENDS,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: SEARCH_FRIENDS_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: SEARCH_FRIENDS_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};","import {\n  CONNECTING,\n  CONNECT_SUCCESS,\n  CONNECT_FAIL,\n  DISCONNECT_SUCCESS,\n  DISCONNECT_FAIL\n} from '../constants';\n\nconst INITIAL_STATE = {\n  connecting: false,\n  connected: false,\n  error: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CONNECTING:\n      return { ...state, connecting: true };\n\n    case CONNECT_SUCCESS:\n\t    return { ...state, connected: true , connecting: false};\n\n\t  case CONNECT_FAIL:\n\t    return { ...state, connected: false, error: action.payload, connecting: false };\n\n  \tcase DISCONNECT_SUCCESS:\n  \t  return { ...state, connected: false };\n\n  \tcase DISCONNECT_FAIL:\n  \t  return { ...state, connected: true, error: action.payload };\n    \n    default:\n      return state;\n  }\n};\n","import {\n  LOADING_CONVERSATION_LIST,\n  CONVERSATION_LIST_FAIL,\n  CONVERSATION_LIST_SUCCESS,\n  LOADING_LOAD_MORE_CONVERSATIONS,\n  LOAD_MORE_CONVERSATIONS_FAIL,\n  LOAD_MORE_CONVERSATIONS_SUCCESS,\n  USER_STATUS_UPDATED_EVENT,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  USER_JOINED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  CONVERSATION_UPDATED_EVENT,\n  USER_UPDATED_EVENT,\n  MARK_AS_READ_EVENT,\n  DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n  DELETE_MESSAGE_EVENT,\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\n\nconst INITIAL_STATE = {\n  conversationlist: [],\n  conversationLoading: false,\n  loadingMoreConversations: false,\n  allConversationsLoaded: false,\n  conversationError: null,\n\n};\n\nexport const loadingConversationList = (state, action) => {\n  state.conversationLoading = true;\n};\n\nexport const listConversationSuccess = (state, action) => {\n  state.conversationLoading = false;\n  state.conversationlist = action.payload;\n};\n\nexport const listConversationFail = (state, action) => {\n  state.conversationLoading = false;\n  state.conversationError = action.payload;\n};\n\nexport const loadingLoadMoreConversations = (state, action) => {\n  state.loadingMoreConversations = true;\n};\n\nexport const loadMoreConversationsSuccess = (state, action) => {\n  state.loadingMoreConversations = false;\n  if (!action.payload.length) {\n    state.allConversationsLoaded = true;\n  } else {\n    state.conversationlist = [...state.conversationlist, ...action.payload];\n    state.conversationlist = uniqueList(state.conversationlist);\n  }\n};\n\nexport const loadMoreConversationsFail = (state, action) => {\n  state.loadingMoreConversations = false;\n  state.conversationError = action.payload;\n};\n\nexport const userStatusUpdated = (state, action) => {\n  let user = action.payload.user;\n  const finalList = state.conversationlist.map((conversation, index) => {\n    if (!conversation.isGroup && conversation.user.id == user.id) {\n      conversation.user.isOnline = user.isOnline;\n      conversation.user.lastSeen = user.lastSeen;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  state.conversationlist = finalList;\n};\n\nexport const userUpdated = (state, action) => {\n  let user = action.payload.user;\n  const finalList = state.conversationlist.map((conversation, index) => {\n    if (!conversation.isGroup && conversation.user.id == user.id) {\n      conversation.user.isOnline = user.isOnline;\n      conversation.user.lastSeen = user.lastSeen;\n      conversation.user.displayName = user.displayName;\n      conversation.user.profileImageUrl = user.profileImageUrl;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  state.conversationlist = finalList;\n};\n\nexport const newMessageReceived = (state, action) => {\n  let message = action.payload.message;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.conversationlist.map((conversation, index) => {\n    if (conversation.id == message.conversationId) {\n      conversation.lastMessage = message;\n      conversation.updatedAt = action.payload.timestamp;\n\n      conversationIndex = index;\n      latestConversation = conversation;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.conversationlist = finalList;\n};\n\nexport const deleteMessagesForEveryoneEvent = (state, action) => {\n  let messages = action.payload.messages;\n  const finalList = state.conversationlist.map((conversation) => {\n    if (conversation.id == action.payload.conversation.id && conversation.lastMessage) {\n      let deletedMessageIds = messages.map(msg => msg.id);\n      if (deletedMessageIds.includes(conversation.lastMessage.id)) {\n        conversation.lastMessage.isDeleted = true;\n        conversation.lastMessage.body = \"\";\n        conversation.lastMessage.attachments = [];\n        conversation.updatedAt = action.payload.timestamp;\n        return conversation;\n      } else {\n        return conversation;\n      }\n    } else {\n      return conversation;\n    }\n  });\n  \n  state.conversationlist = finalList;\n};\n\nexport const deleteMessageEvent = (state, action) => {\n  let messages = action.payload.messages;\n  state.conversationlist.map((conversation, index) => {\n    if (conversation.id != action.payload.conversation.id || !conversation.lastMessage) {\n      return;\n    }\n    let deletedMessageIds = messages.map(msg => msg.id);\n    if (!deletedMessageIds.includes(conversation.lastMessage.id)) {\n      return;\n    }\n    state.conversationlist[index] = action.payload.conversation;\n  });\n};\n\nexport const conversationUpdated = (state, action) => {\n  let conversation = action.payload.conversation;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.conversationlist.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.title = conversation.title;\n      item.profileImageUrl = conversation.profileImageUrl;\n      item.updatedAt = action.payload.timestamp;\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.conversationlist = finalList;\n};\n\nexport const userJoined = (state, action) => {\n  const { conversation } = action.payload;\n  state.conversationlist = [...[conversation], ...state.conversationlist];\n  state.conversationlist = uniqueList(state.conversationlist);\n};\n\nexport const membersAdded = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.conversationlist.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.memberCount = conversation.memberCount;\n      item.updatedAt = timestamp;\n      item.members = item.members.concat(members)\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.conversationlist = finalList;\n};\n\nexport const membersRemoved = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.conversationlist.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.memberCount = conversation.memberCount;\n      item.updatedAt = timestamp;\n\n      // Remove members\n      members.forEach(removedMember => {\n        const index = item.members.findIndex(member => member.userId == removedMember.id)\n        if (index >=0) {\n          item.members.splice(index, 1);\n        }\n      })\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.conversationlist = finalList;\n};\n\nexport const markAsRead = (state, action) => {\n  let { conversation, user, timestamp } = action.payload;\n\n  const finalList = state.conversationlist.map((item, index) => {\n    if (item.id == conversation.id) {\n      if (item.lastReadAt[user.id]) {\n        item.lastReadAt[user.id] = timestamp;\n      }\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  state.conversationlist = finalList;\n}\n\nexport const handlers = {\n  [LOADING_CONVERSATION_LIST]: loadingConversationList,\n  [CONVERSATION_LIST_FAIL]: listConversationFail,\n  [CONVERSATION_LIST_SUCCESS]: listConversationSuccess,\n  [LOADING_LOAD_MORE_CONVERSATIONS]: loadingLoadMoreConversations,\n  [LOAD_MORE_CONVERSATIONS_FAIL]: loadMoreConversationsFail,\n  [LOAD_MORE_CONVERSATIONS_SUCCESS]: loadMoreConversationsSuccess,\n  [USER_STATUS_UPDATED_EVENT]: userStatusUpdated,\n  [NEW_MESSAGE_RECEIVED_EVENT]: newMessageReceived,\n  [USER_JOINED_EVENT]: userJoined,\n  [MEMBERS_ADDED_EVENT]: membersAdded,\n  [MEMBERS_REMOVED_EVENT]: membersRemoved,\n  [CONVERSATION_UPDATED_EVENT]: conversationUpdated,\n  [USER_UPDATED_EVENT]: userUpdated,\n  [MARK_AS_READ_EVENT]: markAsRead,\n  [DELETE_MESSAGE_FOR_EVERYONE_EVENT]: deleteMessagesForEveryoneEvent,\n  [DELETE_MESSAGE_EVENT]: deleteMessageEvent,\n\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { \n  LOADING_MESSAGE_LIST,\n  MESSAGE_LIST_FAIL,\n  MESSAGE_LIST_SUCCESS,\n  SENDING_MESSAGE,\n  SEND_MESSAGE_FAIL,\n  SEND_MESSAGE_SUCCESS,\n  SENDING_FILE,\n  SEND_FILE_FAIL,\n  SEND_FILE_SUCCESS,\n  LOADING_LOAD_MORE_MESSAGES,\n  LOAD_MORE_MESSAGES_SUCCESS,\n  LOAD_MORE_MESSAGES_FAIL,\n  SET_ACTIVE_CONVERSATION,\n  SET_ACTIVE_USERID,\n  CONVERSATION_UPDATED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  USER_STATUS_UPDATED_EVENT,\n  USER_UPDATED_EVENT,\n  MARK_AS_READ_EVENT,\n  TYPING_EVENT,\n  DELETE_MESSAGE_EVENT,\n  DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n  DELETING_MESSAGES_FOR_EVERYONE,\n  DELETE_MESSAGES_FOR_EVERYONE_FAIL,\n  DELETE_MESSAGES_FOR_EVERYONE_SUCCESS,\n  DELETING_MESSAGES_FOR_ME,\n  DELETE_MESSAGES_FOR_ME_FAIL,\n  DELETE_MESSAGES_FOR_ME_SUCCESS,\n  START_WATCHING_PROGRESS,\n  START_WATCHING_FAIL,\n  START_WATCHING_SUCCESS,\n  STOP_WATCHING_PROGRESS,\n  STOP_WATCHING_FAIL,\n  STOP_WATCHING_SUCCESS,\n  CONVERSATION_BAN_UPDATED_EVENT,\n  CONVERSATION_BAN_LIST_SUCCESS,\n  BAN_CONVERSATION_USERS_SUCCESS,\n  UNBAN_CONVERSATION_USERS_SUCCESS,\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\n\nconst Channelize = window.Channelize;\n\nconst INITIAL_STATE = {\n  messagelist: [],\n  messageLoading: false,\n  messageError: null,\n  loadingMoreMessages: false,\n  allMessagesLoaded: false,\n  sendingMessage: false,\n\n  //typing event\n  typing: [],\n\n  // Active conversation and userId\n  conversation: null,\n  userId: null,\n\n  newMessage: null,\n  sendingFile: false,\n\n  // Conversation ban user list\n  banList: [],\n};\n\nexport const loadingMessageList = (state, action) => {\n  state.messageLoading = true;\n  state.messagelist = [];\n  state.allMessagesLoaded = false;\n};\n\nexport const messageListSuccess = (state, action) => {\n  state.messageLoading = false;\n  state.messagelist = action.payload;\n};\n\nexport const messageListFail = (state, action) => {\n  state.messageLoading = false;\n  state.messageError = action.payload;\n};\n\nexport const loadingLoadMoreMessages = (state, action) => {\n  state.loadingMoreMessages = true;\n};\n\nexport const loadMoreMessagesFail = (state, action) => {\n  state.loadingMoreMessages = false;\n  state.messageError = action.payload;\n};\n\nexport const loadMoreMessagesSuccess = (state, action) => {\n  state.loadingMoreMessages = false;\n  if (!action.payload.length) {\n    state.allMessagesLoaded = true;\n  } else {\n    state.messagelist = [...action.payload, ...state.messagelist];\n    state.messagelist = uniqueList(state.messagelist);\n  }\n};\n\nexport const sendingMessage = (state, action) => {\n  state.sendingMessage = true;\n  action.payload.status = \"pending\";\n  state.messagelist = [...state.messagelist, ...[action.payload]];\n  state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const sendMessageSuccess = (state, action) => {\n  state.sendingMessage = false;\n  state.messagelist = [...state.messagelist, ...[action.payload]];\n  state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const sendMessageFail = (state, action) => {\n  action.payload.status = \"failed\";\n  // state.messagelist = [...state.messagelist, ...[action.payload]];\n  // state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const sendingFile = (state, action) => {\n  state.sendingFile = true;\n  state.messagelist = [...state.messagelist, ...[action.payload]];\n  state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const sendFileSuccess = (state, action) => {\n  state.sendingFile = false;\n  state.messagelist = [...state.messagelist, ...[action.payload]];\n  state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const sendFileFail = (state, action) => {\n  state.sendingFile = false;\n  // state.messagelist = [...[action.payload], ...state.messagelist];\n  // state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const setActiveConversation = (state, action) => {\n  state.conversation = action.payload;\n  state.userId = null;\n};\n\nexport const setActiveUserId = (state, action) => {\n  state.userId = action.payload;\n  state.conversation = null;\n};\n\nexport const newMessageReceived = (state, action) => {\n  let message = action.payload.message;\n  if (state.conversation && state.conversation.id == message.conversationId) {\n    state.messagelist = [...state.messagelist, ...[message]];\n    state.messagelist = uniqueList(state.messagelist);\n\n    state.newMessage = message;\n  }\n};\n\nexport const deleteMessagesForEveryoneEvent = (state, action) => {\n  let conversation = action.payload.conversation;\n  let messages = action.payload.messages;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let deletedMessageIds = messages.map(msg => msg.id);\n    const finalList = state.messagelist.map(msg => {\n      if (deletedMessageIds.includes(msg.id)) {\n        msg.isDeleted = true;\n        msg.body = \"\";\n        msg.attachments = [];\n        return msg;\n      } else {\n        return msg;\n      }\n    });\n    state.messagelist = finalList;\n  }\n};\n\nexport const deleteMessageEvent = (state, action) => {\n  let conversation = action.payload.conversation;\n  let messages = action.payload.messages;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let deletedMessageIds = messages.map(msg => msg.id);\n    state.messagelist = [...state.messagelist.filter(msg => !deletedMessageIds.includes(msg.id))];\n  }\n};\n\nexport const deleteMessagesForEveryoneSuccess = (state, action) => {\n  const deletedMessageIds = action.payload;\n  const finalList = state.messagelist.map(msg => {\n    if (deletedMessageIds.includes(msg.id)) {\n      msg.isDeleted = true;\n      msg.body = \"\";\n      msg.attachments = [];\n      return msg;\n    } else {\n      return msg;\n    }\n  });\n  state.messagelist = finalList;\n};\n\nexport const deleteMessageForMeSuccess = (state, action) => {\n  const deletedMessageIds = action.payload;\n  state.messagelist = [...state.messagelist.filter(msg => !deletedMessageIds.includes(msg.id))];\n};\n\nexport const conversationUpdated = (state, action) => {\n  let { id, title, profileImageUrl } = action.payload.conversation;\n  if (state.conversation && state.conversation.id == id) {\n    const jsonConversaton = state.conversation.toJSON();\n    let conversation = {...jsonConversaton, title, profileImageUrl, updatedAt: action.payload.timestamp};\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, conversation);\n  }\n};\n\nexport const membersAdded = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.members = jsonConversaton.members.concat(members)\n    jsonConversaton.memberCount = conversation.memberCount;\n    jsonConversaton.updatedAt = timestamp;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const membersRemoved = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.memberCount = conversation.memberCount;\n    jsonConversaton.updatedAt = timestamp;\n\n    // Remove members\n    members.forEach(removedMember => {\n      const index = jsonConversaton.members.findIndex(member => member.userId == removedMember.id)\n      if (index >=0) {\n        jsonConversaton.members.splice(index, 1);\n      }\n    })\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const userStatusUpdated = (state, action) => {\n  const user = action.payload.user;\n  if (state.conversation && !state.conversation.isGroup && state.conversation.user.id == user.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.user.isOnline = user.isOnline;\n    jsonConversaton.user.lastSeen = user.lastSeen;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n};\n\nexport const userUpdated = (state, action) => {\n  const user = action.payload.user;\n  if (state.conversation && !state.conversation.isGroup && state.conversation.user.id == user.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.user.isOnline = user.isOnline;\n    jsonConversaton.user.lastSeen = user.lastSeen;\n    jsonConversaton.user.displayName = user.displayName;\n    jsonConversaton.user.profileImageUrl = user.profileImageUrl;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n};\n\nexport const markAsRead = (state, action) => {\n  let { conversation, user, timestamp } = action.payload;\n\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    if (jsonConversaton.lastReadAt[user.id]) {\n      jsonConversaton.lastReadAt[user.id] = timestamp;\n    }\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const typingEvent = (state, action) => {\n  const { conversation, isTyping, user} = action.payload;\n  const activeConversation = state.conversation;\n  if (!activeConversation || activeConversation.id != conversation.id) {\n    return\n  }\n\n  const index = state.typing.findIndex(item => item.id == user.id);\n  // If isTyping true, push user in  typing array\n  if (isTyping && index < 0) {\n    state.typing.push(user);\n    return\n  }\n\n  // If isTyping false, remove user from typing array\n  if (!isTyping && index >= 0) {\n    state.typing.splice(index, 1);\n  }\n};\n\nexport const startWatchingProgress = (state, action) => {\n  state.messageLoading = true;\n}\n\nexport const startWatchingFail = (state, action) => {\n  state.messageLoading = false;\n  state.messageError = action.payload;\n}\n\nexport const startWatchingSuccess = (state, action) => {\n  state.messageLoading = false;\n}\n\nexport const stopWatchingProgress = (state, action) => {\n  state.messageLoading = true;\n}\n\nexport const stopWatchingFail = (state, action) => {\n  state.messageLoading = false;\n  state.messageError = action.payload;\n}\n\nexport const stopWatchingSuccess = (state, action) => {\n  state.messageLoading = false;\n}\n\nexport const conversationBanUpdatedEvent = (state, action) => {\n  const { ban } = action.payload;\n  const client = Channelize.core.Client.getInstance();\n\n  const jsonConversaton = state.conversation.toJSON();;\n  jsonConversaton.ban = ban\n  \n  state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n}\n\nexport const conversationBanListSuccess = (state, action) => {\n  state.banList = action.payload;\n}\n\nexport const banConversationUserSuccess = (state, action) => {\n  const { conversation, userIds, displayName } = action.payload;\n\n  const banUserList = userIds.map(userId => {\n    return {userId, user: {displayName}};\n  });\n\n  const finalList = [...state.banList, ...banUserList];\n  state.banList = finalList;\n}\n\nexport const unbanConversationUserSuccess = (state, action) => {\n  const { conversation, userIds } = action.payload;\n\n  const finalList = state.banList.filter(user => !userIds.includes(user.userId));\n  state.banList = finalList;\n}\n\nexport const handlers = {\n  [LOADING_MESSAGE_LIST]: loadingMessageList,\n  [MESSAGE_LIST_SUCCESS]: messageListSuccess,\n  [MESSAGE_LIST_FAIL]: messageListFail,\n  [SENDING_MESSAGE]: sendingMessage,\n  [SEND_MESSAGE_SUCCESS]: sendMessageSuccess,\n  [SEND_MESSAGE_FAIL]: sendMessageFail,\n  [SENDING_FILE]: sendingFile,\n  [SEND_FILE_FAIL]: sendFileFail,\n  [SEND_FILE_SUCCESS]: sendFileSuccess,\n  [LOADING_LOAD_MORE_MESSAGES]: loadingLoadMoreMessages,\n  [LOAD_MORE_MESSAGES_SUCCESS]: loadMoreMessagesSuccess,\n  [LOAD_MORE_MESSAGES_FAIL]: loadMoreMessagesFail,\n  [SET_ACTIVE_CONVERSATION]: setActiveConversation,\n  [SET_ACTIVE_USERID]: setActiveUserId,\n  [CONVERSATION_UPDATED_EVENT]: conversationUpdated,\n  [MEMBERS_ADDED_EVENT]: membersAdded,\n  [MEMBERS_REMOVED_EVENT]: membersRemoved,\n  [NEW_MESSAGE_RECEIVED_EVENT]: newMessageReceived,\n  [USER_STATUS_UPDATED_EVENT]: userStatusUpdated,\n  [USER_UPDATED_EVENT]: userUpdated,\n  [MARK_AS_READ_EVENT]: markAsRead,\n  [TYPING_EVENT]: typingEvent,\n  [DELETE_MESSAGE_FOR_EVERYONE_EVENT]: deleteMessagesForEveryoneEvent,\n  [DELETE_MESSAGE_EVENT]: deleteMessageEvent,\n  [DELETE_MESSAGES_FOR_EVERYONE_SUCCESS]: deleteMessagesForEveryoneSuccess,\n  [DELETE_MESSAGES_FOR_ME_SUCCESS]: deleteMessageForMeSuccess,\n  [START_WATCHING_PROGRESS]: startWatchingProgress,\n  [START_WATCHING_FAIL]: startWatchingFail,\n  [START_WATCHING_SUCCESS]: startWatchingSuccess,\n  [STOP_WATCHING_PROGRESS]: stopWatchingProgress,\n  [STOP_WATCHING_FAIL]: stopWatchingFail,\n  [STOP_WATCHING_SUCCESS]: stopWatchingSuccess,\n  [CONVERSATION_BAN_UPDATED_EVENT]: conversationBanUpdatedEvent,\n  [CONVERSATION_BAN_LIST_SUCCESS]: conversationBanListSuccess,\n  [BAN_CONVERSATION_USERS_SUCCESS]: banConversationUserSuccess,\n  [UNBAN_CONVERSATION_USERS_SUCCESS]: unbanConversationUserSuccess,\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { \n  LOADING_FRIENDS_LIST,\n  FRIENDS_LIST_FAIL,\n  FRIENDS_LIST_SUCCESS,\n  LOADING_LOAD_MORE_FRIENDS,\n  LOAD_MORE_FRIENDS_SUCCESS,\n  LOAD_MORE_FRIENDS_FAIL,\n  LOADING_MORE_USERS_LIST,\n  MORE_USERS_LIST_FAIL,\n  MORE_USERS_LIST_SUCCESS,\n  LOADING_SEARCH_FRIENDS,\n  SEARCH_FRIENDS_SUCCESS,\n  SEARCH_FRIENDS_FAIL\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\n\nconst INITIAL_STATE = {\n  friendslist: [],\n  loadingFriendsList: false,\n  error: null,\n  loadingMoreFriends: false,\n  allFriendsLoaded: false,\n\n  moreUsersList: [],\n  loadingMoreUsersList: false,\n\n  searchFriends: [],\n  loadingSearchFriends: false\n};\n\nexport const loadingFriendsList = (state, action) => {\n  state.loadingFriendsList = true;\n  state.allFriendsLoaded = false;\n  state.friendslist= [];\n};\n\nexport const friendsListSuccess = (state, action) => {\n  state.loadingFriendsList = false;\n  state.friendslist = action.payload;\n};\n\nexport const friendsListFail = (state, action) => {\n  state.loadingFriendsList = false;\n  state.error = action.payload;\n};\n\nexport const loadingLoadMoreFriends = (state, action) => {\n  state.loadingMoreFriends = true;\n};\n\nexport const loadMoreFriendsFail = (state, action) => {\n  state.loadingMoreFriends = false;\n  state.error = action.payload;\n};\n\nexport const loadMoreFriendsSuccess = (state, action) => {\n  state.loadingMoreFriends = false;\n  if (!action.payload.length) {\n    state.allFriendsLoaded = true;\n  } else {\n    state.friendslist = [...state.friendslist, ...action.payload];\n    state.friendslist = uniqueList(state.friendslist);\n  }\n};\n\nexport const loadingMoreUsersList = (state, action) => {\n  state.loadingMoreUsersList = true;\n  state.moreUsersList = [];\n};\n\nexport const moreUsersListSuccess = (state, action) => {\n  state.loadingMoreUsersList = false;\n  state.moreUsersList = action.payload;\n};\n\nexport const moreUsersListFail = (state, action) => {\n  state.loadingMoreUsersList = false;\n  state.error = action.payload;\n};\n\nexport const loadingSearchFriends = (state, action) => {\n  state.loadingSearchFriends = true;\n  state.searchFriends = [];\n};\n\nexport const searchFriendsSuccess = (state, action) => {\n  state.loadingSearchFriends = false;\n  state.searchFriends = action.payload;\n};\n\nexport const searchFriendsFail = (state, action) => {\n  state.loadingSearchFriends = false;\n  state.error = action.payload;\n};\n\nexport const handlers = {\n  [LOADING_FRIENDS_LIST]: loadingFriendsList,\n  [FRIENDS_LIST_SUCCESS]: friendsListSuccess,\n  [FRIENDS_LIST_FAIL]: friendsListFail,\n  [LOADING_LOAD_MORE_FRIENDS]: loadingLoadMoreFriends,\n  [LOAD_MORE_FRIENDS_SUCCESS]: loadMoreFriendsSuccess,\n  [LOAD_MORE_FRIENDS_FAIL]: loadMoreFriendsFail,\n  [LOADING_MORE_USERS_LIST]: loadingMoreUsersList,\n  [MORE_USERS_LIST_SUCCESS]: moreUsersListSuccess,\n  [MORE_USERS_LIST_FAIL]: moreUsersListFail,\n  [LOADING_SEARCH_FRIENDS]: loadingSearchFriends,\n  [SEARCH_FRIENDS_SUCCESS]: searchFriendsSuccess,\n  [SEARCH_FRIENDS_FAIL]: searchFriendsFail,\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { combineReducers } from 'redux';\nimport clientReducer from './clientReducer';\nimport conversationReducer from './conversationReducer';\nimport messageReducer from './messageReducer';\nimport userReducer from './userReducer';\n\nexport { default as clientReducer } from './clientReducer';\nexport { default as conversationReducer } from './conversationReducer';\nexport { default as messageReducer } from './messageReducer';\nexport { default as userReducer } from './userReducer';\n\nexport default combineReducers({\n  client: clientReducer,\n  conversation: conversationReducer,\n  message: messageReducer,\n  user: userReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger';\nimport { composeWithDevTools } from 'remote-redux-devtools';\n\nimport rootReducer from '../reducers';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n  thunk,\n];\n\nlet composeFunction = compose;\n\nif (process.env.NODE_ENV === 'development') {\n  composeFunction = composeWithDevTools;\n  middleware.push(logger);\n}\n\nconst composedEnhancers = composeFunction(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  composedEnhancers\n);\n\n","export * from './components';\nexport * from './utils';\nexport * from './context';\nexport * from './store';\nexport * from './reducers';"],"sourceRoot":""}