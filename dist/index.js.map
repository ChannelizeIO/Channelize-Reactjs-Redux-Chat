{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"channelize-chat\"","webpack:///external \"react-redux\"","webpack:///external \"redux\"","webpack:///external \"lodash/debounce\"","webpack:///external \"uuid\"","webpack:///external \"moment\"","webpack:///external \"immer\"","webpack:///external \"lodash/throttle\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///external \"prop-types\"","webpack:///external \"redux-thunk\"","webpack:///external \"sprintf-js\"","webpack:///external \"redux-logger\"","webpack:///external \"remote-redux-devtools\"","webpack:///./src/constants.js","webpack:///./src/actions/clientActions.js","webpack:///./src/actions/conversationActions.js","webpack:///./src/actions/messageActions.js","webpack:///./src/context.js","webpack:///./src/components/App.js","webpack:///./src/components/Header.js","webpack:///./src/components/Launcher.js","webpack:///./src/components/Loader.js","webpack:///./src/utils/index.js","webpack:///./src/components/ConversationItem.js","webpack:///./src/components/ConversationList.js","webpack:///./src/components/MediaLightBox.js","webpack:///./src/components/MessageSimple.js","webpack:///./src/components/ConversationWindow.js","webpack:///./src/components/MessageLivestream.js","webpack:///./src/components/SearchWindow.js","webpack:///./src/actions/userActions.js","webpack:///./src/reducers/clientReducer.js","webpack:///./src/reducers/conversationReducer.js","webpack:///./src/reducers/messageReducer.js","webpack:///./src/reducers/userReducer.js","webpack:///./src/reducers/index.js","webpack:///./src/store/index.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","LANGUAGE_PHRASES","ADMIN_MSG_FORMATS","admin_group_create","admin_group_join","admin_group_add_members","admin_group_remove_members","admin_group_leave","admin_group_make_admin","admin_group_change_title","admin_group_change_photo","admin_call_video_missed","admin_call_voice_missed","CALL_FORMATS","admin_call_rejected","admin_call_completed","admin_call_not_answered","admin_call_missed","IMAGES","connectSuccess","dispatch","response","type","payload","connectFail","error","setActiveConversation","conversation","setActiveUserId","userId","ChannelizeContext","React","createContext","client","ChannelizeProvider","Provider","withChannelizeContext","OriginalComponent","getContextAwareComponent","context","originalComponent","Context","ContextAwareComponent","props","Consumer","themePath","extraThemePaths","displayName","replace","App","state","this","accessToken","connected","setConnected","chConnect","prevProps","registerEventHandlers","getContext","children","PureComponent","connect","Promise","resolve","reject","res","_connect","then","catch","chsocket","on","Conversation","getConversation","id","err","Header","setState","showDropDownList","title","subtitle","profileImageUrl","showArrowBack","onBack","showChevron","renderDropDownList","renderRight","callButtons","className","onClick","style","backgroundImage","toggleDropDownList","Launcher","src","alt","Loader","sprintf","createReducer","initialState","actionsMap","action","produce","draft","caseReducer","undefined","uniqueList","list","reduce","uniqList","currentValue","ids","map","item","indexOf","push","splice","setAutoFreeze","modifyConversation","isGroup","user","otherMemberIds","members","member","_client","loginUser","modifyMessageList","lastMessage","getCurrentUser","forEach","message","ownerId","readByAll","showReadStatus","pending","readByAllMembers","createdAt","Date","now","AMorPMTimeParser","owner","capitalize","isUser","isDeleted","body","length","nextMessage","showOwnerAvatar","isUserLastMessage","isSameUser","prevMessage","showDateSeparator","isSameDay","system","_modifyAdminMessage","getLastMessageString","lastMessageString","keys","messageOwnerName","attachments","attachment","lastMessageTimeParser","time","today","todayDate","getDate","todayMonth","getMonth","todayYear","getFullYear","inputDate","inputTimeDate","inputTimeMonth","inputTimeYear","showWeekDay","getDay","hours","getHours","AmOrPm","getMinutes","substr","dateSeparatorParser","currentMessage","diffMessage","currentCreatedAt","diffCreatedAt","typingString","typing","trim","split","firstUser","commaSeparatedUsers","slice","join","x","toUpperCase","subName","objNames","metaData","duration","second","Number","h","Math","floor","secondsToHms","text","adminMessageType","subType","subId","subUser","objType","objValues","objUsers","Array","isArray","names","objUser","find","format","ConversationItem","onSelect","onlineIcon","activeConversation","updatedAt","isOnline","selectConversation","ConversationList","conversationListQuery","createConversationListQuery","limit","skip","include","getConversationList","onCloseIconClick","onSearchIconClick","onScroll","chRecentListingRef","createRef","_init","loadingMoreConversations","allConversationsLoaded","current","scrollTop","clientHeight","scrollHeight","loadMoreConversations","headerImage","connecting","loading","showSearchIcon","showCloseIcon","ref","MediaLightBox","url","link","document","createElement","href","target","download","appendChild","click","removeChild","file","fileUrl","thumbnailUrl","onCloseClick","downloadFile","controls","preload","loop","autoPlay","MessageSimple","fileMessage","msgContainerPos","adminMsg","fileUr","onClickEvent","extension","pop","ownerProfileImageUrl","Fragment","Component","ConversationWindow","config","typing_events","markAsRead","chMessageBoxRef","toString","ownProps","dummyConversation","membersExactly","conversations","User","registerConversationEventHandlers","messageListQuery","createMessageListQuery","getMessageList","unreadMessageCount","__isWatching","startWatching","textMessage","_startTyping","_stopTyping","startTyping","stopTyping","showMediaLightBox","handleChange","handleKeyUp","sendMessage","_markAsRead","throttle","sendMedia","debounce","offsetTop","offsetBottom","prevState","snapshot","newMessage","loadingMoreMessages","sendingMessage","_scrollToTarget","event","keyCode","preventDefault","_onTextMessageChanged","fileType","shift","match","uuid","sendFileToConversation","getFileThumbnailUrl","URL","createObjectURL","sendMessageToConversation","sendMessageToUserId","cb","fileReader","FileReader","onload","result","readAsDataURL","blob","Blob","video","timeupdate","snapImage","removeEventListener","pause","addEventListener","canvas","width","videoWidth","height","videoHeight","drawImage","image","toDataURL","success","revokeObjectURL","muted","playsInline","play","readAsArrayBuffer","allMessagesLoaded","loadMoreMessagesAction","sendFile","files","openMediaFile","disableComposer","disableComposerMessage","Message","renderHeader","actionButton","headerTitle","headerSubtitle","composerDisabled","moment","lastSeen","fromNow","memberCount","isActive","blockUser","unblockUser","typingStrings","viewMediaToggle","accept","onChange","placeholder","onKeyUp","propTypes","PropTypes","elementType","defaultProps","reverse","msgBody","attachmentType","createThumbnail","File","upload","fileData","fileMsgObject","MessageLivestream","showImage","SearchWindow","friendsListQuery","createUserListQuery","friendsLimit","sort","getFriendsList","searchLimit","search","searchFriendsAction","moreUsersListQuery","getMoreUsersList","searchText","onContactClick","_searchOnServer","inputValue","loadingFriendsList","loadingSearchFriends","friendslist","moreUsersList","searchFriends","showMoreUsers","clearSearch","friend","imgUrl","userListQuery","friendsList","loadMoreFriends","usersList","INITIAL_STATE","finalList","index","conversationIndex","latestConversation","conversationId","timestamp","unshift","concat","removedMember","findIndex","lastReadAt","sendingFile","status","toJSON","Channelize","core","Client","getInstance","Model","jsonConversaton","isTyping","loadingMoreFriends","allFriendsLoaded","loadingMoreUsersList","combineReducers","conversationReducer","messageReducer","userReducer","middleware","thunk","composedEnhancers","compose","applyMiddleware","store","createStore","rootReducer"],"mappings":"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","file":"dist/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"channelize-chat\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");","module.exports = require(\"lodash/debounce\");","module.exports = require(\"uuid\");","module.exports = require(\"moment\");","module.exports = require(\"immer\");","module.exports = require(\"lodash/throttle\");","module.exports = require(\"@babel/runtime/helpers/extends\");","module.exports = require(\"prop-types\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"sprintf-js\");","module.exports = require(\"redux-logger\");","module.exports = require(\"remote-redux-devtools\");","export const LANGUAGE_PHRASES = {\n\tCHAT : \"Chat\",\n\tCLOSE : \"Close\",\n\tONLINE : \"Online\",\n\tNO_CONV_FOUND : \"No conversations found!\",\n\tNO_MESSAGES_FOUND : \"No messages found!\",\n\tDELETED_MEMBER : \"Deleted Member\",\n\tMESSAGE_DELETED : \"This message was deleted\",\n\tLAST_SEEN : \"Last Seen \",\n\tMUTE_CONV : \"Mute Conversation\",\n\tCLEAR_CONV : \"Clear Conversation\",\n\tDELETE_CONV : \"Delete Conversation\",\n\tBLOCK_USER : \"Block User\",\n\tUNBLOCK_USER : \"Unblock User\",\n\tSEND_MESSAGE : \"Send a message\",\n\tDELETE : \"Delete\",\n\tIMAGE : \"Image\",\n\tAUDIO : \"Audio\",\n\tVIDEO : \"Video\",\n\tLOCATION : \"Location\",\n\tSTICKER : \"Sticker\",\n\tGIF : \"GIF\",\n\tSHARE_GALLERY : \"Share photo & video\",\n\tSHARE_DOCUMENT : \"Share a document\",\n\tSEND_ATTACHMENTS : \"Send Attachments\",\n\tMEMBERS : \"Members\",\n\tFILE_SIZE_WARNING : \"File size should be less then 25mb\",\n\tSEARCH : \"Search\",\n\tSUGGESTED : \"Suggested\",\n\tMORE_USERS : \"More Users\",\n\tLOGIN : \"Login\",\n\tLOGOUT : \"Logout\",\n\tNAME : \"Name\",\n\tSTART : \"Start\",\n\tLOGIN_WITH_TEST_USERS : \"OR Login with Test users\",\n\tENTER_NAME : \"Please enter a name\",\n\tUSER_EXIST : \"User already exist with this username\",\n\tDELETE_FOR_ME : \"Delete for me\",\n\tDELETE_FOR_EVERYONE : \"Delete for everyone\",\n\tDOWNLOAD_FILE_NAME : \"File\",\n\tYOU : \"You\",\n\tSEND : \"Send\"\n}\n\nexport const ADMIN_MSG_FORMATS = {\n\tadmin_group_create: \"%s created group %s\",\n\tadmin_group_join: \"%s joined\",\n\tadmin_group_add_members: \"%s added %s\",\n\tadmin_group_remove_members: \"%s removed %s\",\n\tadmin_group_leave: \"%s left\",\n\tadmin_group_make_admin: \"%s are now an admin\",\n\tadmin_group_change_title: \"%s changed the title to %s\",\n\tadmin_group_change_photo: \"%s changed group photo\",\n\tadmin_call_video_missed: \"%s missed a video call from %s\",\n\tadmin_call_voice_missed: \"%s missed a voice call from %s\"\n}\n\nexport const CALL_FORMATS = {\n\tadmin_call_rejected : \"Call Rejected\",\n\tadmin_call_completed : \"Call Completed\",\n\tadmin_call_not_answered : \"Call Not Answered\",\n\tadmin_call_missed : \"Missed Call\"\n}\n\nexport const IMAGES = {\n\tLAUNCHER_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/launcher-icon.svg\",\n\tANNA_SMITH : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/anna-smith.jpg\",\n\tKATRINA_CHARLEY : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/katrina-charley.png\",\n\tNATALIE_IVANOVIC : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/natalie-ivanovic.jpeg\",\n\tERIC_ANDREWS : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/eric-andrews.jpeg\",\n\tGALLERY_ICON : \"https:/cdn.channelize.io/apps/web-widget/1.0.0/images/gallery.png\",\n\tAUDIO_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/audio.png\",\n\tVIDEO_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/video.svg\",\n\tLOCATION_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/location.svg\",\n\tSTICKER_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/sticker.png\",\n\tGIF_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/gif.png\",\n\tAVTAR : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/avtar.png\",\n\tGROUP : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/group.png\",\n}\n\nexport const SETTINGS = {\n\tLOCATION_API_KEY : \"AIzaSyBzrL8FaUvmYPIxEUd_VTPpqcACtPdniik\",\n\tLOCATION_IMG_URL : \"https://maps.googleapis.com/maps/api/staticmap\"\n}\n\nexport const CONNECTING = 'CONNECTING'\nexport const CONNECT_SUCCESS = 'CONNECT_SUCCESS'\nexport const CONNECT_FAIL = 'CONNECT_FAIL'\nexport const DISCONNECT_SUCCESS = 'DISCONNECT_SUCCESS'\nexport const DISCONNECT_FAIL = 'DISCONNECT_FAIL'\n\nexport const NEW_MESSAGE_RECEIVED_EVENT = 'NEW_MESSAGE_RECEIVED_EVENT'\nexport const USER_STATUS_UPDATED_EVENT = 'USER_STATUS_UPDATED'\nexport const MARK_AS_READ_EVENT = 'MARK_AS_READ_EVENT'\nexport const USER_BLOCKED_EVENT = 'USER_BLOCKED_EVENT'\nexport const USER_UNBLOCKED_EVENT = 'USER_UNBLOCKED_EVENT'\nexport const USER_JOINED_EVENT = 'USER_JOINED_EVENT'\nexport const MEMBERS_ADDED_EVENT = 'MEMBERS_ADDED_EVENT'\nexport const MEMBERS_REMOVED_EVENT = 'MEMBERS_REMOVED_EVENT'\nexport const CONVERSATION_UPDATED_EVENT = 'CONVERSATION_UPDATED_EVENT'\nexport const USER_UPDATED_EVENT = 'USER_UPDATED_EVENT'\n\nexport const LOADING_FRIENDS_LIST = 'LOADING_FRIENDS_LIST'\nexport const FRIENDS_LIST_FAIL = 'FRIENDS_LIST_FAIL'\nexport const FRIENDS_LIST_SUCCESS = 'FRIENDS_LIST_SUCCESS'\nexport const LOADING_LOAD_MORE_FRIENDS = 'LOADING_LOAD_MORE_FRIENDS'\nexport const LOAD_MORE_FRIENDS_SUCCESS = 'LOAD_MORE_FRIENDS_SUCCESS'\nexport const LOAD_MORE_FRIENDS_FAIL = 'LOAD_MORE_FRIENDS_FAIL'\nexport const LOADING_MORE_USERS_LIST = 'LOADING_MORE_USERS_LIST'\nexport const MORE_USERS_LIST_FAIL = 'MORE_USERS_LIST_FAIL'\nexport const MORE_USERS_LIST_SUCCESS = 'MORE_USERS_LIST_SUCCESS'\nexport const LOADING_SEARCH_FRIENDS = 'LOADING_SEARCH_FRIENDS'\nexport const SEARCH_FRIENDS_SUCCESS = 'SEARCH_FRIENDS_SUCCESS'\nexport const SEARCH_FRIENDS_FAIL = 'SEARCH_FRIENDS_FAIL'\n\nexport const LOADING_CONVERSATION_LIST = 'LOADING_CONVERSATION_LIST'\nexport const CONVERSATION_LIST_FAIL = 'CONVERSATION_LIST_FAIL'\nexport const CONVERSATION_LIST_SUCCESS = 'CONVERSATION_LIST_SUCCESS'\nexport const LOADING_LOAD_MORE_CONVERSATIONS = 'LOADING_LOAD_MORE_CONVERSATIONS'\nexport const LOAD_MORE_CONVERSATIONS_FAIL = 'LOAD_MORE_CONVERSATIONS_FAIL'\nexport const LOAD_MORE_CONVERSATIONS_SUCCESS = 'LOAD_MORE_CONVERSATIONS_SUCCESS'\n\nexport const LOADING_MESSAGE_LIST = 'LOADING_MESSAGE_LIST'\nexport const MESSAGE_LIST_FAIL = 'MESSAGE_LIST_FAIL'\nexport const MESSAGE_LIST_SUCCESS = 'MESSAGE_LIST_SUCCESS'\nexport const SENDING_MESSAGE = 'SENDING_MESSAGE'\nexport const SEND_MESSAGE_FAIL = 'SEND_MESSAGE_FAIL'\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS'\nexport const SENDING_FILE = 'SENDING_FILE'\nexport const SEND_FILE_FAIL = 'SEND_FILE_FAIL'\nexport const SEND_FILE_SUCCESS = 'SEND_FILE_SUCCESS'\nexport const LOADING_LOAD_MORE_MESSAGES = 'LOADING_LOAD_MORE_MESSAGES'\nexport const LOAD_MORE_MESSAGES_SUCCESS = 'LOAD_MORE_MESSAGES_SUCCESS'\nexport const LOAD_MORE_MESSAGES_FAIL = 'LOAD_MORE_MESSAGES_FAIL'\nexport const SET_ACTIVE_CONVERSATION = 'SET_ACTIVE_CONVERSATION'\nexport const SET_ACTIVE_USERID = 'SET_ACTIVE_USERID'\nexport const TYPING_EVENT = 'TYPING_EVENT'","import {\n  CONNECTING,\n  CONNECT_SUCCESS,\n  CONNECT_FAIL,\n  DISCONNECT_SUCCESS,\n  DISCONNECT_FAIL,\n  TYPING_EVENT,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  USER_STATUS_UPDATED_EVENT,\n  MARK_AS_READ_EVENT,\n  USER_BLOCKED_EVENT,\n  USER_UNBLOCKED_EVENT,\n  USER_JOINED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  CONVERSATION_UPDATED_EVENT,\n  USER_UPDATED_EVENT\n} from '../constants';\n\nconst _connect = (client, userId, accessToken) => {\n  return new Promise((resolve, reject) => {\n    if (!userId) {\n      reject('UserID is required.');\n      return;\n    }\n    if (!accessToken) {\n      reject('accessToken is required.');\n      return;\n    }\n\n    if (!client) {\n      reject('Channelize.io client was not created.');\n    }\n\n    client.connect(userId, accessToken, (error, res) => {\n      if (error) {\n        reject('Channelize.io connection Failed.');\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nexport const setConnected = (value = true) => {\n  return dispatch => {\n    dispatch({\n      type: CONNECT_SUCCESS,\n      payload: {}\n    });\n  }\n}\n\nexport const chConnect = (client, userId, accessToken) => {\n  return dispatch => {\n    dispatch({\n      type: CONNECTING,\n      payload: {}\n    });\n    return _connect(client, userId, accessToken)\n      .then(response => connectSuccess(dispatch, response))\n      .catch(error => connectFail(dispatch, error));\n  };\n};\n\nconst connectSuccess = (dispatch, response) => {\n  dispatch({\n    type: CONNECT_SUCCESS,\n    payload: response\n  });\n};\n\nconst connectFail = (dispatch, error) => {\n  dispatch({\n    type: CONNECT_FAIL,\n    payload: error\n  });\n};\n\nconst _disconnect = (client) => {\n  return new Promise((resolve, reject) => {\n    if (client) {\n      client.disconnect(() => {\n        resolve(null);\n      });\n    } else {\n      resolve(null);\n    }\n  });\n};\n\nexport const chDisconnect = (client) => {\n  return dispatch => {\n    return _disconnect(client)\n      .then(response => disconnectSuccess(dispatch, response))\n      .catch(error => disconnectFail(dispatch, error));\n  };\n};\n\nconst disconnectSuccess = (dispatch, response) => {\n  dispatch({\n    type: DISCONNECT_SUCCESS,\n    payload: response\n  });\n};\n\nconst disconnectFail = (dispatch, error) => {\n  dispatch({\n    type: DISCONNECT_FAIL,\n    payload: error\n  });\n};\n\nexport const registerEventHandlers = (client) => {\n  return dispatch => {\n    client.chsocket.on('user.status_updated', function (payload) {\n      dispatch({\n        type: USER_STATUS_UPDATED_EVENT,\n        payload: payload\n      });\n    });\n\n    client.chsocket.on('user.updated', function (payload) {\n      dispatch({\n        type: USER_UPDATED_EVENT,\n        payload: payload\n      });\n    });\n\n    client.chsocket.on('user.message_created', function (response) {\n      dispatch({\n        type: NEW_MESSAGE_RECEIVED_EVENT,\n        payload: response\n      });\n    });\n\n   client.chsocket.on('user.joined', function (response) {\n      // Load conversation will all attributes from server\n      const { conversation } = response;\n      client.Conversation.getConversation(conversation.id, null, (err, conversation) => {\n        if (err) {\n          return;\n        }\n\n        response.conversation = conversation;\n\n        dispatch({\n          type: USER_JOINED_EVENT,\n          payload: response\n        });\n      })\n    });\n\n    client.chsocket.on('conversation.members_added', function (response) {\n      dispatch({\n        type: MEMBERS_ADDED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.members_removed', function (response) {\n      dispatch({\n        type: MEMBERS_REMOVED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.updated', function (response) {\n      dispatch({\n        type: CONVERSATION_UPDATED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.mark_as_read', function (response) {\n      dispatch({\n        type: MARK_AS_READ_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.typing', function (response) {\n      dispatch({\n        type: TYPING_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.blocked', function (response) {\n      dispatch({\n        type: USER_BLOCKED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.unblocked', function (response) {\n      dispatch({\n        type: USER_UNBLOCKED_EVENT,\n        payload: response\n      });\n    });\n  };\n};","import { \n  LOADING_CONVERSATION_LIST,\n  CONVERSATION_LIST_FAIL,\n  CONVERSATION_LIST_SUCCESS,\n  LOADING_LOAD_MORE_CONVERSATIONS,\n  LOAD_MORE_CONVERSATIONS_FAIL,\n  LOAD_MORE_CONVERSATIONS_SUCCESS,\n} from '../constants';\n\nexport const getConversationList = (conversationListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_CONVERSATION_LIST,\n      payload: {}\n    });\n    return conversationListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: CONVERSATION_LIST_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: CONVERSATION_LIST_SUCCESS,\n        payload: response\n      }); \n    })\n  };\n};\n\nexport const loadMoreConversations = (conversationListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_CONVERSATIONS,\n      payload: {}\n    });\n    return conversationListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_CONVERSATIONS_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: LOAD_MORE_CONVERSATIONS_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n","import { \n  LOADING_MESSAGE_LIST,\n  MESSAGE_LIST_FAIL,\n  MESSAGE_LIST_SUCCESS,\n  SENDING_MESSAGE,\n  SEND_MESSAGE_FAIL,\n  SEND_MESSAGE_SUCCESS,\n  SENDING_FILE,\n  SEND_FILE_FAIL,\n  SEND_FILE_SUCCESS,\n  LOADING_LOAD_MORE_MESSAGES,\n  LOAD_MORE_MESSAGES_SUCCESS,\n  LOAD_MORE_MESSAGES_FAIL,\n  SET_ACTIVE_CONVERSATION,\n  SET_ACTIVE_USERID,\n  NEW_MESSAGE_RECEIVED_EVENT\n} from '../constants';\n\nexport const sendFileToConversation = (client, conversation, file, body, attachmentType) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_FILE,\n      payload: body\n    });\n\n    let createThumbnail = attachmentType === \"application\" ? false : true;\n\n    const fileData = client.File.upload(file, attachmentType, createThumbnail, (err, fileData) => {\n      if (err) {\n        body.error = err;\n        dispatch({\n          type: SEND_FILE_FAIL,\n          payload: body\n        });\n        return;\n      }\n\n      let fileMsgObject = {};\n      fileMsgObject['id'] = body.id;\n      fileMsgObject['attachments'] = [fileData];\n      \n      return conversation.sendMessage(fileMsgObject, (err, response) => {\n        if (err) {\n          fileMsgObject.error = err;\n          dispatch({\n            type: SEND_FILE_FAIL,\n            payload: fileMsgObject\n          });\n          return;\n        }\n        dispatch({\n          type: SEND_FILE_SUCCESS,\n          payload: response\n        });\n        return;\n      });\n    });\n  }\n};\n\nexport const sendMessageToConversation = (conversation, body) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_MESSAGE,\n      payload: body\n    });\n\n    let msgBody = {\n      id: body.id,\n      body: body.body,\n      attachments: body.attachments ? body.attachments : [], \n    }\n    \n    return conversation.sendMessage(msgBody, (err, response) => {\n      if (err) {\n        msgBody.error = err;\n        dispatch({\n          type: SEND_MESSAGE_FAIL,\n          payload: msgBody\n        });\n        return;\n      }\n      dispatch({\n        type: SEND_MESSAGE_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n\nexport const sendMessageToUserId = (client, body) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_MESSAGE,\n      payload: body\n    });\n    return client.Message.sendMessage(body, (err, response) => {\n      if (err) {\n        dispatch({\n          type: SEND_MESSAGE_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: SEND_MESSAGE_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n\nexport const getMessageList = (messageListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_MESSAGE_LIST,\n      payload: {}\n    });\n    return messageListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: MESSAGE_LIST_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: MESSAGE_LIST_SUCCESS,\n        payload: response.reverse()\n      });\n    })\n  };\n};\n\nexport const loadMoreMessages = (messageListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_MESSAGES,\n      payload: {}\n    });\n    return messageListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_MESSAGES_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: LOAD_MORE_MESSAGES_SUCCESS,\n        payload: response.reverse()\n      });\n    })\n  };\n};\n\nexport const setActiveConversation = (conversation) => {\n  return dispatch => {\n    dispatch({\n      type: SET_ACTIVE_CONVERSATION,\n      payload: conversation\n    });\n  };\n};\n\nexport const setActiveUserId = (userId) => {\n  return dispatch => {\n    dispatch({\n      type: SET_ACTIVE_USERID,\n      payload: userId\n    });\n  };\n};\n\nexport const registerConversationEventHandlers = (conversation) => {\n  return dispatch => {\n    if (!conversation.__isWatching) {\n      return\n    }\n\n    conversation.on('watcher.message.created', (response) => {\n      dispatch({\n        type: NEW_MESSAGE_RECEIVED_EVENT,\n        payload: response\n      });\n    });\n  }\n}","import React from 'react';\n\nexport const ChannelizeContext = React.createContext({ client: null });\n\nexport const ChannelizeProvider = ChannelizeContext.Provider;\n\nexport function withChannelizeContext(OriginalComponent) {\n  const ContextAwareComponent = getContextAwareComponent(\n    ChannelizeContext,\n    OriginalComponent,\n  );\n  return ContextAwareComponent;\n}\n\nconst getContextAwareComponent = function(context, originalComponent) {\n  const Context = context;\n  const OriginalComponent = originalComponent;\n  const ContextAwareComponent = function(props) {\n    return (\n      <Context.Consumer>\n        {(c) => <OriginalComponent {...c} {...props} />}\n      </Context.Consumer>\n    );\n  };\n\n  ContextAwareComponent.themePath = OriginalComponent.themePath;\n  ContextAwareComponent.extraThemePaths = OriginalComponent.extraThemePaths;\n  ContextAwareComponent.displayName =\n    OriginalComponent.displayName || OriginalComponent.name || 'Component';\n  ContextAwareComponent.displayName = ContextAwareComponent.displayName.replace(\n    'Base',\n    '',\n  );\n\n  return ContextAwareComponent;\n};","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { \n  chConnect,\n  registerEventHandlers,\n  setConnected\n} from \"../actions\";\nimport { IMAGES } from \"../constants\";\nimport { ChannelizeProvider } from '../context';\n\nclass App extends PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      conversation: null,\n      userId: null\n    }\n  }\n\n  componentDidMount() {\n    const { client, userId, accessToken } = this.props;\n    if (!client.connected) {\n      this.props.chConnect(client, userId, accessToken);\n      return\n    }\n    this.props.setConnected(true)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.props.connected) {\n      return;\n    }\n\n    // Register real time events after successful connection\n    if (!prevProps.connected && this.props.connected) {\n      this.props.registerEventHandlers(this.props.client)\n    }\n  }\n\n  getContext = () => ({\n    client: this.props.client\n  });\n\n  render() {\n    const { connected } = this.props;\n\n    return (\n      <ChannelizeProvider value={this.getContext()}>\n        { this.props.children }\n      </ChannelizeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = ({client}) => {\n  return {...client}\n}\n\nApp = connect(\n  mapStateToProps,\n  { chConnect, registerEventHandlers, setConnected }\n)(App);\n\nexport { App };","import React, { PureComponent } from 'react';\n\nclass Header extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDropDownList: false\n    };\n  }\n\n  toggleDropDownList = () => {\n    this.setState((state) => ({\n      showDropDownList: !state.showDropDownList\n    }))\n  }\n\n  render() {\n    const { \n      title,\n      subtitle,\n      profileImageUrl,\n      showArrowBack,\n      onBack,\n      showChevron,\n      renderDropDownList,\n      renderRight,\n      callButtons\n    } = this.props;\n    const { showDropDownList } = this.state;\n\n    return (\n    <div id=\"ch_header\" className=\"ch-header\">\n      { showArrowBack && <i className=\"material-icons arrow-back\" onClick={onBack}>arrow_back</i>}\n      { profileImageUrl && <div className=\"ch-header-image\" style={{backgroundImage:`url(${profileImageUrl})`}}></div>}\n      <div className=\"ch-header_details\">\n        <div className=\"ch-header_content\">\n          { title && \n            <div className=\"ch-header-title\">\n              <div>{title}</div>\n              { showChevron && <i className=\"material-icons ch-chevron-icon\" onClick={this.toggleDropDownList}>keyboard_arrow_down</i>}\n            </div>\n          }\n          { subtitle && <div className=\"ch-header-subtitle\">{subtitle}</div>}\n          { showDropDownList && renderDropDownList && renderDropDownList()}\n        </div>\n        {callButtons}\n        <div className=\"ch-header_right-icons\">\n          {renderRight && this.props.renderRight()}\n        </div>\n      </div>\n    </div>\n   );\n  }\n}\n\nexport { Header }","import React from 'react';\nimport { IMAGES } from \"../constants\";\n\nfunction Launcher(props) {\n  const { onClick } = props;\n\n  return (\n  \t<div id=\"ch_launcher\" className=\"ch-launcher\" onClick={onClick}>\n\t  <img id=\"ch_launcher_image\" className=\"ch-launcher-image\" src={IMAGES.LAUNCHER_ICON} alt=\"\" />\n  \t</div>\n  );\n}\n\nexport { Launcher };","import React from 'react';\n\nfunction Loader(props) {\n\treturn (\n\t\t<div id=\"ch_conv_loader_container\">\n\t\t\t<div id=\"ch_conv_loader\" className=\"ch-loader\"></div>\n\t\t</div>\n\t);\n}\n\nexport { Loader };","import {produce, setAutoFreeze} from \"immer\"\nimport moment from 'moment';\nimport { LANGUAGE_PHRASES, ADMIN_MSG_FORMATS, CALL_FORMATS, IMAGES } from \"../constants\";\nvar sprintf = require('sprintf-js').sprintf\nsetAutoFreeze(false);\n\nexport function createReducer(initialState, actionsMap) {\n  return (state = initialState, action) => {\n    return produce(state, draft => {\n      const caseReducer = actionsMap[action.type];\n      return caseReducer ? caseReducer(draft, action) : undefined;\n    });\n  };\n}\n\nexport function uniqueList(list) {\n  return list.reduce((uniqList, currentValue) => {\n    let ids = uniqList.map(item => {\n      return item.id;\n    });\n    if (ids.indexOf(currentValue.id) < 0) {\n      uniqList.push(currentValue);\n    }else {\n      uniqList.splice(ids.indexOf(currentValue.id), 1, currentValue);\n    }\n    return uniqList;\n  }, []);\n};\n\nexport const modifyConversation = (conversation) => {\n  if (!conversation) {\n    return\n  }\n\n  if (!conversation.isGroup) {\n    if (conversation.user) {\n      conversation.title = conversation.user.displayName;\n      if (conversation.user.profileImageUrl) {\n        conversation.profileImageUrl = conversation.user.profileImageUrl;\n      } else {\n        conversation.profileImageUrl = IMAGES.AVTAR;\n      }\n    } else {\n      conversation.title = \"Deleted User\";\n      conversation.profileImageUrl = IMAGES.AVTAR;\n    }\n  } else {\n    conversation.profileImageUrl = conversation.profileImageUrl ? conversation.profileImageUrl : IMAGES.GROUP;\n  }\n\n  // Set conversation members\n  conversation.otherMemberIds = [];\n  if (conversation.members) {\n    conversation.members.map((member) => {\n      if(member.userId != conversation._client.loginUser.id) {\n        conversation.otherMemberIds.push(member.userId);\n      }\n    });\n  }\n\n  return conversation;\n}\n\nexport const modifyMessageList = (client, conversation, list) => {\n  const user = client.getCurrentUser();\n\n  // Find last message of logged-in user\n  let lastMessage;\n  list.forEach(message => {\n    if (user.id == message.ownerId) {\n      lastMessage = message;\n    }\n  })\n\n  return list.map((message, i) => {\n    // Determine if show read status\n    message.readByAll = null;\n    message.showReadStatus = false;\n    if (lastMessage && lastMessage.id == message.id) {\n      message.showReadStatus = true;\n      message.readByAll = !message.pending && conversation.readByAllMembers(message);\n    }\n\n    // Handle created At\n    if(!('createdAt' in message)) {\n      message.createdAt = Date.now();\n    }\n    message['time'] = AMorPMTimeParser(message.createdAt);\n\n    // Handle message owner\n    if(!message.owner) {\n      message.owner = {\n        id: user.id,\n        displayName: user.displayName,\n        profileImageUrl: user.profileImageUrl\n      };\n    }\n    if (!('profileImageUrl' in message.owner)) {\n      message.owner.profileImageUrl = IMAGES.AVTAR\n    }\n    if (('displayName' in message.owner)) {\n      message.owner.displayName = capitalize(message.owner.displayName)\n    }\n\n    // Determine if message owner is self or other?\n    message['isUser'] = false;\n    if (user.id == message.ownerId) {\n      message.isUser = true;\n    }\n\n    // Replace body of deleted message\n    if(message.isDeleted) {\n      message.body = \"<i>\" + LANGUAGE_PHRASES.MESSAGE_DELETED + '</i>';\n    }\n\n    // Set showOwnerAvatar & showDateSeparator props\n    if (i < list.length) {\n      let nextMessage = list[i + 1];\n\n      message.showOwnerAvatar = false;\n      const isUserLastMessage = (i == list.length -1 && user.id == message.owner.id);\n      message.showOwnerAvatar = !(isSameUser(message, nextMessage, user) || isUserLastMessage || message.isUser);\n\n      let prevMessage = list[i - 1];\n      message.showDateSeparator = !isSameDay(message, prevMessage)\n    }\n\n    // Handle admin message\n    if (message.type == 'admin') {\n      message.system = true;\n      message = _modifyAdminMessage(user, message);\n    }\n\n    return message;\n  });\n};\n\nexport const getLastMessageString = (client, conversation) => {\n  const user = client.getCurrentUser();\n  let message = conversation.lastMessage;\n\n  let lastMessageString;\n  if (!Object.keys(message).length) {\n    lastMessageString = '';\n    return lastMessageString;\n  }\n\n  // Handle admin message\n  if (message.type == 'admin') {\n    lastMessageString = 'Admin message';\n\n    return lastMessageString\n  }\n\n  // Handle attachment\n  const attachments = message.attachments;\n  if (attachments && attachments.length) {\n    const attachment = attachments[0];\n\n    if (message.owner.id == user.id) {\n      lastMessageString = `You sent a ${attachment.type}`\n    } else {\n      const displayName = capitalize(message.owner.displayName);\n      lastMessageString = `${displayName} sent a ${attachment.type}`\n    }\n\n    return lastMessageString;\n  }\n\n  // Set messageOwnerName\n  let messageOwnerName;\n  if (message.owner) {\n    if (message.owner.id == user.id) {\n      messageOwnerName = 'You: '\n    } else {\n      if (conversation.isGroup) {\n        const displayName = capitalize(message.owner.displayName);\n        messageOwnerName = `${displayName}: `;\n      }\n    }\n  }\n\n  if (message.isDeleted) {\n    message.body = \"This message was deleted.\"\n  }\n\n  if (!messageOwnerName) {\n    lastMessageString = `${message.body}`\n  } else {\n    lastMessageString = `${messageOwnerName}${message.body}`\n  }\n\n  return lastMessageString;\n}\n\nexport function lastMessageTimeParser(time) {\n  const today = new Date();\n  const todayDate = today.getDate();\n  const todayMonth = today.getMonth() + 1;\n  const todayYear = today.getFullYear();\n\n  const inputDate = new Date(time);\n  const inputTimeDate = inputDate.getDate();\n  const inputTimeMonth = inputDate.getMonth() + 1;\n  const inputTimeYear = inputDate.getFullYear();\n\n  const showWeekDay = inputTimeYear == todayYear && inputTimeMonth == todayMonth && todayDate - inputTimeDate <= 7;\n  const showTime = inputTimeYear == todayYear && inputTimeMonth == todayMonth && inputTimeDate == todayDate;\n  if (showTime) {\n    return AMorPMTimeParser(inputDate);\n  } else if (showWeekDay) {\n    const weeks = [\n     'Sun',\n     'Mon',\n     'Tue',\n     'Wed',\n     'Thu',\n     'Fri',\n     'Sat'\n    ]\n    return weeks[inputDate.getDay()];\n  } else {\n    return inputTimeMonth + '/' + inputTimeDate + '/' + inputTimeYear;\n  }\n}\n\nexport function AMorPMTimeParser(time) {\n  const inputDate = new Date(time);\n  let hours = inputDate.getHours();\n  var AmOrPm = hours >= 12 ? 'PM' : 'AM';\n  hours = (hours % 12) || 12;\n  var minutes = '0' + inputDate.getMinutes() ;\n  return hours + \":\" + minutes.substr(-2) + \" \" + AmOrPm;\n}\n\nexport function dateSeparatorParser(time) {\n  const today = new Date();\n  const todayDate = today.getDate();\n  const todayMonth = today.getMonth() + 1;\n  const todayYear = today.getFullYear();\n\n  const inputDate = new Date(time);\n  const inputTimeDate = inputDate.getDate();\n  const inputTimeMonth = inputDate.getMonth() + 1;\n  const inputTimeYear = inputDate.getFullYear();\n\n  const showToday = inputTimeYear == todayYear && inputTimeMonth == todayMonth && todayDate == inputTimeDate;\n  const showYesterday = inputTimeYear == todayYear && inputTimeMonth == todayMonth && (todayDate - inputTimeDate) == 1;\n  if(showToday) {\n    return 'Today';\n  } else if (showYesterday) {\n    return 'Yesterday';\n  } else {\n    return inputTimeMonth + '/' + inputTimeDate + '/' + inputTimeYear;\n  }\n}\n\nexport function isSameDay(currentMessage, diffMessage) {\n  if (!currentMessage || !currentMessage.createdAt || !diffMessage || !diffMessage.createdAt) {\n    return false;\n  }\n\n  let currentCreatedAt = new Date(currentMessage.createdAt);\n  let diffCreatedAt = new Date(diffMessage.createdAt);\n  return currentCreatedAt.getDate() == diffCreatedAt.getDate();\n}\n\nexport const typingString = (typing) => {\n  if (!typing.length) {\n    return null;\n  }\n\n  typing = typing.map(user => capitalize(user.displayName.trim().split(' ')[0]));\n  if (typing.length == 1) {\n    return `${typing[0]} is typing...`;\n  } else if(typing.length == 2) {\n    const firstUser = typing[0];\n    const secondUser = typing[1];\n    return `${firstUser} and {secondUser} are typing...`;\n  } else if(typing.length > 2) {\n    const commaSeparatedUsers = typing.slice(0, -1).join(', ')\n    const lastuser = typing.slice(-1);\n    return `${commaSeparatedUsers} and {lastuser} are typing...`;\n  }\n}\n\nexport function isSameUser(currentMessage, diffMessage, user) {\n  return !!(diffMessage &&\n    diffMessage.owner &&\n    currentMessage.owner && (\n    user.id === currentMessage.owner.id ||\n    diffMessage.owner.id === currentMessage.owner.id));\n}\n\nexport const capitalize = (s) => {\n  if (!s) return\n  s = s.split(\" \");\n\n  for (var i = 0, x = s.length; i < x; i++) {\n      if (!s[i]) {\n        s[i] = s[i];\n      } else {\n        s[i] = s[i][0].toUpperCase() + s[i].substr(1);\n      }\n  }\n\n  return s.join(\" \");\n}\n\nconst _modifyAdminMessage = (user, message) => {\n  if (message.type != 'admin') {\n    return message;\n  }\n\n  const attachments = message.attachments;\n  if (!attachments.length) {\n    return message;\n  }\n\n  let attachment = attachments[0];\n  let metaData = attachment.metaData;\n\n  if(metaData.type == \"voice\" || metaData.type == \"video\") {\n    let duration = metaData.duration ? \" \" + secondsToHms(metaData.duration) : \"\";\n    message.text = CALL_FORMATS[attachment.adminMessageType] + duration;\n    return message;\n  }\n\n  // Manipulate subject\n  let subName;\n  if (metaData.subType == 'user') {\n    if (user.id == metaData.subId) {\n      subName = LANGUAGE_PHRASES.YOU;\n    } else {\n      if (metaData.subUser) {\n        subName = capitalize(metaData.subUser.displayName);\n      } else {\n        subName = LANGUAGE_PHRASES.DELETED_MEMBER;\n      }\n    }\n  }\n\n  // Manipulate object\n  let objNames;\n  const objType = metaData.objType;\n  const objValues = metaData.objValues;\n  if (metaData.objType == 'user') {\n    if (metaData.objUsers) {\n      if (user.id == metaData.objUsers.id) {\n        objNames = LANGUAGE_PHRASES.YOU;\n      } else {\n        objNames = capitalize(metaData.objUsers.displayName);\n      }\n    } else {\n      objNames = LANGUAGE_PHRASES.DELETED_MEMBER;\n    }\n  } else if(metaData.objType == 'users' && Array.isArray(objValues)) {\n    let names = [];\n    objValues.forEach(value => {\n      const objUser = metaData.objUsers.find(objUser => objUser && objUser.id == value);\n      let name;\n      if (objUser) {\n        name = capitalize(objUser.displayName);\n      } else {\n        name = LANGUAGE_PHRASES.DELETED_MEMBER;\n      }\n      names.push(name);\n    });\n    objNames = names.join(', ');\n  } else if(metaData.objType == 'group') {\n    if(typeof objValues == 'string') {\n      objNames = capitalize(objValues);\n    } else {\n      objNames = objValues;\n    }\n  }\n\n  const format = ADMIN_MSG_FORMATS[attachment.adminMessageType];\n  if (format) {\n    message.text = sprintf(format, subName, objNames);\n  }\n\n  return message\n}\n\nfunction secondsToHms(second) {\n  second = Number(second);\n  var h = Math.floor(second / 3600);\n  var m = Math.floor(second % 3600 / 60);\n  var s = Math.floor(second % 3600 % 60);\n\n  var hDisplay = h > 0 ? h + \"h \" : \"\";\n  var mDisplay = m > 0 ? m + \"m \" : \"\";\n  var sDisplay = s > 0 ? s + \"s \": \"\";\n  return hDisplay + mDisplay + sDisplay; \n}","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { lastMessageTimeParser, getLastMessageString } from \"../utils\";\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport { setActiveConversation } from \"../actions\";\n\nclass ConversationItem extends PureComponent {\n\n  constructor(props) {\n    super(props);\n  }\n\n  selectConversation = () => {\n    const { conversation, onSelect } = this.props;\n    this.props.setActiveConversation(conversation);\n\n    if (onSelect && typeof onSelect == 'function') {\n      onSelect(conversation);\n    }\n  }\n\n  render() {\n    const { client, activeConversation, conversation } = this.props;\n    let message = conversation.lastMessage;\n\n    // Handle last message\n    const lastMessageString = getLastMessageString(client, conversation);\n\n    // Set Last Message time\n    if(!message.createdAt) {\n      message.time = lastMessageTimeParser(Date());\n    } else {\n      message.time = lastMessageTimeParser(message.updatedAt);\n    }\n\n    // Set online icon\n    let onlineIcon;\n    if(conversation.user && conversation.user.isOnline) {\n      onlineIcon = <span className=\"ch-online-icon ch-show-element\"></span>\n    }\n\n    let style = {}\n    if (activeConversation && activeConversation.id == conversation.id) {\n      style = {'backgroundColor': '#fafafa'};\n    }\n\n    return (\n      <li style={style} id={conversation.id} onClick={this.selectConversation}>\n          <div className=\"ch-conversation-image\" style={{backgroundImage:`url(${conversation.profileImageUrl})`}}>\n            {onlineIcon}\n          </div>\n          <div className=\"ch-conversation-content\">\n          <div className=\"ch-conversation-content__upper\">\n            <div id=\"ch_title\">{conversation.title}</div>\n            <div id=\"ch_created_at\" className=\"ch-created-at\">{message.time}</div>\n          </div>\n          <div className=\"ch-conversation-content__lower\">\n            <div id=\"ch_last_msg_box\" className=\"ch-last-msg-box\">\n              <div className=\"ch-last-message\">{lastMessageString}</div>\n            </div>\n          </div>\n          </div>\n          \n      </li>\n    );\n  }\n}\n\nConversationItem = withChannelizeContext(ConversationItem);\n\nconst mapStateToProps = ({conversation}) => {\n  return {...conversation};\n}\n\nConversationItem = connect(\n  mapStateToProps,\n  { setActiveConversation },\n)(ConversationItem);\n\nexport { ConversationItem }","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { ConversationItem} from \"./ConversationItem\";\nimport { Loader } from \"./Loader\";\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { connect } from 'react-redux';\nimport { withChannelizeContext } from '../context';\nimport { \n  getConversationList,\n  loadMoreConversations,\n  setActiveConversation\n} from \"../actions\";\nimport { modifyConversation } from \"../utils\";\n\nclass ConversationList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.limit = 25;\n    this.skip = 0;\n\n    this.onScroll = this.onScroll.bind(this);\n    this.chRecentListingRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { client, connected, activeConversation, list } = this.props;\n    if (!connected) {\n      return\n    }\n\n    // Find if need to refresh conversation\n    const refresh = !prevProps.connected && this.props.connected;\n    if (refresh) {\n      this._init();\n    }\n\n    // Set a conversation active\n    if (!activeConversation && list.length) {\n      this.props.setActiveConversation(list[0]);\n    }\n  }\n\n  _init = () => {\n    const { client, list } = this.props;\n\n    if (list.length) {\n      return;\n    }\n\n    // Load conversations\n    let conversationListQuery = client.Conversation.createConversationListQuery();\n    conversationListQuery.limit = this.limit;\n    conversationListQuery.skip = this.skip;\n    conversationListQuery.include = 'members';\n    this.props.getConversationList(conversationListQuery);\n  }\n\n  onCloseIconClick = () => {\n    const { onCloseIconClick } = this.props;\n    if (onCloseIconClick && typeof onCloseIconClick == 'function') {\n      onCloseIconClick();\n    }\n  }\n\n  onSearchIconClick = () => {\n    const { onSearchIconClick } = this.props;\n    if (onSearchIconClick && typeof onSearchIconClick == 'function') {\n      onSearchIconClick();\n    }\n  }\n\n  onScroll() {\n    const { list, client, loadingMoreConversations, allConversationsLoaded } = this.props;\n    const chRecentListingRef = this.chRecentListingRef.current;\n\n    if (loadingMoreConversations || allConversationsLoaded || list.length < this.limit) {\n      return\n    }\n\n    if(chRecentListingRef.scrollTop + chRecentListingRef.clientHeight == chRecentListingRef.scrollHeight) {\n      // Set skip\n      this.skip = list.length;\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      conversationListQuery.limit = this.limit;\n      conversationListQuery.skip = this.skip;\n      this.props.loadMoreConversations(conversationListQuery)\n    }\n  }\n\n  render() {\n    let { \n      client,\n      list,\n      connecting,\n      connected,\n      loading,\n      error,\n      loadingMoreConversations,\n      showSearchIcon,\n      onSearchIconClick,\n      showCloseIcon,\n      activeConversation,\n      onSelect\n    } = this.props;\n\n    const user = client.getCurrentUser();\n    let headerImage;\n    if(user && user.profileImageUrl) {\n      headerImage = user.profileImageUrl;\n    } else {\n      headerImage = IMAGES.AVTAR;\n    }\n\n    list = list.map(conversation => modifyConversation(conversation));\n\n    return (\n      <div id=\"ch_recent_window\" className=\"ch-recent-window\">\n        <Header \n          profileImageUrl={headerImage}\n          title={LANGUAGE_PHRASES.CHAT}\n          renderRight={() => {\n            return (\n              <div>\n                { showSearchIcon && <i title=\"Search\" className=\"material-icons\" onClick={this.onSearchIconClick}>search</i>}\n                { showCloseIcon && <i title=\"Close\" className=\"material-icons\" onClick={this.onCloseIconClick}>close</i>}\n              </div>\n            )\n          }}/>\n\n        <div id=\"ch_recent_listing\" className=\"ch-recent-listing\"  ref={this.chRecentListingRef} onScroll={this.onScroll}>\n          { (connecting || loading) &&  <div className=\"center\"><Loader /></div>}\n\n          { error && <div className=\"center error\">{error}</div>}\n\n          { connected && !list.length && !loading && <div className=\"center no-record-found\">No record Found</div>}\n\n          <ul id=\"ch_recent_ul\" className=\"ch-recent-ul\">\n            {\n              list.map((conversation) => {\n                return <ConversationItem \n                  key={conversation.id} \n                  activeConversation={activeConversation} \n                  conversation={conversation}\n                  onSelect={onSelect} />\n              })\n            }\n          </ul>\n\n          { loadingMoreConversations &&  <div> Loading... </div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nConversationList = withChannelizeContext(ConversationList);\n\nconst mapStateToProps = ({conversation, client, message}) => {\n  return {...conversation, ...client, activeConversation: message.conversation};\n}\n\nConversationList = connect(\n  mapStateToProps,\n  { \n    getConversationList,\n    loadMoreConversations,\n    setActiveConversation\n },\n)(ConversationList);\n\nexport { ConversationList }\n","import React, { PureComponent } from 'react';\nimport { LANGUAGE_PHRASES } from \"../constants\";\n\nclass MediaLightBox extends PureComponent {\n\n\tdownloadFile(url, name) {\n\t\tname = name ? name : LANGUAGE_PHRASES.DOWNLOAD_FILE_NAME;\n\t  var link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  link.download = name;\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\t}\n\n\trender() {\n\t\tconst { file } = this.props;\n\t\tconst fileUrl = file.fileUrl ? file.fileUrl : file.thumbnailUrl;\n\n\t\treturn (\n\t\t\t<div className=\"ch-light-box-container\">\n\n\t\t\t\t<div>\n\t\t\t\t\t<i title=\"Close\" className=\"material-icons ch-close-light-box-icon\" onClick={this.props.onCloseClick}>close</i>\n\t\t\t\t\t<i title=\"Download\" className=\"material-icons ch-close-light-box-icon\" onClick={()=> this.downloadFile(fileUrl, file.name)}>arrow_downward</i>\n\t\t\t\t</div>\n\n\t\t\t\t{ file.type == \"image\" &&\n\t\t\t\t\t<img className=\"ch-light-box-file\" src={fileUrl} />\n\t\t\t\t}\n\t\t\t\t{ file.type == \"video\" &&\n\t\t\t\t\t<video controls id=\"videoPlayer\" className=\"ch-light-box-file\" preload=\"auto\" loop=\"loop\" autoPlay=\"autoplay\">\n\t\t\t\t    <source src={fileUrl} />\n\t\t\t\t\t</video>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport { MediaLightBox };","import React, { Component } from 'react';\nimport { withChannelizeContext } from '../context';\nimport { dateSeparatorParser, modifyAdminMessage } from '../utils';\nimport { LANGUAGE_PHRASES } from \"../constants\";\n\nclass MessageSimple extends Component {\n\tconstructor(props) {\n  \tsuper(props);\n\t}\n\n\tdownloadFile(url, name) {\n\t  var link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  link.download = name;\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\t}\n\n\trender() {\n\t\tconst { client, message } = this.props;\n\t\tconst user = client.getCurrentUser();\n\n\t\t// Set class for user/owner message\n\t\tlet msgContainerPos = message.isUser ? \"right\" : \"left\";\n\n\t\tlet adminMsg = message.type === \"admin\" ? true : false;\n\n\t\tlet fileMessage;\n\n\t\tif(message.attachments && message.attachments.length) {\n\t\t\tfileMessage = message.attachments.map(attachment => {\n\t\t\t\tswitch(attachment.type) {\n\t\t\t\t\tcase \"image\":\n\t\t\t\t\t\treturn <img key={message.id} className=\"ch-image-message\" src={attachment.thumbnailUrl ? attachment.thumbnailUrl : attachment.fileUr} onClick={this.props.onClickEvent}/>\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"video\":\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={message.id} className=\"ch-video-container\">\n\t\t\t\t\t\t\t\t<img className=\"ch-image-message\" src={attachment.thumbnailUrl} onClick={this.props.onClickEvent}/>\n\t\t\t\t\t\t\t\t<i className=\"material-icons ch-video-play-icon\" onClick={this.props.onClickEvent}>play_circle_outline</i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"application\":\n\t\t\t\t\t\tlet extension = message.attachments[0].extension ? message.attachments[0].extension : message.attachments[0].name.split(\".\").pop();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={message.id} className=\"ch-text-message\">\n\t\t\t\t\t\t\t\t<div className=\"ch-message\">\n\t\t\t\t\t\t\t\t\t<div className=\"ch-message-body\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"ch-docs-data\">\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"material-icons ch-attachment-icon\">description</i>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"ch-docs-name\">{attachment.name}</span>\n\t\t\t\t\t\t\t\t\t\t\t{ attachment.fileUrl && <i className=\"material-icons ch-docs-download-icon\" onClick={() =>this.downloadFile(attachment.fileUrl, attachment.name)}>arrow_downward</i>}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"ch-docs-details\">\n\t\t\t\t\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t\t\t\t\t<span>{extension}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst ownerProfileImageUrl = message.owner.profileImageUrl; \n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ message.showDateSeparator && \n\t\t\t\t\t<div key={`${message.id}-date`} className=\"ch-msg-padding\">\n\t\t\t\t\t\t<div className=\"ch-message-date-separator\">\n\t\t\t\t\t\t\t<div className=\"message-date-separator_left\"></div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_text\">{dateSeparatorParser(message.createdAt)}</div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_right\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t{ adminMsg ?\n\t\t\t\t\t<div className=\"ch-admin-msg-container\">\n\t\t\t\t\t\t<span className=\"ch-admin-msg\">{message.text}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div key={message.id} className={`ch-msg-padding ${msgContainerPos}`}>\n\t\t\t\t\t\t<div className={`ch-msg-container`}>\n\t\t\t\t\t\t\t{ message.showOwnerAvatar && \n\t\t\t\t\t\t\t\t<div title={message.owner.displayName} className=\"ch-message-owner-avatar\" style={{backgroundImage:`url(${ownerProfileImageUrl})`}}></div>\n\t\t\t\t\t\t \t}\n\t\t\t\t\t\t\t<div className={`ch-msg-content ${msgContainerPos == 'left' && !message.showOwnerAvatar ? 'padding-left': ''}`}>\n\t\t\t\t\t\t\t\t{ message.body && <div className={`ch-text-message`}>{message.body}</div> }\n\n\t\t\t\t\t\t\t\t{ fileMessage }\n\n\t\t\t\t\t\t\t\t<div className={`message-info`}>\n\t\t\t\t\t\t\t\t\t<span id=\"ch_msg_time\" className=\"ch-msg-time\">{message.time}</span>\n\t\t\t\t\t\t\t\t\t{ message.showReadStatus && message.readByAll &&\n\t\t\t\t\t\t\t\t\t\t<i id=\"ch_msg_status\" className=\"material-icons ch-msg-status ch-msg-read-status\">done_all</i>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{ message.showReadStatus && !message.pending && !message.readByAll &&\n\t\t\t\t\t\t\t\t\t\t<i id=\"ch_msg_status\" className=\"material-icons ch-msg-status\">done</i>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{ message.showReadStatus && message.pending &&\n\t\t\t\t\t\t\t\t\t\t<i id=\"ch_msg_status\" className=\"material-icons ch-msg-status\">schedule</i>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nMessageSimple = withChannelizeContext(MessageSimple);\n\nexport { MessageSimple };","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { Loader } from \"./Loader\";\nimport { MediaLightBox } from \"./MediaLightBox\";\nimport { MessageSimple } from \"./MessageSimple\";\nimport { modifyConversation, modifyMessageList, typingString } from \"../utils\";\nimport { connect } from 'react-redux';\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport { \n  getMessageList,\n  sendMessageToConversation,\n  sendMessageToUserId,\n  sendFileToConversation,\n  loadMoreMessages as loadMoreMessagesAction,\n  setActiveConversation,\n  setActiveUserId,\n  registerConversationEventHandlers\n} from '../actions';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport throttle from 'lodash/throttle';\nimport debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\n\nclass ConversationWindow extends PureComponent {\n\n\tconstructor(props) {\n    super(props);\n    this.limit = 25;\n    this.skip = 0;\n    this.showMediaLightBox = false;\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n    this._markAsRead = throttle(this._markAsRead, 500);\n    this.sendMedia = this.sendMedia.bind(this);\n    this._startTyping = throttle(this._startTyping, 3000);\n    this._stopTyping = debounce(this._stopTyping, 3000);\n\n    this.chMessageBoxRef = React.createRef();\n\n    this.state = {\n      text: '',\n      dummyConversation: null,\n      userId: null\n    }\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  getSnapshotBeforeUpdate(prevProps) {\n    if (prevProps.list.length < this.props.list.length) {\n      if (!this.chMessageBoxRef) {\n        return null;\n      }\n\n      const chMessageBoxRef = this.chMessageBoxRef.current;\n      return {\n        scrollHeight: chMessageBoxRef.scrollHeight,\n        offsetTop: chMessageBoxRef.scrollTop,\n        offsetBottom: chMessageBoxRef.scrollHeight - chMessageBoxRef.scrollTop,\n      }\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { \n      client,\n      conversation,\n      newMessage,\n      userId,\n      loadingMoreMessages } = this.props;\n\n    // Find if need to refresh conversation\n    const refresh = !prevProps.connected && this.props.connected;\n    if (refresh) {\n      this._init();\n    }\n\n    // if userId switches, re-intialize the conversation\n    if (prevProps.userId != userId && userId) {\n      this._init();\n    }\n\n    // Set the conversation after sending first mesage in dummy conversation\n    if (!conversation && prevProps.sendingMessage && !this.props.sendingMessage) {\n      this._scrollToTarget()\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      if (userId) {\n        conversationListQuery.membersExactly = userId;\n        conversationListQuery.isGroup = false;\n      }\n\n      conversationListQuery.list((err, conversations) => {\n        if (conversations.length) {\n          this.props.setActiveConversation(conversations[0])\n          return\n        }\n\n        client.User.get(userId, (err, user) => {\n          this.setState({\n            dummyConversation: {isGroup: false, user}\n          })\n        })\n      })\n    }\n\n    if (!conversation) {\n      return\n    }\n\n    if ((!prevProps.conversation && conversation) || (prevProps.conversation.id != conversation.id)) {\n      this._init();\n    }\n\n    // Scroll to bottom on initial message loading\n    if (prevProps.loading && !this.props.loading) {\n      this._scrollToTarget()\n    }\n\n    // Scroll to Bottom on new message received\n    if((!prevProps.newMessage && newMessage) || (newMessage && prevProps.newMessage.id != newMessage.id) ) {\n      this._scrollToTarget()\n\n      const user = client.getCurrentUser();\n      if (user.id != newMessage.ownerId) {\n        this._markAsRead(conversation)\n      }\n    }\n\n    // Scroll to target after load more mesages\n    if(prevProps.list.length < this.props.list.length) {\n      if (snapshot) {\n        const chMessageBoxRef = this.chMessageBoxRef.current;\n        const target = chMessageBoxRef.scrollHeight - snapshot.offsetBottom;\n        this._scrollToTarget(target);\n      }\n    }\n  }\n\n  _markAsRead = (conversation) => {\n    if (conversation && conversation.config.typing_events) {\n      conversation.markAsRead();\n    }\n  }\n\n  _scrollToTarget = (target) => {\n    if (!this.chMessageBoxRef) {\n      return\n    }\n\n    const chMessageBoxRef = this.chMessageBoxRef.current;\n    if (Object.prototype.toString.call(target) === \"[object Number]\") {\n      chMessageBoxRef.scrollTop = target;\n      return\n    }\n\n    chMessageBoxRef.scrollTop = chMessageBoxRef.scrollHeight;\n  }\n\n  _init = () => {\n    const { client, conversation, userId, ownProps } = this.props;\n\n    if (!conversation && !userId) {\n      // Handle ownProps\n      if (Object.keys(ownProps).length) {\n        if (ownProps.conversation) {\n          let conversation = ownProps.conversation;\n\n          if (conversation.type != 'open' || conversation.__isWatching) {\n            this.props.setActiveConversation(conversation);\n            return;\n          }\n\n          // Start watching open conversation\n          conversation.startWatching((err, res) => {\n            this.props.setActiveConversation(conversation);\n          })\n          return;\n        }\n        if (ownProps.userId) {\n          this.props.setActiveUserId(ownProps.userId);\n          return;\n        }\n      }\n      return\n    }\n\n    // If conversation not exist, get the conversation from userId\n    if (!conversation) {\n      this.setState({\n        dummyConversation: null\n      })\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      if (userId) {\n        conversationListQuery.membersExactly = userId;\n        conversationListQuery.isGroup = false;\n      }\n\n      conversationListQuery.list((err, conversations) => {\n        if (conversations.length) {\n          this.props.setActiveConversation(conversations[0])\n          return\n        }\n\n        client.User.get(userId, (err, user) => {\n          this.setState({\n            dummyConversation: {isGroup: false, user}\n          })\n        })\n      })\n    }\n\n    if (!conversation) {\n      return\n    }\n\n    // Register conversation event handlers\n    this.props.registerConversationEventHandlers(conversation);\n\n    // Load messages\n    let messageListQuery = conversation.createMessageListQuery();\n    messageListQuery.limit = this.limit;\n    this.skip = 0;\n    messageListQuery.skip = this.skip;\n    this.props.getMessageList(messageListQuery);\n\n    // Mark as read conversation\n    if (conversation.unreadMessageCount > 0) {\n      conversation.markAsRead();\n    }\n  }\n\n  handleChange(event) {\n    this.setState({text: event.target.value});\n  }\n\n  handleKeyUp(event) {\n    if(event.keyCode === 13) {\n      event.preventDefault();\n      this.sendMessage();\n      return;\n    }\n\n    this._onTextMessageChanged(event.target.value);\n  }\n\n  _onTextMessageChanged = (textMessage) => {\n    if (textMessage) {\n      this._startTyping();\n    }\n\n    this._stopTyping();\n  }\n\n  _startTyping = () => {\n    const { conversation } = this.props;\n    if (conversation && conversation.type == \"private\") {\n      conversation.startTyping();\n    }\n  }\n\n  _stopTyping = () => {\n    const { conversation } = this.props;\n    if (conversation  && conversation.type == \"private\") {\n      conversation.stopTyping();\n    }\n  }\n\n  sendFile(file) {\n    const { client, conversation } = this.props;\n    const user = client.getCurrentUser();\n\n    let fileType = file.type.split('/').shift();\n\n    if(file.type.match('application')) {\n\n      const body = {\n        id: uuid(),\n        pending: true,\n        ownerId: user.id,\n        attachments: [{\n          type: fileType,\n          name: file.name\n        }],\n      }\n      \n      this.props.sendFileToConversation(client, conversation, file, body, fileType);\n      return;\n    }\n\n    this.getFileThumbnailUrl(file, (url) => {\n      const body = {\n        id: uuid(),\n        pending: true,\n        ownerId: user.id,\n        attachments: [{\n          type: fileType,\n          thumbnailUrl: url\n        }],\n      }\n\n      if(file.type.match('video')) {\n        body.attachments[0].fileUrl = URL.createObjectURL(file);\n      }\n      \n      this.props.sendFileToConversation(client, conversation, file, body, fileType);\n    });\n  }\n  \n  sendMessage() {\n    const { conversation, client, userId } = this.props;\n    const user = client.getCurrentUser();\n    const { text } = this.state;\n    let body = {\n      id: uuid(),\n      body: text,\n      ownerId: user.id,\n      pending: true,\n    }\n    this.setState({text: ''})\n\n\n    if (conversation) {\n      this.props.sendMessageToConversation(conversation, body)\n    } else {\n      body.userId = userId;\n      this.props.sendMessageToUserId(client, body)\n    }\n  }\n\n  getFileThumbnailUrl(file, cb) {\n    var fileReader = new FileReader();\n    if (file.type.match('image')) {\n      fileReader.onload = function() {\n        var img = document.createElement('img');\n        cb(fileReader.result);\n      };\n      fileReader.readAsDataURL(file);\n    } else if(file.type.match('video')) {\n      fileReader.onload = function() {\n        var blob = new Blob([fileReader.result], {type: file.type});\n        var url = URL.createObjectURL(blob);\n        var video = document.createElement('video');\n        var timeupdate = function() {\n          if (snapImage()) {\n            video.removeEventListener('timeupdate', timeupdate);\n            video.pause();\n          }\n        };\n        video.addEventListener('loadeddata', function() {\n          if (snapImage()) {\n            video.removeEventListener('timeupdate', timeupdate);\n          }\n        });\n        var snapImage = function() {\n          var canvas = document.createElement('canvas');\n          canvas.width = video.videoWidth;\n          canvas.height = video.videoHeight;\n          canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n          var image = canvas.toDataURL();\n          var success = image.length > 100000;\n          if (success) {\n            var img = document.createElement('img');\n            img.src = image;\n            cb(image);\n            URL.revokeObjectURL(url);\n          }\n          return success;\n        };\n        video.addEventListener('timeupdate', timeupdate);\n        video.preload = 'metadata';\n        video.src = url;\n        // Load video in Safari / IE11\n        video.muted = true;\n        video.playsInline = true;\n        video.play();\n      };\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  onCloseIconClick = () => {\n    this.props.setActiveConversation(null)\n\n    const { onCloseIconClick } = this.props;\n    if (onCloseIconClick && typeof onCloseIconClick == 'function') {\n      onCloseIconClick();\n    }\n  }\n\n  onScroll() {\n    const { list, conversation, loadingMoreMessages, allMessagesLoaded } = this.props;\n    if (!conversation) {\n      return null\n    }\n\n    const chMessageBoxRef = this.chMessageBoxRef.current;\n    if (loadingMoreMessages || allMessagesLoaded || list.length < this.limit) {\n      return\n    }\n\n    if(chMessageBoxRef.scrollTop < chMessageBoxRef.clientHeight) {\n      // Set skip\n      this.skip = list.length;\n\n      let messageListQuery = conversation.createMessageListQuery();\n      messageListQuery.limit = this.limit;\n      messageListQuery.skip = this.skip;\n      this.props.loadMoreMessagesAction(messageListQuery)\n    }\n  }\n\n  blockUser() {\n\n  }\n\n  unblockUser() {\n\n  }\n\n  sendMedia(event) {\n    this.sendFile(event.target.files[0]);\n    event.target.value = null;\n  }\n\n  viewMediaToggle(message) {\n    let file = message ? message.attachments[0] : null\n    this.setState({openMediaFile: file});\n  }\n\n  render() {\n    let { \n      client,\n      connecting,\n      connected,\n      error,\n      loading,\n      loadingMoreMessages,\n      list,\n      conversation,\n      showCloseIcon,\n      showChevron,\n      disableComposer,\n      disableComposerMessage,\n      Message,\n      renderHeader,\n      typing\n    } = this.props;\n    const { text, dummyConversation } = this.state;\n\n    // Set dummy conversation if conversation doesn't exist\n    if (!conversation) {\n      conversation = dummyConversation\n      list = [];\n    }\n\n    // Modify message list\n    list = modifyMessageList(client, conversation, list);\n\n    // Disable composer setting\n    let composerDisabled = false;\n    if (disableComposer && typeof disableComposer == 'function') {\n      composerDisabled = disableComposer(conversation)\n    }\n\n    // Set header details\n    let actionButton;\n    let headerTitle;\n    let headerImage;\n    let headerSubtitle;\n\n    if (conversation) {\n      conversation = modifyConversation(conversation);\n      headerTitle = conversation.title;\n      headerImage = conversation.profileImageUrl;\n\n      if (!conversation.isGroup && conversation.user) {\n        headerSubtitle = conversation.user.isOnline ? 'Online' : 'Last Seen ' + moment(conversation.user.lastSeen).fromNow();\n      }\n\n      if (conversation.isGroup) {\n        headerSubtitle = conversation.memberCount + ' Members';\n      }\n\n      // Action buttons\n      if(!conversation.isActive) {\n        actionButton = <div id=\"ch_conv_unblock\" onClick={() => this.unblockUser()}>Unblock User</div>\n      } else {\n        actionButton = <div id=\"ch_conv_block\" onClick={() => this.blockUser()}>Block User</div>\n      }\n    }\n\n    const user = client.getCurrentUser();\n    const typingStrings = typingString(typing);\n\n\t\treturn (\n  \t\t<div id=\"ch_conv_window\" className=\"ch-conv-window\">\n  \t\t\t{ conversation && renderHeader && renderHeader(conversation) }\n        { conversation && !renderHeader && <Header\n          profileImageUrl={headerImage}\n          title={headerTitle}\n          subtitle={headerSubtitle}\n          showChevron={(showChevron && actionButton) ? true : false}\n          renderDropDownList={() => {\n            if (!actionButton) {\n              return\n            }\n\n            return (\n              <div className=\"ch-drop-down-list\">\n                {actionButton}\n              </div>\n            )\n          }}\n\n          renderRight={() => {\n            return (\n              <React.Fragment>\n                { showCloseIcon && <i title=\"Close\" className=\"material-icons\" onClick={this.onCloseIconClick}>close</i>}\n              </React.Fragment>\n            )\n          }}/>\n        }\n\n        <div id=\"ch_messages_box\" ref={this.chMessageBoxRef} className=\"ch-messages-box\" onScroll={this.onScroll}>\n          { <div className=\"ch-conversation-padding\"> </div>}\n         \n          { (connecting || loading) &&  <div className=\"center\"><Loader /></div>}\n\n          { error && <div className=\"center error\">{error}</div>}\n\n          <div className=\"ch-msg-list\">\n            { connected && !conversation && <div className=\"center no-record-found\">No conversation seleted</div>}\n\n            { loadingMoreMessages &&  <Loader />}\n\n            { conversation && !list.length && !loading && <div className=\"center no-record-found\">No record Found</div>}\n\n    \t\t\t\t{\n    \t\t\t\t\tlist.map(message => {\n                return <Message \n                    key={message.id} \n                    message={message} \n                    onClickEvent={()=>this.viewMediaToggle(message)} \n                  />\n              })\n    \t\t\t\t}\n\n            <div className=\"ch-typing-strings\">{typingStrings}</div>\n          </div>\n        </div>\n\n        { conversation &&\n          <React.Fragment>\n            { composerDisabled ?\n              <div className=\"ch-composer-disabled-box\">\n                <div>{disableComposerMessage}</div>\n              </div>\n              :\n        \t\t\t<div id=\"ch_send_box\" className=\"ch-send-box\">\n\n                <div className=\"ch-media-icon-box\">\n                  <i title={LANGUAGE_PHRASES.SHARE_GALLERY} className=\"material-icons ch-attachment-icon\">insert_photo</i>\n                  <input id=\"ch_gallary_input\" title={LANGUAGE_PHRASES.SHARE_GALLERY} className=\"ch-gallary-input\" type=\"file\" accept=\"image/*, video/*\" onChange={this.sendMedia} />\n                </div>\n\n                <div className=\"ch-media-icon-box\">\n                  <i title={LANGUAGE_PHRASES.SHARE_DOCUMENT} className=\"material-icons ch-attachment-icon\">description</i>\n                  <input id=\"ch_document_input\" title={LANGUAGE_PHRASES.SHARE_DOCUMENT} className=\"ch-document-input\" type=\"file\" accept=\"application/*,.doc,.docx,.xls,.ppt\" onChange={this.sendMedia} />\n                </div>\n\n        \t\t\t\t<textarea \n                  id=\"ch_input_box\"\n                  className=\"ch-input-box\"\n                  type=\"text\"\n                  placeholder={LANGUAGE_PHRASES.SEND_MESSAGE}\n                  value={text}\n                  onChange={this.handleChange} \n                  onKeyUp={this.handleKeyUp}></textarea>\n\n      \t\t\t\t\t<button\n                  id=\"ch_send_button\"\n                  className=\"ch-send-button\"\n                  title={LANGUAGE_PHRASES.SEND}\n                  onClick={this.sendMessage}\n                >\n                  <i className=\"ch-send-icon material-icons\">send</i>\n                </button>\n        \t\t\t</div>\n            }\n          </React.Fragment>\n        }\n\n        { this.state.openMediaFile && <MediaLightBox file={this.state.openMediaFile} onCloseClick={()=> this.viewMediaToggle(null)} /> }\n  \t\t</div>\n\t\t);\n  }\n}\n\nConversationWindow = withChannelizeContext(ConversationWindow);\n\nConversationWindow.propTypes = {\n  Message: PropTypes.elementType,\n}\n\nConversationWindow.defaultProps = {\n  Message: MessageSimple\n};\n\nconst mapStateToProps = ({message, client}, ownProps) => {\n  return {...message, ...client, ownProps: ownProps}\n}\n\nConversationWindow = connect(\n  mapStateToProps,\n   {\n    getMessageList,\n    sendMessageToConversation,\n    sendMessageToUserId,\n    sendFileToConversation,\n    loadMoreMessagesAction,\n    setActiveConversation,\n    setActiveUserId,\n    registerConversationEventHandlers\n   }\n)(ConversationWindow);\n\nexport { ConversationWindow }","import React, { Component } from 'react';\nimport { withChannelizeContext } from '../context';\nimport { dateSeparatorParser } from '../utils'\n\nclass MessageLivestream extends Component {\n\tconstructor(props) {\n  \tsuper(props);\n\t}\n\n\tshowImage(url) {\n\t\tvar link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\n\t}\n\n\tdownloadFile(url, name) {\n\t  var link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  link.download = name;\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\t}\n\n\trender() {\n\t\tconst { client, message } = this.props;\n\t\tconst user = client.getCurrentUser();\n\n\t\t// Set class for user/owner message\n\t\tlet msgContainerPos = \"left\";  \n\n\t\tlet fileMessage = message.attachments.map(attachment => {\n\t\t  switch(attachment.type) {\n\t\t\tcase \"image\":\n\t\t\t  return <img className=\"ch-image-message\" src={attachment.thumbnailUrl ? attachment.thumbnailUrl : attachment.fileUr} onClick={()=>this.showImage(attachment.fileUrl)}/>\n\t\t\t  break;\n\t\t\tcase \"video\":\n\t\t\t  return (\n\t\t\t\t<div className=\"ch-video-container\">\n\t\t\t\t  <img className=\"ch-image-message\" src={attachment.thumbnailUrl} onClick={()=>this.showImage(attachment.fileUrl)}/>\n\t\t\t\t  <i className=\"material-icons ch-video-play-icon\">play_circle_outline</i>\n\t\t\t\t</div>\n\t\t\t  );\n\t\t\t  break;\n\t\t  \tcase \"application\":\n\t\t\t  return (\n\t\t\t\t<div className=\"ch-text-message\">\n\t\t\t\t  <div className=\"ch-message-body\">\n\t\t\t\t  \t<div className=\"ch-docs-data\">\n\t\t\t\t\t  <i className=\"material-icons ch-attachment-icon\">description</i>\n\t\t\t\t\t  <span className=\"ch-docs-name\">{attachment.name}</span>\n\t\t\t\t\t  <i className=\"material-icons ch-docs-download-icon\" onClick={() =>this.downloadFile(attachment.fileUrl, attachment.name)}>arrow_downward</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ch-docs-details\">\n\t\t\t\t\t  <hr></hr>\n\t\t\t\t\t  <span>{attachment.extension}</span>\n\t\t\t\t\t</div>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t  )\n\t\t\t  break;\n\t\t\tdefault:\n\t\t\t  return null;\n\t\t\t  break;\n\t\t  }\n\t\t});\n\n\t\tconst ownerProfileImageUrl = message.owner.profileImageUrl; \n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ message.showDateSeparator && \n\t\t\t\t\t<div key={`${message.id}-date`} className=\"ch-msg-padding\">\n\t\t\t\t\t\t<div className=\"ch-message-date-separator\">\n\t\t\t\t\t\t\t<div className=\"message-date-separator_left\"></div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_text\">{dateSeparatorParser(message.createdAt)}</div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_right\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t<div key={message.id} className={`ch-msg-padding ${msgContainerPos}`}>\n\t\t\t\t\t<div className={`ch-msg-container`}>\n\t\t\t\t\t\t<div title={message.owner.displayName} className=\"ch-message-owner-avatar\" style={{backgroundImage:`url(${ownerProfileImageUrl})`}}></div>\n\t\t\t\t\t\t<div className=\"ch__message-livestream__owner-name\">{message.owner.displayName}</div>\n\t\t\t\t\t\t<div className={`ch-msg-content`}>\n\t\t\t\t\t\t\t\t{ message.body && <div className={`ch__message-livestream__text`}>{message.body}</div> }\n\n\t\t\t\t\t\t\t\t{fileMessage}\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nMessageLivestream = withChannelizeContext(MessageLivestream);\n\nexport { MessageLivestream };","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { Loader } from \"./Loader\";\nimport { connect } from 'react-redux';\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport { \n  getFriendsList,\n  loadMoreFriends,\n  getMoreUsersList,\n  searchFriends as searchFriendsAction,\n  setActiveUserId,\n} from '../actions';\nimport debounce from 'lodash/debounce';\n\nclass SearchWindow extends PureComponent {\n\n\tconstructor(props) {\n    super(props);\n    this.searchLimit = 10;\n    this.friendsLimit = 50;\n\n    this.state = {\n      searchText: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this._searchOnServer = debounce(this._searchOnServer, 800)\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { client, connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    if (!prevProps.connected && connected) {\n      this._init();\n    }\n  }\n\n  _init = () => {\n    const { client } = this.props;\n\n    // Load friends\n    let friendsListQuery = client.User.createUserListQuery();\n    friendsListQuery.limit = this.friendsLimit;\n    friendsListQuery.skip = 0;\n    friendsListQuery.sort = 'isOnline DESC, displayName ASC ';\n    this.props.getFriendsList(friendsListQuery);\n  }\n\n  handleChange(event) {\n    let inputValue = event.target.value;\n    this.setState({searchText: inputValue})\n\n    if (!inputValue) {\n      return\n    }\n    this._searchOnServer(inputValue);\n  }\n\n  _searchOnServer = (value) => {\n    const { client } = this.props;\n\n    // search friends\n    let friendsListQuery = client.User.createUserListQuery();\n    friendsListQuery.limit = this.searchLimit;\n    friendsListQuery.skip = 0;\n    friendsListQuery.search = value;\n    friendsListQuery.sort = 'isOnline DESC, displayName ASC';\n    this.props.searchFriendsAction(friendsListQuery);\n\n    // Load more users\n    let moreUsersListQuery = client.User.createUserListQuery();\n    moreUsersListQuery.limit = this.searchLimit;\n    moreUsersListQuery.skip = 0;\n    moreUsersListQuery.search = value;\n    moreUsersListQuery.sort = 'isOnline DESC, displayName ASC';\n    this.props.getMoreUsersList(moreUsersListQuery);\n  }\n\n  clearSearch = () => {\n    this.setState({searchText: ''})\n  }\n\n  onContactClick = (userId) => {\n    const { onContactClick } = this.props;\n    this.props.setActiveUserId(userId)\n\n    if (onContactClick && typeof onContactClick == 'function') {\n      onContactClick(userId)\n    }\n  }\n\n  render() {\n    let {\n      connecting, \n      connected,\n      loadingFriendsList,\n      loadingSearchFriends,\n      friendslist,\n      moreUsersList,\n      searchFriends,\n      showArrowBack,\n      onBack\n    } = this.props;\n    const { searchText } = this.state;\n\n    let list = friendslist;\n    if (searchText) {\n      list = searchFriends;\n    } else {\n      moreUsersList = [];\n    }\n\n    const showMoreUsers = moreUsersList.length ? true : false;\n\n  \treturn (\n      <div id=\"ch_search_window\" className=\"ch-search-window\">\n        <Header\n          showArrowBack={showArrowBack}\n          onBack={onBack}\n          title={LANGUAGE_PHRASES.SEARCH} \n        />\n\n        <div id=\"ch_search_box\" className=\"ch-search-box\">\n          <input placeholder=\"Search\" id=\"ch_search_input_box\" className=\"ch-search-input-box\" value={searchText} onChange={this.handleChange} />\n          { searchText && <i id=\"ch_clear_search_icon\" className=\"material-icons ch-clear-search-icon\" onClick={this.clearSearch}>close</i>}\n        </div>\n\n        <div id=\"ch_friends_box\" className=\"ch-friends-box\">\n          { (connecting || loadingFriendsList) && <div className=\"center\"><Loader /></div>}\n\n          { loadingSearchFriends && <div><Loader /></div>}\n\n          { connected && searchText && !list.length && !showMoreUsers && !loadingFriendsList && !loadingSearchFriends && <div className=\"center no-record-found\">No Record Found</div>}\n\n          <div id=\"ch_suggested_box\">\n            { !searchText && !loadingFriendsList && <div id=\"ch_suggested\" className=\"ch-suggested\">{LANGUAGE_PHRASES.SUGGESTED}</div>}\n\n            {list.map(friend => {\n              const imgUrl = friend.profileImageUrl ? friend.profileImageUrl : IMAGES.AVTAR;\n              return (\n                <li key={friend.id} id={friend.id} className=\"ch-friends-list\" onClick={() => this.onContactClick(friend.id)}>\n                  <div className=\"ch-contact-img\" style={{backgroundImage:`url(${imgUrl})`}}>\n                    { friend.isOnline && <span className=\"ch-online-icon ch-show-element\"></span> }\n                  </div>\n                  <div id=\"ch_friend_name\" className=\"ch-friend-name\">{friend.displayName}</div>\n                </li>\n              )})\n            }\n          </div>\n\n          { showMoreUsers &&\n            <div id=\"ch_users_box\">\n              <div id=\"ch_more_users\" className=\"ch-more-users\">{LANGUAGE_PHRASES.MORE_USERS}</div>\n              { moreUsersList.map((user) => {\n                const imgUrl = user.profileImageUrl ? user.profileImageUrl : IMAGES.AVTAR;\n                return (\n                  <li key={user.id} id={user.id} className=\"ch-friends-list\" onClick={() => this.onContactClick(user.id)}>\n                    <div className=\"ch-contact-img\" style={{backgroundImage:`url(${imgUrl})`}}>\n                      { user.isOnline && <span className=\"ch-online-icon ch-show-element\"></span> }\n                    </div>\n                    <div id=\"ch_friend_name\" className=\"ch-friend-name\">{user.displayName}</div>\n                  </li>\n                )})\n              }\n            </div>\n          }\n        </div>\n      </div>\n\t\t);\n  }\n}\n\nSearchWindow = withChannelizeContext(SearchWindow);\n\nconst mapStateToProps = ({user, client}) => {\n  return {...user, ...client}\n}\n\nSearchWindow = connect(\n  mapStateToProps,\n  { \n  getFriendsList,\n  loadMoreFriends ,\n  getMoreUsersList,\n  searchFriendsAction,\n  setActiveUserId }\n)(SearchWindow)\n\nexport { SearchWindow };","import { \n  LOADING_FRIENDS_LIST,\n  FRIENDS_LIST_FAIL,\n  FRIENDS_LIST_SUCCESS,\n  LOADING_LOAD_MORE_FRIENDS,\n  LOAD_MORE_FRIENDS_SUCCESS,\n  LOAD_MORE_FRIENDS_FAIL,\n  LOADING_MORE_USERS_LIST,\n  MORE_USERS_LIST_FAIL,\n  MORE_USERS_LIST_SUCCESS,\n  LOADING_SEARCH_FRIENDS,\n  SEARCH_FRIENDS_SUCCESS,\n  SEARCH_FRIENDS_FAIL\n} from '../constants';\n\nexport const getFriendsList = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_FRIENDS_LIST,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: FRIENDS_LIST_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: FRIENDS_LIST_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n\nexport const loadMoreFriends = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_FRIENDS,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_FRIENDS_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: LOAD_MORE_FRIENDS_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n\nexport const getMoreUsersList = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_MORE_USERS_LIST,\n      payload: {}\n    });\n    return userListQuery.usersList((err, response) => {\n      if (err) {\n        dispatch({\n          type: MORE_USERS_LIST_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: MORE_USERS_LIST_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};\n\nexport const searchFriends = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_SEARCH_FRIENDS,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: SEARCH_FRIENDS_FAIL,\n          payload: err\n        });\n      }\n      dispatch({\n        type: SEARCH_FRIENDS_SUCCESS,\n        payload: response\n      });\n    })\n  };\n};","import {\n  CONNECTING,\n  CONNECT_SUCCESS,\n  CONNECT_FAIL,\n  DISCONNECT_SUCCESS,\n  DISCONNECT_FAIL\n} from '../constants';\n\nconst INITIAL_STATE = {\n  connecting: false,\n  connected: false,\n  error: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CONNECTING:\n      return { ...state, connecting: true };\n\n    case CONNECT_SUCCESS:\n\t    return { ...state, connected: true , connecting: false};\n\n\t  case CONNECT_FAIL:\n\t    return { ...state, connected: false, error: action.payload, connecting: false };\n\n  \tcase DISCONNECT_SUCCESS:\n  \t  return { ...state, connected: false };\n\n  \tcase DISCONNECT_FAIL:\n  \t  return { ...state, connected: true, error: action.payload };\n    \n    default:\n      return state;\n  }\n};\n","import {\n  LOADING_CONVERSATION_LIST,\n  CONVERSATION_LIST_FAIL,\n  CONVERSATION_LIST_SUCCESS,\n  LOADING_LOAD_MORE_CONVERSATIONS,\n  LOAD_MORE_CONVERSATIONS_FAIL,\n  LOAD_MORE_CONVERSATIONS_SUCCESS,\n  USER_STATUS_UPDATED_EVENT,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  USER_JOINED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  CONVERSATION_UPDATED_EVENT,\n  USER_UPDATED_EVENT,\n  MARK_AS_READ_EVENT\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\n\nconst INITIAL_STATE = {\n  list: [],\n  loading: false,\n  loadingMoreConversations: false,\n  allConversationsLoaded: false,\n  error: null\n};\n\nexport const loadingConversationList = (state, action) => {\n  state.loading = true;\n};\n\nexport const listConversationSuccess = (state, action) => {\n  state.loading = false;\n  state.list = action.payload;\n};\n\nexport const listConversationFail = (state, action) => {\n  state.loading = false;\n  state.error = action.payload;\n};\n\nexport const loadingLoadMoreConversations = (state, action) => {\n  state.loadingMoreConversations = true;\n};\n\nexport const loadMoreConversationsSuccess = (state, action) => {\n  state.loadingMoreConversations = false;\n  if (!action.payload.length) {\n    state.allConversationsLoaded = true;\n  } else {\n    state.list = [...state.list, ...action.payload];\n    state.list = uniqueList(state.list);\n  }\n};\n\nexport const loadMoreConversationsFail = (state, action) => {\n  state.loadingMoreConversations = false;\n  state.error = action.payload;\n};\n\nexport const userStatusUpdated = (state, action) => {\n  let user = action.payload.user;\n  const finalList = state.list.map((conversation, index) => {\n    if (!conversation.isGroup && conversation.user.id == user.id) {\n      conversation.user.isOnline = user.isOnline;\n      conversation.user.lastSeen = user.lastSeen;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  state.list = finalList;\n};\n\nexport const userUpdated = (state, action) => {\n  let user = action.payload.user;\n  const finalList = state.list.map((conversation, index) => {\n    if (!conversation.isGroup && conversation.user.id == user.id) {\n      conversation.user.isOnline = user.isOnline;\n      conversation.user.lastSeen = user.lastSeen;\n      conversation.user.displayName = user.displayName;\n      conversation.user.profileImageUrl = user.profileImageUrl;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  state.list = finalList;\n};\n\nexport const newMessageReceived = (state, action) => {\n  let message = action.payload.message;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.list.map((conversation, index) => {\n    if (conversation.id == message.conversationId) {\n      conversation.lastMessage = message;\n      conversation.updatedAt = action.payload.timestamp;\n\n      conversationIndex = index;\n      latestConversation = conversation;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.list = finalList;\n};\n\nexport const conversationUpdated = (state, action) => {\n  let conversation = action.payload.conversation;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.list.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.title = conversation.title;\n      item.profileImageUrl = conversation.profileImageUrl;\n      item.updatedAt = action.payload.timestamp;\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.list = finalList;\n};\n\nexport const userJoined = (state, action) => {\n  const { conversation } = action.payload;\n  state.list = [...[conversation], ...state.list];\n  state.list = uniqueList(state.list);\n};\n\nexport const membersAdded = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.list.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.memberCount = conversation.memberCount;\n      item.updatedAt = timestamp;\n      item.members = item.members.concat(members)\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.list = finalList;\n};\n\nexport const membersRemoved = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.list.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.memberCount = conversation.memberCount;\n      item.updatedAt = timestamp;\n\n      // Remove members\n      members.forEach(removedMember => {\n        const index = item.members.findIndex(member => member.userId == removedMember.id)\n        if (index >=0) {\n          item.members.splice(index, 1);\n        }\n      })\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.list = finalList;\n};\n\nexport const markAsRead = (state, action) => {\n  let { conversation, user, timestamp } = action.payload;\n\n  const finalList = state.list.map((item, index) => {\n    if (item.id == conversation.id) {\n      if (item.lastReadAt[user.id]) {\n        item.lastReadAt[user.id] = timestamp;\n      }\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  state.list = finalList;\n}\n\nexport const handlers = {\n  [LOADING_CONVERSATION_LIST]: loadingConversationList,\n  [CONVERSATION_LIST_FAIL]: listConversationFail,\n  [CONVERSATION_LIST_SUCCESS]: listConversationSuccess,\n  [LOADING_LOAD_MORE_CONVERSATIONS]: loadingLoadMoreConversations,\n  [LOAD_MORE_CONVERSATIONS_FAIL]: loadMoreConversationsFail,\n  [LOAD_MORE_CONVERSATIONS_SUCCESS]: loadMoreConversationsSuccess,\n  [USER_STATUS_UPDATED_EVENT]: userStatusUpdated,\n  [NEW_MESSAGE_RECEIVED_EVENT]: newMessageReceived,\n  [USER_JOINED_EVENT]: userJoined,\n  [MEMBERS_ADDED_EVENT]: membersAdded,\n  [MEMBERS_REMOVED_EVENT]: membersRemoved,\n  [CONVERSATION_UPDATED_EVENT]: conversationUpdated,\n  [USER_UPDATED_EVENT]: userUpdated,\n  [MARK_AS_READ_EVENT]: markAsRead\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { \n  LOADING_MESSAGE_LIST,\n  MESSAGE_LIST_FAIL,\n  MESSAGE_LIST_SUCCESS,\n  SENDING_MESSAGE,\n  SEND_MESSAGE_FAIL,\n  SEND_MESSAGE_SUCCESS,\n  SENDING_FILE,\n  SEND_FILE_FAIL,\n  SEND_FILE_SUCCESS,\n  LOADING_LOAD_MORE_MESSAGES,\n  LOAD_MORE_MESSAGES_SUCCESS,\n  LOAD_MORE_MESSAGES_FAIL,\n  SET_ACTIVE_CONVERSATION,\n  SET_ACTIVE_USERID,\n  CONVERSATION_UPDATED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  USER_STATUS_UPDATED_EVENT,\n  USER_UPDATED_EVENT,\n  MARK_AS_READ_EVENT,\n  TYPING_EVENT\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\nimport { Channelize } from 'channelize-chat';\n\nconst INITIAL_STATE = {\n  list: [],\n  loading: false,\n  error: null,\n  loadingMoreMessages: false,\n  allMessagesLoaded: false,\n  sendingMessage: false,\n\n  //typing event\n  typing: [],\n\n  // Active conversation and userId\n  conversation: null,\n  userId: null,\n\n  newMessage: null,\n  sendingFile: false,\n};\n\nexport const loadingMessageList = (state, action) => {\n  state.loading = true;\n  state.list = [];\n  state.allMessagesLoaded = false;\n};\n\nexport const messageListSuccess = (state, action) => {\n  state.loading = false;\n  state.list = action.payload;\n};\n\nexport const messageListFail = (state, action) => {\n  state.loading = false;\n  state.error = action.payload;\n};\n\nexport const loadingLoadMoreMessages = (state, action) => {\n  state.loadingMoreMessages = true;\n};\n\nexport const loadMoreMessagesFail = (state, action) => {\n  state.loadingMoreMessages = false;\n  state.error = action.payload;\n};\n\nexport const loadMoreMessagesSuccess = (state, action) => {\n  state.loadingMoreMessages = false;\n  if (!action.payload.length) {\n    state.allMessagesLoaded = true;\n  } else {\n    state.list = [...action.payload, ...state.list];\n    state.list = uniqueList(state.list);\n  }\n};\n\nexport const sendingMessage = (state, action) => {\n  state.sendingMessage = true;\n  action.payload.status = \"pending\";\n  state.list = [...state.list, ...[action.payload]];\n  state.list = uniqueList(state.list);\n};\n\nexport const sendMessageSuccess = (state, action) => {\n  state.sendingMessage = false;\n  state.list = [...state.list, ...[action.payload]];\n  state.list = uniqueList(state.list);\n};\n\nexport const sendMessageFail = (state, action) => {\n  action.payload.status = \"failed\";\n  // state.list = [...state.list, ...[action.payload]];\n  // state.list = uniqueList(state.list);\n};\n\nexport const sendingFile = (state, action) => {\n  state.sendingFile = true;\n  state.list = [...state.list, ...[action.payload]];\n  state.list = uniqueList(state.list);\n};\n\nexport const sendFileSuccess = (state, action) => {\n  state.sendingFile = false;\n  state.list = [...state.list, ...[action.payload]];\n  state.list = uniqueList(state.list);\n};\n\nexport const sendFileFail = (state, action) => {\n  state.sendingFile = false;\n  // state.list = [...[action.payload], ...state.list];\n  // state.list = uniqueList(state.list);\n};\n\nexport const setActiveConversation = (state, action) => {\n  state.conversation = action.payload;\n  state.userId = null;\n};\n\nexport const setActiveUserId = (state, action) => {\n  state.userId = action.payload;\n  state.conversation = null;\n};\n\nexport const newMessageReceived = (state, action) => {\n  let message = action.payload.message;\n  if (state.conversation && state.conversation.id == message.conversationId) {\n    state.list = [...state.list, ...[message]];\n    state.list = uniqueList(state.list);\n\n    state.newMessage = message;\n  }\n};\n\nexport const conversationUpdated = (state, action) => {\n  let { id, title, profileImageUrl } = action.payload.conversation;\n  if (state.conversation && state.conversation.id == id) {\n    const jsonConversaton = state.conversation.toJSON();\n    let conversation = {...jsonConversaton, title, profileImageUrl, updatedAt: action.payload.timestamp};\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, conversation);\n  }\n};\n\nexport const membersAdded = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.members = jsonConversaton.members.concat(members)\n    jsonConversaton.memberCount = conversation.memberCount;\n    jsonConversaton.updatedAt = timestamp;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const membersRemoved = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.memberCount = conversation.memberCount;\n    jsonConversaton.updatedAt = timestamp;\n\n    // Remove members\n    members.forEach(removedMember => {\n      const index = jsonConversaton.members.findIndex(member => member.userId == removedMember.id)\n      if (index >=0) {\n        jsonConversaton.members.splice(index, 1);\n      }\n    })\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const userStatusUpdated = (state, action) => {\n  const user = action.payload.user;\n  if (state.conversation && !state.conversation.isGroup && state.conversation.user.id == user.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.user.isOnline = user.isOnline;\n    jsonConversaton.user.lastSeen = user.lastSeen;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n};\n\nexport const userUpdated = (state, action) => {\n  const user = action.payload.user;\n  if (state.conversation && !state.conversation.isGroup && state.conversation.user.id == user.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.user.isOnline = user.isOnline;\n    jsonConversaton.user.lastSeen = user.lastSeen;\n    jsonConversaton.user.displayName = user.displayName;\n    jsonConversaton.user.profileImageUrl = user.profileImageUrl;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n};\n\nexport const markAsRead = (state, action) => {\n  let { conversation, user, timestamp } = action.payload;\n\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    if (jsonConversaton.lastReadAt[user.id]) {\n      jsonConversaton.lastReadAt[user.id] = timestamp;\n    }\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const typingEvent = (state, action) => {\n  const { conversation, isTyping, user} = action.payload;\n  const activeConversation = state.conversation;\n  if (!activeConversation || activeConversation.id != conversation.id) {\n    return\n  }\n\n  const index = state.typing.findIndex(item => item.id == user.id);\n  // If isTyping true, push user in  typing array\n  if (isTyping && index < 0) {\n    state.typing.push(user);\n    return\n  }\n\n  // If isTyping false, remove user from typing array\n  if (!isTyping && index >= 0) {\n    state.typing.splice(index, 1);\n  }\n};\n\nexport const handlers = {\n  [LOADING_MESSAGE_LIST]: loadingMessageList,\n  [MESSAGE_LIST_SUCCESS]: messageListSuccess,\n  [MESSAGE_LIST_FAIL]: messageListFail,\n  [SENDING_MESSAGE]: sendingMessage,\n  [SEND_MESSAGE_SUCCESS]: sendMessageSuccess,\n  [SEND_MESSAGE_FAIL]: sendMessageFail,\n  [SENDING_FILE]: sendingFile,\n  [SEND_FILE_FAIL]: sendFileFail,\n  [SEND_FILE_SUCCESS]: sendFileSuccess,\n  [LOADING_LOAD_MORE_MESSAGES]: loadingLoadMoreMessages,\n  [LOAD_MORE_MESSAGES_SUCCESS]: loadMoreMessagesSuccess,\n  [LOAD_MORE_MESSAGES_FAIL]: loadMoreMessagesFail,\n  [SET_ACTIVE_CONVERSATION]: setActiveConversation,\n  [SET_ACTIVE_USERID]: setActiveUserId,\n  [CONVERSATION_UPDATED_EVENT]: conversationUpdated,\n  [MEMBERS_ADDED_EVENT]: membersAdded,\n  [MEMBERS_REMOVED_EVENT]: membersRemoved,\n  [NEW_MESSAGE_RECEIVED_EVENT]: newMessageReceived,\n  [USER_STATUS_UPDATED_EVENT]: userStatusUpdated,\n  [USER_UPDATED_EVENT]: userUpdated,\n  [MARK_AS_READ_EVENT]: markAsRead,\n  [TYPING_EVENT]: typingEvent\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { \n  LOADING_FRIENDS_LIST,\n  FRIENDS_LIST_FAIL,\n  FRIENDS_LIST_SUCCESS,\n  LOADING_LOAD_MORE_FRIENDS,\n  LOAD_MORE_FRIENDS_SUCCESS,\n  LOAD_MORE_FRIENDS_FAIL,\n  LOADING_MORE_USERS_LIST,\n  MORE_USERS_LIST_FAIL,\n  MORE_USERS_LIST_SUCCESS,\n  LOADING_SEARCH_FRIENDS,\n  SEARCH_FRIENDS_SUCCESS,\n  SEARCH_FRIENDS_FAIL\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\n\nconst INITIAL_STATE = {\n  friendslist: [],\n  loadingFriendsList: false,\n  error: null,\n  loadingMoreFriends: false,\n  allFriendsLoaded: false,\n\n  moreUsersList: [],\n  loadingMoreUsersList: false,\n\n  searchFriends: [],\n  loadingSearchFriends: false\n};\n\nexport const loadingFriendsList = (state, action) => {\n  state.loadingFriendsList = true;\n  state.allFriendsLoaded = false;\n  state.friendslist= [];\n};\n\nexport const friendsListSuccess = (state, action) => {\n  state.loadingFriendsList = false;\n  state.friendslist = action.payload;\n};\n\nexport const friendsListFail = (state, action) => {\n  state.loadingFriendsList = false;\n  state.error = action.payload;\n};\n\nexport const loadingLoadMoreFriends = (state, action) => {\n  state.loadingMoreFriends = true;\n};\n\nexport const loadMoreFriendsFail = (state, action) => {\n  state.loadingMoreFriends = false;\n  state.error = action.payload;\n};\n\nexport const loadMoreFriendsSuccess = (state, action) => {\n  state.loadingMoreFriends = false;\n  if (!action.payload.length) {\n    state.allFriendsLoaded = true;\n  } else {\n    state.friendslist = [...state.friendslist, ...action.payload];\n    state.friendslist = uniqueList(state.friendslist);\n  }\n};\n\nexport const loadingMoreUsersList = (state, action) => {\n  state.loadingMoreUsersList = true;\n  state.moreUsersList = [];\n};\n\nexport const moreUsersListSuccess = (state, action) => {\n  state.loadingMoreUsersList = false;\n  state.moreUsersList = action.payload;\n};\n\nexport const moreUsersListFail = (state, action) => {\n  state.loadingMoreUsersList = false;\n  state.error = action.payload;\n};\n\nexport const loadingSearchFriends = (state, action) => {\n  state.loadingSearchFriends = true;\n  state.searchFriends = [];\n};\n\nexport const searchFriendsSuccess = (state, action) => {\n  state.loadingSearchFriends = false;\n  state.searchFriends = action.payload;\n};\n\nexport const searchFriendsFail = (state, action) => {\n  state.loadingSearchFriends = false;\n  state.error = action.payload;\n};\n\nexport const handlers = {\n  [LOADING_FRIENDS_LIST]: loadingFriendsList,\n  [FRIENDS_LIST_SUCCESS]: friendsListSuccess,\n  [FRIENDS_LIST_FAIL]: friendsListFail,\n  [LOADING_LOAD_MORE_FRIENDS]: loadingLoadMoreFriends,\n  [LOAD_MORE_FRIENDS_SUCCESS]: loadMoreFriendsSuccess,\n  [LOAD_MORE_FRIENDS_FAIL]: loadMoreFriendsFail,\n  [LOADING_MORE_USERS_LIST]: loadingMoreUsersList,\n  [MORE_USERS_LIST_SUCCESS]: moreUsersListSuccess,\n  [MORE_USERS_LIST_FAIL]: moreUsersListFail,\n  [LOADING_SEARCH_FRIENDS]: loadingSearchFriends,\n  [SEARCH_FRIENDS_SUCCESS]: searchFriendsSuccess,\n  [SEARCH_FRIENDS_FAIL]: searchFriendsFail,\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { combineReducers } from 'redux';\nimport clientReducer from './clientReducer';\nimport conversationReducer from './conversationReducer';\nimport messageReducer from './messageReducer';\nimport userReducer from './userReducer';\n\nexport default combineReducers({\n  client: clientReducer,\n  conversation: conversationReducer,\n  message: messageReducer,\n  user: userReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger';\nimport { composeWithDevTools } from 'remote-redux-devtools';\n\nimport rootReducer from '../reducers';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n  thunk,\n];\n\nlet composeFunction = compose;\n\nif (process.env.NODE_ENV === 'development') {\n  composeFunction = composeWithDevTools;\n  middleware.push(logger);\n}\n\nconst composedEnhancers = composeFunction(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  composedEnhancers\n);\n\n","export * from './components';\nexport * from './utils';\nexport * from './context';\nexport * from './store';"],"sourceRoot":""}