{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"prop-types\"","webpack:///external \"react-redux\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"redux\"","webpack:///external \"@babel/runtime/helpers/extends\"","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"lodash/debounce\"","webpack:///external \"uuid\"","webpack:///external \"moment\"","webpack:///external \"immer\"","webpack:///external \"lodash/throttle\"","webpack:///external \"react-avatar\"","webpack:///external \"redux-thunk\"","webpack:///external \"sprintf-js\"","webpack:///external \"redux-logger\"","webpack:///external \"remote-redux-devtools\"","webpack:///./src/constants.js","webpack:///./src/actions/clientActions.js","webpack:///./src/actions/conversationActions.js","webpack:///./src/actions/messageActions.js","webpack:///./src/context.js","webpack:///./src/components/App.js","webpack:///./src/components/Avatar.js","webpack:///./src/components/Header.js","webpack:///./src/components/Launcher.js","webpack:///./src/components/Loader.js","webpack:///./src/utils/index.js","webpack:///./src/components/ConversationItem.js","webpack:///./src/components/ConversationList.js","webpack:///./src/components/MediaLightBox.js","webpack:///./src/components/GuestJoinForm.js","webpack:///./src/components/OutsideClickHandler.js","webpack:///./src/components/MessageSimple.js","webpack:///./src/components/SimpleList.js","webpack:///./src/components/ConversationWindow.js","webpack:///./src/components/MessageLivestream.js","webpack:///./src/components/SearchWindow.js","webpack:///./src/actions/userActions.js","webpack:///./src/reducers/clientReducer.js","webpack:///./src/reducers/conversationReducer.js","webpack:///./src/reducers/messageReducer.js","webpack:///./src/reducers/userReducer.js","webpack:///./src/reducers/index.js","webpack:///./src/store/index.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","LANGUAGE_PHRASES","ADMIN_MSG_FORMATS","admin_group_create","admin_group_join","admin_group_add_members","admin_group_remove_members","admin_group_leave","admin_group_make_admin","admin_group_change_title","admin_group_change_photo","admin_call_video_missed","admin_call_voice_missed","admin_custom_auction_winner","admin_custom_auction_backup","CALL_FORMATS","admin_call_rejected","admin_call_completed","admin_call_not_answered","admin_call_missed","IMAGES","connectSuccess","dispatch","response","type","payload","connectFail","error","registerEventHandlers","client","chsocket","on","conversation","Conversation","getConversation","id","err","setActiveConversation","setActiveUserId","userId","ChannelizeContext","React","createContext","ChannelizeProvider","Provider","withChannelizeContext","OriginalComponent","getContextAwareComponent","context","originalComponent","Context","ContextAwareComponent","props","Consumer","themePath","extraThemePaths","displayName","replace","App","state","this","accessToken","connected","setConnected","chConnect","prevProps","getContext","className","children","PureComponent","connect","Promise","resolve","reject","res","connectAsAnonymous","_connect","then","catch","Avatar","initials","src","avatarProps","isValidSrc","trim","finalAvatarProps","maxInitials","size","round","Fragment","title","style","backgroundImage","propTypes","PropTypes","string","defaultProps","Header","setState","showDropDownList","subtitle","imageSrc","imageInitials","showArrowBack","onBack","showChevron","renderDropDownList","renderRight","callButtons","onClick","toggleDropDownList","Launcher","alt","Loader","sprintf","createReducer","initialState","actionsMap","action","produce","draft","caseReducer","undefined","uniqueList","list","reduce","uniqList","currentValue","ids","map","item","indexOf","push","splice","setAutoFreeze","modifyConversation","loginUser","isGroup","user","profileImageUrl","otherMemberIds","members","member","modifyMessageList","lastMessage","getCurrentUser","forEach","message","ownerId","readByAll","showReadStatus","pending","readByAllMembers","createdAt","Date","now","AMorPMTimeParser","owner","capitalize","isUser","isDeleted","body","length","nextMessage","showOwnerAvatar","isUserLastMessage","isSameUser","prevMessage","showDateSeparator","isSameDay","system","_modifyAdminMessage","getLastMessageString","lastMessageString","keys","messageOwnerName","attachments","attachment","lastMessageTimeParser","time","today","todayDate","getDate","todayMonth","getMonth","todayYear","getFullYear","inputDate","inputTimeDate","inputTimeMonth","inputTimeYear","showWeekDay","getDay","hours","getHours","AmOrPm","getMinutes","substr","dateSeparatorParser","currentMessage","diffMessage","currentCreatedAt","diffCreatedAt","typingString","typing","split","firstUser","commaSeparatedUsers","slice","join","x","toUpperCase","subName","objNames","metaData","duration","second","Number","h","Math","floor","secondsToHms","text","adminMessageType","subType","subId","subUser","objType","objValues","objUsers","Array","isArray","names","objUser","find","format","getCookie","cname","ca","document","cookie","charAt","substring","setCookie","cvalue","exdays","setTime","getTime","expires","toUTCString","ConversationItem","onSelect","activeConversation","updatedAt","selectConversation","isOnline","ConversationList","conversationlist","conversationListQuery","createConversationListQuery","limit","skip","include","getConversationList","onCloseIconClick","onSearchIconClick","onScroll","chRecentListingRef","createRef","_init","loadingMoreConversations","allConversationsLoaded","current","scrollTop","clientHeight","scrollHeight","loadMoreConversations","connecting","conversationLoading","conversationError","showSearchIcon","showCloseIcon","ref","MediaLightBox","url","link","createElement","href","target","download","appendChild","click","removeChild","file","fileUrl","thumbnailUrl","onCloseClick","downloadFile","controls","preload","loop","autoPlay","GuestJoinForm","errors","joining","handleChange","handleSubmit","event","a","onJoinedAsGuest","preventDefault","validateForm","switchToGuest","onSubmit","placeholder","onChange","disabled","func","DISPLAY","BLOCK","FLEX","INLINE","INLINE_BLOCK","CONTENTS","node","isRequired","onOutsideClick","bool","useCapture","display","oneOf","values","OutsideClickHandler","args","onMouseDown","onMouseUp","setChildNodeRef","addMouseDownEventListener","prevDisabled","removeEventListeners","e","childNode","contains","addEventListener","capture","removeEventListener","includes","Component","MessageSimple","showMoreOptions","fileMessage","renderMoreOptions","msgContainerPos","adminMsg","fileUr","onClickEvent","extension","pop","toggleMoreOptions","hideMoreOptions","SimpleList","ConversationWindow","config","typing_events","markAsRead","chMessageBoxRef","toString","ownProps","handleTabChange","dummyConversation","membersExactly","conversations","User","registerConversationEventHandlers","messageListQuery","createMessageListQuery","getMessageList","isAdmin","banListQuery","createBanListQuery","getConversationBanList","unreadMessageCount","__isWatching","startWatchingAndSetActiveConversation","textMessage","_startTyping","_stopTyping","startTyping","stopTyping","showMediaLightBox","handleKeyPress","sendMessage","_markAsRead","throttle","sendMedia","debounce","toggleGuestJoinForm","guestJoinFormOpened","activeTab","messagelist","offsetTop","offsetBottom","prevState","snapshot","newMessage","loadingMoreMessages","sendingMessage","_scrollToTarget","messageLoading","stopWatchingAndSetNullConversation","_onTextMessageChanged","guest","fileType","shift","match","uuid","sendFileToConversation","getFileThumbnailUrl","URL","createObjectURL","msgId","deleteMessagesForEveryone","deleteMessagesForMe","banConversationUsers","unbanConversationUsers","allowGuestUsers","isAnonymousUser","sendMessageToConversation","sendMessageToUserId","cb","fileReader","FileReader","onload","result","readAsDataURL","blob","Blob","video","timeupdate","snapImage","pause","canvas","width","videoWidth","height","videoHeight","drawImage","image","toDataURL","success","revokeObjectURL","muted","playsInline","play","readAsArrayBuffer","allMessagesLoaded","loadMoreMessagesAction","sendFile","files","openMediaFile","messageError","disableComposer","disableComposerMessage","Message","showHeader","renderHeader","showComposerActions","noConversationFoundMessage","banList","headerActionButton","headerTitle","headerImage","headerSubtitle","composerDisabled","conversationAdmins","showTabs","moment","lastSeen","fromNow","memberCount","isActive","blockUser","unblockUser","ban","canChat","filter","typingStrings","isSentByAdmin","viewMediaToggle","showMoreOptionsIcon","accept","onKeyPress","elementType","reverse","msgBody","attachmentType","createThumbnail","File","upload","fileData","fileMsgObject","messageIds","userIds","banUsers","unbanUsers","startWatching","stopWatching","conversationBanListQuery","MessageLivestream","showImage","SearchWindow","friendsListQuery","createUserListQuery","friendsLimit","sort","getFriendsList","searchLimit","search","searchFriendsAction","moreUsersListQuery","getMoreUsersList","searchText","onContactClick","_searchOnServer","inputValue","loadingFriendsList","loadingSearchFriends","friendslist","moreUsersList","searchFriends","showMoreUsers","clearSearch","friend","userListQuery","friendsList","loadMoreFriends","usersList","INITIAL_STATE","finalList","index","conversationIndex","latestConversation","conversationId","timestamp","unshift","concat","removedMember","findIndex","lastReadAt","messages","msg","Channelize","window","sendingFile","status","toJSON","core","Client","getInstance","Model","jsonConversaton","isTyping","deletedMessageIds","banUserList","loadingMoreFriends","allFriendsLoaded","loadingMoreUsersList","combineReducers","clientReducer","conversationReducer","messageReducer","userReducer","middleware","thunk","composedEnhancers","compose","applyMiddleware","store","createStore","rootReducer"],"mappings":"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","file":"dist/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","module.exports = require(\"react\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"prop-types\");","module.exports = require(\"react-redux\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"redux\");","module.exports = require(\"@babel/runtime/helpers/extends\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"lodash/debounce\");","module.exports = require(\"uuid\");","module.exports = require(\"moment\");","module.exports = require(\"immer\");","module.exports = require(\"lodash/throttle\");","module.exports = require(\"react-avatar\");","module.exports = require(\"redux-thunk\");","module.exports = require(\"sprintf-js\");","module.exports = require(\"redux-logger\");","module.exports = require(\"remote-redux-devtools\");","export const LANGUAGE_PHRASES = {\n\tCHAT : \"Chat\",\n\tCLOSE : \"Close\",\n\tONLINE : \"Online\",\n\tNO_CONV_FOUND : \"No conversations found!\",\n\tNO_MESSAGES_FOUND : \"No messages found!\",\n\tDELETED_MEMBER : \"Deleted Member\",\n\tMESSAGE_DELETED : \"This message was deleted\",\n\tLAST_SEEN : \"Last Seen \",\n\tMUTE_CONV : \"Mute Conversation\",\n\tCLEAR_CONV : \"Clear Conversation\",\n\tDELETE_CONV : \"Delete Conversation\",\n\tBLOCK_USER : \"Block User\",\n\tUNBLOCK_USER : \"Unblock User\",\n\tSEND_MESSAGE : \"Send a message\",\n\tDELETE : \"Delete\",\n\tIMAGE : \"Image\",\n\tAUDIO : \"Audio\",\n\tVIDEO : \"Video\",\n\tLOCATION : \"Location\",\n\tSTICKER : \"Sticker\",\n\tGIF : \"GIF\",\n\tSHARE_GALLERY : \"Share photo & video\",\n\tSHARE_DOCUMENT : \"Share a document\",\n\tSEND_ATTACHMENTS : \"Send Attachments\",\n\tMEMBERS : \"Members\",\n\tFILE_SIZE_WARNING : \"File size should be less then 25mb\",\n\tSEARCH : \"Search\",\n\tSUGGESTED : \"Suggested\",\n\tMORE_USERS : \"More Users\",\n\tLOGIN : \"Login\",\n\tLOGOUT : \"Logout\",\n\tNAME : \"Name\",\n\tSTART : \"Start\",\n\tLOGIN_WITH_TEST_USERS : \"OR Login with Test users\",\n\tENTER_NAME : \"Please enter a name\",\n\tUSER_EXIST : \"User already exist with this username\",\n\tDELETE_FOR_ME : \"Delete for me\",\n\tDELETE_FOR_EVERYONE : \"Delete for everyone\",\n\tDOWNLOAD_FILE_NAME : \"File\",\n\tYOU : \"You\",\n\tSEND : \"Send\",\n\tHOST : \"Host\",\n\tNO_CONVERSATION_SELECTED: 'No conversation seleted',\n\tGUEST_JOIN_HEADING: 'Enter your name to join the Chat',\n\tGUEST_JOIN_ERROR_DISPLAY_NAME: 'Please enter a valid name',\n\tGUEST_JOIN_LABEL_DISPLAY_NAME: 'Enter your name here',\n\tBAN_USER: 'Ban User',\n\tUNBAN_USER: 'Unban User',\n\tBAN_USER_MESSAGE: 'You are currently not allowed to send messages to this Show',\n\tNOT_ALLOWED_TO_CHAT: 'You must sign-in to chat',\n}\n\nexport const ADMIN_MSG_FORMATS = {\n\tadmin_group_create: \"%s created group %s\",\n\tadmin_group_join: \"%s joined\",\n\tadmin_group_add_members: \"%s added %s\",\n\tadmin_group_remove_members: \"%s removed %s\",\n\tadmin_group_leave: \"%s left\",\n\tadmin_group_make_admin: \"%s are now an admin\",\n\tadmin_group_change_title: \"%s changed the title to %s\",\n\tadmin_group_change_photo: \"%s changed group photo\",\n\tadmin_call_video_missed: \"%s missed a video call from %s\",\n\tadmin_call_voice_missed: \"%s missed a voice call from %s\",\n\tadmin_custom_auction_winner: \"🎉 Winner: %s\",\n\tadmin_custom_auction_backup: \"⏳ Backup: %s\",\n}\n\nexport const CALL_FORMATS = {\n\tadmin_call_rejected : \"Call Rejected\",\n\tadmin_call_completed : \"Call Completed\",\n\tadmin_call_not_answered : \"Call Not Answered\",\n\tadmin_call_missed : \"Missed Call\"\n}\n\nexport const IMAGES = {\n\tLAUNCHER_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/launcher-icon.svg\",\n\tANNA_SMITH : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/anna-smith.jpg\",\n\tKATRINA_CHARLEY : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/katrina-charley.png\",\n\tNATALIE_IVANOVIC : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/natalie-ivanovic.jpeg\",\n\tERIC_ANDREWS : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/eric-andrews.jpeg\",\n\tGALLERY_ICON : \"https:/cdn.channelize.io/apps/web-widget/1.0.0/images/gallery.png\",\n\tAUDIO_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/audio.png\",\n\tVIDEO_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/video.svg\",\n\tLOCATION_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/location.svg\",\n\tSTICKER_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/sticker.png\",\n\tGIF_ICON : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/gif.png\",\n\t// AVTAR : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/avtar.png\",\n\t// GROUP : \"https://cdn.channelize.io/apps/web-widget/1.0.0/images/group.png\",\n}\n\nexport const SETTINGS = {\n\tLOCATION_API_KEY : \"AIzaSyBzrL8FaUvmYPIxEUd_VTPpqcACtPdniik\",\n\tLOCATION_IMG_URL : \"https://maps.googleapis.com/maps/api/staticmap\"\n}\n\nexport const CONNECTING = 'CONNECTING'\nexport const CONNECT_SUCCESS = 'CONNECT_SUCCESS'\nexport const CONNECT_FAIL = 'CONNECT_FAIL'\nexport const DISCONNECT_SUCCESS = 'DISCONNECT_SUCCESS'\nexport const DISCONNECT_FAIL = 'DISCONNECT_FAIL'\n\nexport const NEW_MESSAGE_RECEIVED_EVENT = 'NEW_MESSAGE_RECEIVED_EVENT'\nexport const USER_STATUS_UPDATED_EVENT = 'USER_STATUS_UPDATED'\nexport const MARK_AS_READ_EVENT = 'MARK_AS_READ_EVENT'\nexport const USER_BLOCKED_EVENT = 'USER_BLOCKED_EVENT'\nexport const USER_UNBLOCKED_EVENT = 'USER_UNBLOCKED_EVENT'\nexport const USER_JOINED_EVENT = 'USER_JOINED_EVENT'\nexport const MEMBERS_ADDED_EVENT = 'MEMBERS_ADDED_EVENT'\nexport const MEMBERS_REMOVED_EVENT = 'MEMBERS_REMOVED_EVENT'\nexport const CONVERSATION_UPDATED_EVENT = 'CONVERSATION_UPDATED_EVENT'\nexport const USER_UPDATED_EVENT = 'USER_UPDATED_EVENT'\n\nexport const LOADING_FRIENDS_LIST = 'LOADING_FRIENDS_LIST'\nexport const FRIENDS_LIST_FAIL = 'FRIENDS_LIST_FAIL'\nexport const FRIENDS_LIST_SUCCESS = 'FRIENDS_LIST_SUCCESS'\nexport const LOADING_LOAD_MORE_FRIENDS = 'LOADING_LOAD_MORE_FRIENDS'\nexport const LOAD_MORE_FRIENDS_SUCCESS = 'LOAD_MORE_FRIENDS_SUCCESS'\nexport const LOAD_MORE_FRIENDS_FAIL = 'LOAD_MORE_FRIENDS_FAIL'\nexport const LOADING_MORE_USERS_LIST = 'LOADING_MORE_USERS_LIST'\nexport const MORE_USERS_LIST_FAIL = 'MORE_USERS_LIST_FAIL'\nexport const MORE_USERS_LIST_SUCCESS = 'MORE_USERS_LIST_SUCCESS'\nexport const LOADING_SEARCH_FRIENDS = 'LOADING_SEARCH_FRIENDS'\nexport const SEARCH_FRIENDS_SUCCESS = 'SEARCH_FRIENDS_SUCCESS'\nexport const SEARCH_FRIENDS_FAIL = 'SEARCH_FRIENDS_FAIL'\n\nexport const LOADING_CONVERSATION_LIST = 'LOADING_CONVERSATION_LIST'\nexport const CONVERSATION_LIST_FAIL = 'CONVERSATION_LIST_FAIL'\nexport const CONVERSATION_LIST_SUCCESS = 'CONVERSATION_LIST_SUCCESS'\nexport const LOADING_LOAD_MORE_CONVERSATIONS = 'LOADING_LOAD_MORE_CONVERSATIONS'\nexport const LOAD_MORE_CONVERSATIONS_FAIL = 'LOAD_MORE_CONVERSATIONS_FAIL'\nexport const LOAD_MORE_CONVERSATIONS_SUCCESS = 'LOAD_MORE_CONVERSATIONS_SUCCESS'\n\nexport const LOADING_MESSAGE_LIST = 'LOADING_MESSAGE_LIST'\nexport const MESSAGE_LIST_FAIL = 'MESSAGE_LIST_FAIL'\nexport const MESSAGE_LIST_SUCCESS = 'MESSAGE_LIST_SUCCESS'\nexport const SENDING_MESSAGE = 'SENDING_MESSAGE'\nexport const SEND_MESSAGE_FAIL = 'SEND_MESSAGE_FAIL'\nexport const SEND_MESSAGE_SUCCESS = 'SEND_MESSAGE_SUCCESS'\nexport const SENDING_FILE = 'SENDING_FILE'\nexport const SEND_FILE_FAIL = 'SEND_FILE_FAIL'\nexport const SEND_FILE_SUCCESS = 'SEND_FILE_SUCCESS'\nexport const LOADING_LOAD_MORE_MESSAGES = 'LOADING_LOAD_MORE_MESSAGES'\nexport const LOAD_MORE_MESSAGES_SUCCESS = 'LOAD_MORE_MESSAGES_SUCCESS'\nexport const LOAD_MORE_MESSAGES_FAIL = 'LOAD_MORE_MESSAGES_FAIL'\nexport const SET_ACTIVE_CONVERSATION = 'SET_ACTIVE_CONVERSATION'\nexport const SET_ACTIVE_USERID = 'SET_ACTIVE_USERID'\nexport const TYPING_EVENT = 'TYPING_EVENT'\nexport const DELETE_MESSAGE_FOR_EVERYONE_EVENT = 'DELETE_MESSAGE_FOR_EVERYONE_EVENT'\nexport const DELETE_MESSAGE_EVENT = 'DELETE_MESSAGE_EVENT'\nexport const DELETING_MESSAGES_FOR_EVERYONE = 'DELETING_MESSAGES_FOR_EVERYONE'\nexport const DELETE_MESSAGES_FOR_EVERYONE_FAIL = 'DELETE_MESSAGES_FOR_EVERYONE_FAIL'\nexport const DELETE_MESSAGES_FOR_EVERYONE_SUCCESS = 'DELETE_MESSAGES_FOR_EVERYONE_SUCCESS'\nexport const DELETING_MESSAGES_FOR_ME = 'DELETING_MESSAGES_FOR_ME'\nexport const DELETE_MESSAGES_FOR_ME_FAIL = 'DELETE_MESSAGES_FOR_ME_FAIL'\nexport const DELETE_MESSAGES_FOR_ME_SUCCESS = 'DELETE_MESSAGES_FOR_ME_SUCCESS'\nexport const START_WATCHING_PROGRESS = 'START_WATCHING_PROGRESS'\nexport const START_WATCHING_FAIL = 'START_WATCHING_FAIL'\nexport const START_WATCHING_SUCCESS = 'START_WATCHING_SUCCESS'\nexport const STOP_WATCHING_PROGRESS = 'STOP_WATCHING_PROGRESS'\nexport const STOP_WATCHING_FAIL = 'STOP_WATCHING_FAIL'\nexport const STOP_WATCHING_SUCCESS = 'STOP_WATCHING_SUCCESS'\nexport const BAN_CONVERSATION_USERS = 'BAN_CONVERSATION_USERS'\nexport const BAN_CONVERSATION_USERS_FAIL = 'BAN_CONVERSATION_USERS_FAIL'\nexport const BAN_CONVERSATION_USERS_SUCCESS = 'BAN_CONVERSATION_USERS_SUCCESS'\nexport const UNBAN_CONVERSATION_USERS = 'UNBAN_CONVERSATION_USERS'\nexport const UNBAN_CONVERSATION_USERS_FAIL = 'UNBAN_CONVERSATION_USERS_FAIL'\nexport const UNBAN_CONVERSATION_USERS_SUCCESS = 'UNBAN_CONVERSATION_USERS_SUCCESS'\nexport const LOADING_CONVERSATION_BAN_LIST = 'LOADING_CONVERSATION_BAN_LIST'\nexport const CONVERSATION_BAN_LIST_FAIL = 'CONVERSATION_BAN_LIST_FAIL'\nexport const CONVERSATION_BAN_LIST_SUCCESS = 'CONVERSATION_BAN_LIST_SUCCESS'\nexport const CONVERSATION_BAN_UPDATED_EVENT = 'CONVERSATION_BAN_UPDATED_EVENT'","import {\n  CONNECTING,\n  CONNECT_SUCCESS,\n  CONNECT_FAIL,\n  DISCONNECT_SUCCESS,\n  DISCONNECT_FAIL,\n  TYPING_EVENT,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n  DELETE_MESSAGE_EVENT,\n  USER_STATUS_UPDATED_EVENT,\n  MARK_AS_READ_EVENT,\n  USER_BLOCKED_EVENT,\n  USER_UNBLOCKED_EVENT,\n  USER_JOINED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  CONVERSATION_UPDATED_EVENT,\n  USER_UPDATED_EVENT,\n  CONVERSATION_BAN_UPDATED_EVENT,\n} from '../constants';\n\nconst _connect = (client, userId, accessToken) => {\n  return new Promise((resolve, reject) => {\n    if (!client) {\n      reject('Channelize.io client was not created.');\n    }\n\n    if (userId && accessToken) {\n      return client.connect(userId, accessToken, (error, res) => {\n        if (error) {\n          return reject('Channelize.io connection Failed.');\n        } else {\n          return resolve(res);\n        }\n      });\n    }\n\n    client.connectAsAnonymous((error, res) => {\n      if (error) {\n        reject('Channelize.io connection Failed.');\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nexport const setConnected = (value = true) => {\n  return dispatch => {\n    dispatch({\n      type: CONNECT_SUCCESS,\n      payload: {}\n    });\n  }\n}\n\nexport const chConnect = (client, userId, accessToken) => {\n  return dispatch => {\n    dispatch({\n      type: CONNECTING,\n      payload: {}\n    });\n    return _connect(client, userId, accessToken)\n      .then(response => connectSuccess(dispatch, response))\n      .catch(error => connectFail(dispatch, error));\n  };\n};\n\nconst connectSuccess = (dispatch, response) => {\n  dispatch({\n    type: CONNECT_SUCCESS,\n    payload: response\n  });\n};\n\nconst connectFail = (dispatch, error) => {\n  dispatch({\n    type: CONNECT_FAIL,\n    payload: error\n  });\n};\n\nconst _disconnect = (client) => {\n  return new Promise((resolve, reject) => {\n    if (client) {\n      client.disconnect(() => {\n        resolve(null);\n      });\n    } else {\n      resolve(null);\n    }\n  });\n};\n\nexport const chDisconnect = (client) => {\n  return dispatch => {\n    return _disconnect(client)\n      .then(response => disconnectSuccess(dispatch, response))\n      .catch(error => disconnectFail(dispatch, error));\n  };\n};\n\nconst disconnectSuccess = (dispatch, response) => {\n  dispatch({\n    type: DISCONNECT_SUCCESS,\n    payload: response\n  });\n};\n\nconst disconnectFail = (dispatch, error) => {\n  dispatch({\n    type: DISCONNECT_FAIL,\n    payload: error\n  });\n};\n\nexport const registerEventHandlers = (client) => {\n  return dispatch => {\n    client.chsocket.on('user.status_updated', function (payload) {\n      dispatch({\n        type: USER_STATUS_UPDATED_EVENT,\n        payload: payload\n      });\n    });\n\n    client.chsocket.on('user.updated', function (payload) {\n      dispatch({\n        type: USER_UPDATED_EVENT,\n        payload: payload\n      });\n    });\n\n    client.chsocket.on('user.message_created', function (response) {\n      dispatch({\n        type: NEW_MESSAGE_RECEIVED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('message.deleted_for_everyone', function (response) {\n      dispatch({\n        type: DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.message_deleted', function (response) {\n      const { conversation } = response;\n      // Get the lastest conversation object to handle the last message in the conversation list.\n      client.Conversation.getConversation(conversation.id, null, (err, conversation) => {\n        if (err) return;\n\n        response.conversation = conversation;\n        dispatch({\n          type: DELETE_MESSAGE_EVENT,\n          payload: response\n        });\n      });\n    });\n\n    client.chsocket.on('user.joined', function (response) {\n      // Load conversation will all attributes from server\n      const { conversation } = response;\n      client.Conversation.getConversation(conversation.id, null, (err, conversation) => {\n        if (err) {\n          return;\n        }\n\n        response.conversation = conversation;\n\n        dispatch({\n          type: USER_JOINED_EVENT,\n          payload: response\n        });\n      })\n    });\n\n    client.chsocket.on('conversation.members_added', function (response) {\n      dispatch({\n        type: MEMBERS_ADDED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.members_removed', function (response) {\n      dispatch({\n        type: MEMBERS_REMOVED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.conversation_ban_updated', function (response) {\n      dispatch({\n        type: CONVERSATION_BAN_UPDATED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.updated', function (response) {\n      dispatch({\n        type: CONVERSATION_UPDATED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.mark_as_read', function (response) {\n      dispatch({\n        type: MARK_AS_READ_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('conversation.typing', function (response) {\n      dispatch({\n        type: TYPING_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.blocked', function (response) {\n      dispatch({\n        type: USER_BLOCKED_EVENT,\n        payload: response\n      });\n    });\n\n    client.chsocket.on('user.unblocked', function (response) {\n      dispatch({\n        type: USER_UNBLOCKED_EVENT,\n        payload: response\n      });\n    });\n  };\n};","import { \n  LOADING_CONVERSATION_LIST,\n  CONVERSATION_LIST_FAIL,\n  CONVERSATION_LIST_SUCCESS,\n  LOADING_LOAD_MORE_CONVERSATIONS,\n  LOAD_MORE_CONVERSATIONS_FAIL,\n  LOAD_MORE_CONVERSATIONS_SUCCESS,\n} from '../constants';\n\nexport const getConversationList = (conversationListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_CONVERSATION_LIST,\n      payload: {}\n    });\n    return conversationListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: CONVERSATION_LIST_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: CONVERSATION_LIST_SUCCESS,\n        payload: response\n      }); \n      return;\n    })\n  };\n};\n\nexport const loadMoreConversations = (conversationListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_CONVERSATIONS,\n      payload: {}\n    });\n    return conversationListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_CONVERSATIONS_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: LOAD_MORE_CONVERSATIONS_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};\n","import { \n  LOADING_MESSAGE_LIST,\n  MESSAGE_LIST_FAIL,\n  MESSAGE_LIST_SUCCESS,\n  SENDING_MESSAGE,\n  SEND_MESSAGE_FAIL,\n  SEND_MESSAGE_SUCCESS,\n  SENDING_FILE,\n  SEND_FILE_FAIL,\n  SEND_FILE_SUCCESS,\n  LOADING_LOAD_MORE_MESSAGES,\n  LOAD_MORE_MESSAGES_SUCCESS,\n  LOAD_MORE_MESSAGES_FAIL,\n  SET_ACTIVE_CONVERSATION,\n  SET_ACTIVE_USERID,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  DELETING_MESSAGES_FOR_EVERYONE,\n  DELETE_MESSAGES_FOR_EVERYONE_FAIL,\n  DELETE_MESSAGES_FOR_EVERYONE_SUCCESS,\n  DELETING_MESSAGES_FOR_ME,\n  DELETE_MESSAGES_FOR_ME_FAIL,\n  DELETE_MESSAGES_FOR_ME_SUCCESS,\n  START_WATCHING_PROGRESS,\n  START_WATCHING_FAIL,\n  START_WATCHING_SUCCESS,\n  STOP_WATCHING_PROGRESS,\n  STOP_WATCHING_FAIL,\n  STOP_WATCHING_SUCCESS,\n  DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n  BAN_CONVERSATION_USERS,\n  BAN_CONVERSATION_USERS_FAIL,\n  BAN_CONVERSATION_USERS_SUCCESS,\n  UNBAN_CONVERSATION_USERS,\n  UNBAN_CONVERSATION_USERS_FAIL,\n  UNBAN_CONVERSATION_USERS_SUCCESS,\n  LOADING_CONVERSATION_BAN_LIST,\n  CONVERSATION_BAN_LIST_FAIL,\n  CONVERSATION_BAN_LIST_SUCCESS,\n} from '../constants';\n\nexport const sendFileToConversation = (client, conversation, file, body, attachmentType) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_FILE,\n      payload: body\n    });\n\n    let createThumbnail = attachmentType === \"application\" ? false : true;\n\n    const fileData = client.File.upload(file, attachmentType, createThumbnail, (err, fileData) => {\n      if (err) {\n        body.error = err;\n        dispatch({\n          type: SEND_FILE_FAIL,\n          payload: body\n        });\n        return;\n      }\n\n      let fileMsgObject = {};\n      fileMsgObject['id'] = body.id;\n      fileMsgObject['attachments'] = [fileData];\n      \n      return conversation.sendMessage(fileMsgObject, (err, response) => {\n        if (err) {\n          fileMsgObject.error = err;\n          dispatch({\n            type: SEND_FILE_FAIL,\n            payload: fileMsgObject\n          });\n          return;\n        }\n        dispatch({\n          type: SEND_FILE_SUCCESS,\n          payload: response\n        });\n        return;\n      });\n    });\n  }\n};\n\nexport const sendMessageToConversation = (conversation, body) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_MESSAGE,\n      payload: body\n    });\n\n    let msgBody = {\n      id: body.id,\n      body: body.body,\n      attachments: body.attachments ? body.attachments : [], \n    }\n    \n    return conversation.sendMessage(msgBody, (err, response) => {\n      if (err) {\n        msgBody.error = err;\n        dispatch({\n          type: SEND_MESSAGE_FAIL,\n          payload: msgBody\n        });\n        return;\n      }\n      dispatch({\n        type: SEND_MESSAGE_SUCCESS,\n        payload: response\n      });\n      return;\n    });\n  };\n};\n\nexport const sendMessageToUserId = (client, body) => {\n  return dispatch => {\n    dispatch({\n      type: SENDING_MESSAGE,\n      payload: body\n    });\n    return client.Message.sendMessage(body, (err, response) => {\n      if (err) {\n        dispatch({\n          type: SEND_MESSAGE_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: SEND_MESSAGE_SUCCESS,\n        payload: response\n      });\n      return;\n    });\n  };\n};\n\nexport const getMessageList = (messageListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_MESSAGE_LIST,\n      payload: {}\n    });\n    return messageListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: MESSAGE_LIST_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: MESSAGE_LIST_SUCCESS,\n        payload: response.reverse()\n      });\n      return;\n    })\n  };\n};\n\nexport const loadMoreMessages = (messageListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_MESSAGES,\n      payload: {}\n    });\n    return messageListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_MESSAGES_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: LOAD_MORE_MESSAGES_SUCCESS,\n        payload: response.reverse()\n      });\n      return;\n    })\n  };\n};\n\nexport const deleteMessagesForEveryone = (client, messageIds) => {\n\n  return dispatch => {\n    dispatch({\n      type: DELETING_MESSAGES_FOR_EVERYONE,\n      payload: messageIds\n    });\n    return client.Message.deleteMessagesForEveryone(messageIds, (err, response) => {\n      if (err) {\n        dispatch({\n          type: DELETE_MESSAGES_FOR_EVERYONE_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: DELETE_MESSAGES_FOR_EVERYONE_SUCCESS,\n        payload: messageIds\n      });\n      return;\n    })\n  };\n};\n\nexport const deleteMessagesForMe = (client, messageIds) => {\n  return dispatch => {\n    dispatch({\n      type: DELETING_MESSAGES_FOR_ME,\n      payload: messageIds\n    });\n    return client.Message.deleteMessagesForMe(messageIds, (err, response) => {\n      if (err) {\n        dispatch({\n          type: DELETE_MESSAGES_FOR_ME_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: DELETE_MESSAGES_FOR_ME_SUCCESS,\n        payload: messageIds\n      });\n      return;\n    })\n  };\n};\n\nexport const setActiveConversation = (conversation) => {\n  return dispatch => {\n    dispatch({\n      type: SET_ACTIVE_CONVERSATION,\n      payload: conversation\n    });\n    return;\n  };\n};\n\nexport const setActiveUserId = (userId) => {\n  return dispatch => {\n    dispatch({\n      type: SET_ACTIVE_USERID,\n      payload: userId\n    });\n    return;\n  };\n};\n\nexport const registerConversationEventHandlers = (conversation) => {\n  return dispatch => {\n    if (!conversation.__isWatching) {\n      return\n    }\n\n    conversation.on('watcher.message.created', (response) => {\n      dispatch({\n        type: NEW_MESSAGE_RECEIVED_EVENT,\n        payload: response\n      });\n      return;\n    });\n\n    conversation.on('watcher.message.deleted_for_everyone', (response) => {\n      dispatch({\n        type: DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n        payload: response\n      });\n      return;\n    });\n  }\n}\n\nexport const startWatchingAndSetActiveConversation = (conversation) => {\n  return dispatch => {\n    dispatch({\n      type: START_WATCHING_PROGRESS,\n      payload: {}\n    });\n    return conversation.startWatching((err, response) => {\n      if (err) {\n        dispatch({\n          type: START_WATCHING_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: START_WATCHING_SUCCESS,\n        payload: response\n      });\n      dispatch({\n        type: SET_ACTIVE_CONVERSATION,\n        payload: conversation\n      });\n      return;\n    })\n  };\n};\n\nexport const stopWatchingAndSetNullConversation = (conversation) => {\n  return dispatch => {\n    dispatch({\n      type: STOP_WATCHING_PROGRESS,\n      payload: {}\n    });\n    return conversation.stopWatching((err, response) => {\n      if (err) {\n        dispatch({\n          type: STOP_WATCHING_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: STOP_WATCHING_SUCCESS,\n        payload: response\n      });\n      dispatch({\n        type: SET_ACTIVE_CONVERSATION,\n        payload: null\n      });\n      return;\n    })\n  };\n};\n\nexport const getConversationBanList = (conversationBanListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_CONVERSATION_BAN_LIST,\n      payload: {}\n    });\n    return conversationBanListQuery.list((err, response) => {\n      if (err) {\n        dispatch({\n          type: CONVERSATION_BAN_LIST_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: CONVERSATION_BAN_LIST_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};\n\nexport const banConversationUsers = (conversation, userIds, displayName) => {\n  return dispatch => {\n    dispatch({\n      type: BAN_CONVERSATION_USERS,\n      payload: {}\n    });\n\n    return conversation.banUsers(userIds, null, null, (err, response) => {\n      if (err) {\n        dispatch({\n          type: BAN_CONVERSATION_USERS_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: BAN_CONVERSATION_USERS_SUCCESS,\n        payload: { conversation, userIds, displayName}\n      });\n      return;\n    });\n  };\n};\n\nexport const unbanConversationUsers = (conversation, userIds) => {\n  return dispatch => {\n    dispatch({\n      type: UNBAN_CONVERSATION_USERS,\n      payload: {}\n    });\n\n    return conversation.unbanUsers(userIds, (err, response) => {\n      if (err) {\n        dispatch({\n          type: UNBAN_CONVERSATION_USERS_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: UNBAN_CONVERSATION_USERS_SUCCESS,\n        payload: { conversation, userIds}\n      });\n      return;\n    });\n  };\n};\n","import React from 'react';\n\nexport const ChannelizeContext = React.createContext({ client: null });\n\nexport const ChannelizeProvider = ChannelizeContext.Provider;\n\nexport function withChannelizeContext(OriginalComponent) {\n  const ContextAwareComponent = getContextAwareComponent(\n    ChannelizeContext,\n    OriginalComponent,\n  );\n  return ContextAwareComponent;\n}\n\nconst getContextAwareComponent = function(context, originalComponent) {\n  const Context = context;\n  const OriginalComponent = originalComponent;\n  const ContextAwareComponent = function(props) {\n    return (\n      <Context.Consumer>\n        {(c) => <OriginalComponent {...c} {...props} />}\n      </Context.Consumer>\n    );\n  };\n\n  ContextAwareComponent.themePath = OriginalComponent.themePath;\n  ContextAwareComponent.extraThemePaths = OriginalComponent.extraThemePaths;\n  ContextAwareComponent.displayName =\n    OriginalComponent.displayName || OriginalComponent.name || 'Component';\n  ContextAwareComponent.displayName = ContextAwareComponent.displayName.replace(\n    'Base',\n    '',\n  );\n\n  return ContextAwareComponent;\n};","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { \n  chConnect,\n  registerEventHandlers,\n  setConnected\n} from \"../actions\";\nimport { IMAGES } from \"../constants\";\nimport { ChannelizeProvider } from '../context';\n\nclass App extends PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      conversation: null,\n      userId: null\n    }\n  }\n\n  componentDidMount() {\n    const { client, userId, accessToken } = this.props;\n    if (!client.connected) {\n      this.props.chConnect(client, userId, accessToken);\n      return\n    }\n    this.props.setConnected(true)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!this.props.connected) {\n      return;\n    }\n\n    // Register real time events after successful connection\n    if (!prevProps.connected && this.props.connected) {\n      this.props.registerEventHandlers(this.props.client)\n    }\n  }\n\n  getContext = () => ({\n    client: this.props.client\n  });\n\n  render() {\n    const { connected } = this.props;\n\n    return (\n      <ChannelizeProvider value={this.getContext()}>\n        <div className=\"channelize-chat\">{ this.props.children }</div>\n      </ChannelizeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = ({client}) => {\n  return {...client}\n}\n\nApp = connect(\n  mapStateToProps,\n  { chConnect, registerEventHandlers, setConnected }\n)(App);\n\nexport { App };","import React, { PureComponent } from 'react';\nimport ReactAvatar from 'react-avatar';\nimport PropTypes from 'prop-types';\nclass Avatar extends PureComponent {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      initials,\n      src,\n      className,\n      avatarProps\n    } = this.props;\n    \n    const isValidSrc = src && src.trim();\n    const defaultAvatarProps = {\n      maxInitials: 2,\n      size: 30,\n      round: true\n    }\n    const finalAvatarProps = { ...defaultAvatarProps, ...avatarProps };\n\n    return (\n      <React.Fragment>\n        {\n          isValidSrc ?\n          <div title={initials} className= {className} style={{ backgroundImage: `url(${src})` }}>\n            {this.props.children}\n          </div> :\n          <div title={initials} className= {className}>\n            <ReactAvatar name={initials} {...finalAvatarProps}/>\n            {this.props.children}\n          </div>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nAvatar.propTypes = {\n  src: PropTypes.string,\n  initials: PropTypes.string,\n  className: PropTypes.string,\n  avatarProps: PropTypes.object\n}\n\nAvatar.defaultProps = {\n  avatarProps: {}\n};\n\nexport { Avatar }","import React, { PureComponent } from 'react';\nimport { Avatar } from './Avatar';\nclass Header extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDropDownList: false\n    };\n  }\n\n  toggleDropDownList = () => {\n    this.setState((state) => ({\n      showDropDownList: !state.showDropDownList\n    }))\n  }\n\n  render() {\n    const { \n      title,\n      subtitle,\n      imageSrc,\n      imageInitials,\n      showArrowBack,\n      onBack,\n      showChevron,\n      renderDropDownList,\n      renderRight,\n      callButtons\n    } = this.props;\n    const { showDropDownList } = this.state;\n\n    return (\n    <div id=\"ch_header\" className=\"ch-header\">\n      { showArrowBack && <i className=\"material-icons arrow-back\" onClick={onBack}>arrow_back</i>}\n\n      { (imageSrc || imageInitials) && <Avatar src={imageSrc} initials={imageInitials} className=\"ch-header-image\"></Avatar> }\n\n      <div className=\"ch-header_details\">\n        <div className=\"ch-header_content\">\n          { title && \n            <div className=\"ch-header-title\">\n              <div>{title}</div>\n              { showChevron && <i className=\"material-icons ch-chevron-icon\" onClick={this.toggleDropDownList}>keyboard_arrow_down</i>}\n            </div>\n          }\n          { subtitle && <div className=\"ch-header-subtitle\">{subtitle}</div>}\n          { showDropDownList && renderDropDownList && renderDropDownList()}\n        </div>\n        {callButtons}\n        <div className=\"ch-header_right-icons\">\n          {renderRight && this.props.renderRight()}\n        </div>\n      </div>\n    </div>\n   );\n  }\n}\n\nexport { Header }","import React from 'react';\nimport { IMAGES } from \"../constants\";\n\nfunction Launcher(props) {\n  const { onClick } = props;\n\n  return (\n  \t<div id=\"ch_launcher\" className=\"ch-launcher\" onClick={onClick}>\n\t  <img id=\"ch_launcher_image\" className=\"ch-launcher-image\" src={IMAGES.LAUNCHER_ICON} alt=\"\" />\n  \t</div>\n  );\n}\n\nexport { Launcher };","import React from 'react';\n\nfunction Loader(props) {\n\treturn (\n\t\t<div id=\"ch_conv_loader_container\">\n\t\t\t<div id=\"ch_conv_loader\" className=\"ch-loader\"></div>\n\t\t</div>\n\t);\n}\n\nexport { Loader };","import {produce, setAutoFreeze} from \"immer\"\nimport moment from 'moment';\nimport { LANGUAGE_PHRASES, ADMIN_MSG_FORMATS, CALL_FORMATS, IMAGES } from \"../constants\";\nvar sprintf = require('sprintf-js').sprintf\nsetAutoFreeze(false);\n\nexport function createReducer(initialState, actionsMap) {\n  return (state = initialState, action) => {\n    return produce(state, draft => {\n      const caseReducer = actionsMap[action.type];\n      return caseReducer ? caseReducer(draft, action) : undefined;\n    });\n  };\n}\n\nexport function uniqueList(list) {\n  return list.reduce((uniqList, currentValue) => {\n    let ids = uniqList.map(item => {\n      return item.id;\n    });\n    if (ids.indexOf(currentValue.id) < 0) {\n      uniqList.push(currentValue);\n    }else {\n      uniqList.splice(ids.indexOf(currentValue.id), 1, currentValue);\n    }\n    return uniqList;\n  }, []);\n};\n\nexport const modifyConversation = (conversation, loginUser) => {\n  if (!conversation) {\n    return\n  }\n\n  if (!conversation.isGroup) {\n    if (conversation.user) {\n      conversation.title = conversation.user.displayName;\n      if (conversation.user.profileImageUrl) {\n        conversation.profileImageUrl = conversation.user.profileImageUrl;\n      }\n    } else {\n      conversation.title = \"Deleted User\";\n    }\n  }\n\n  // Set conversation members\n  conversation.otherMemberIds = [];\n  if (conversation.members) {\n    conversation.members.map((member) => {\n      if(member.userId != loginUser.id) {\n        conversation.otherMemberIds.push(member.userId);\n      }\n    });\n  }\n\n  return conversation;\n}\n\nexport const modifyMessageList = (client, conversation, list) => {\n  const user = client.getCurrentUser();\n\n  // Find last message of logged-in user\n  let lastMessage;\n  list.forEach(message => {\n    if (user.id == message.ownerId) {\n      lastMessage = message;\n    }\n  })\n\n  return list.map((message, i) => {\n    // Determine if show read status\n    message.readByAll = null;\n    message.showReadStatus = false;\n    if (lastMessage && lastMessage.id == message.id) {\n      message.showReadStatus = true;\n      message.readByAll = !message.pending && conversation.readByAllMembers(message);\n    }\n\n    // Handle created At\n    if(!('createdAt' in message)) {\n      message.createdAt = Date.now();\n    }\n    message['time'] = AMorPMTimeParser(message.createdAt);\n\n    // Handle message owner\n    if(!message.owner) {\n      message.owner = {\n        id: user.id,\n        displayName: user.displayName,\n        profileImageUrl: user.profileImageUrl\n      };\n    }\n    if (('displayName' in message.owner)) {\n      message.owner.displayName = capitalize(message.owner.displayName)\n    }\n\n    // Determine if message owner is self or other?\n    message['isUser'] = false;\n    if (user.id == message.ownerId) {\n      message.isUser = true;\n    }\n\n    // Replace body of deleted message\n    if(message.isDeleted) {\n      message.body = LANGUAGE_PHRASES.MESSAGE_DELETED;\n    }\n\n    // Set showOwnerAvatar & showDateSeparator props\n    if (i < list.length) {\n      let nextMessage = list[i + 1];\n\n      message.showOwnerAvatar = false;\n      const isUserLastMessage = (i == list.length -1 && user.id == message.owner.id);\n      message.showOwnerAvatar = !(isSameUser(message, nextMessage, user) || isUserLastMessage || message.isUser);\n\n      let prevMessage = list[i - 1];\n      message.showDateSeparator = !isSameDay(message, prevMessage)\n    }\n\n    // Handle admin message\n    if (message.type == 'admin') {\n      message.system = true;\n      message = _modifyAdminMessage(user, message);\n    }\n\n    return message;\n  });\n};\n\nexport const getLastMessageString = (client, conversation) => {\n  const user = client.getCurrentUser();\n  let message = conversation.lastMessage;\n\n  let lastMessageString;\n  if (!Object.keys(message).length) {\n    lastMessageString = '';\n    return lastMessageString;\n  }\n\n  // Handle admin message\n  if (message.type == 'admin') {\n    lastMessageString = 'Admin message';\n\n    return lastMessageString\n  }\n\n  // Handle attachment\n  const attachments = message.attachments;\n  if (attachments && attachments.length) {\n    const attachment = attachments[0];\n\n    if (message.owner.id == user.id) {\n      lastMessageString = `You sent a ${attachment.type}`\n    } else {\n      const displayName = capitalize(message.owner.displayName);\n      lastMessageString = `${displayName} sent a ${attachment.type}`\n    }\n\n    return lastMessageString;\n  }\n\n  // Set messageOwnerName\n  let messageOwnerName;\n  if (message.owner) {\n    if (message.owner.id == user.id) {\n      messageOwnerName = 'You: '\n    } else {\n      if (conversation.isGroup) {\n        const displayName = capitalize(message.owner.displayName);\n        messageOwnerName = `${displayName}: `;\n      }\n    }\n  }\n\n  if (message.isDeleted) {\n    message.body = \"This message was deleted.\"\n  }\n\n  if (!messageOwnerName) {\n    lastMessageString = `${message.body}`\n  } else {\n    lastMessageString = `${messageOwnerName}${message.body}`\n  }\n\n  return lastMessageString;\n}\n\nexport function lastMessageTimeParser(time) {\n  const today = new Date();\n  const todayDate = today.getDate();\n  const todayMonth = today.getMonth() + 1;\n  const todayYear = today.getFullYear();\n\n  const inputDate = new Date(time);\n  const inputTimeDate = inputDate.getDate();\n  const inputTimeMonth = inputDate.getMonth() + 1;\n  const inputTimeYear = inputDate.getFullYear();\n\n  const showWeekDay = inputTimeYear == todayYear && inputTimeMonth == todayMonth && todayDate - inputTimeDate <= 7;\n  const showTime = inputTimeYear == todayYear && inputTimeMonth == todayMonth && inputTimeDate == todayDate;\n  if (showTime) {\n    return AMorPMTimeParser(inputDate);\n  } else if (showWeekDay) {\n    const weeks = [\n     'Sun',\n     'Mon',\n     'Tue',\n     'Wed',\n     'Thu',\n     'Fri',\n     'Sat'\n    ]\n    return weeks[inputDate.getDay()];\n  } else {\n    return inputTimeMonth + '/' + inputTimeDate + '/' + inputTimeYear;\n  }\n}\n\nexport function AMorPMTimeParser(time) {\n  const inputDate = new Date(time);\n  let hours = inputDate.getHours();\n  var AmOrPm = hours >= 12 ? 'PM' : 'AM';\n  hours = (hours % 12) || 12;\n  var minutes = '0' + inputDate.getMinutes() ;\n  return hours + \":\" + minutes.substr(-2) + \" \" + AmOrPm;\n}\n\nexport function dateSeparatorParser(time) {\n  const today = new Date();\n  const todayDate = today.getDate();\n  const todayMonth = today.getMonth() + 1;\n  const todayYear = today.getFullYear();\n\n  const inputDate = new Date(time);\n  const inputTimeDate = inputDate.getDate();\n  const inputTimeMonth = inputDate.getMonth() + 1;\n  const inputTimeYear = inputDate.getFullYear();\n\n  const showToday = inputTimeYear == todayYear && inputTimeMonth == todayMonth && todayDate == inputTimeDate;\n  const showYesterday = inputTimeYear == todayYear && inputTimeMonth == todayMonth && (todayDate - inputTimeDate) == 1;\n  if(showToday) {\n    return 'Today';\n  } else if (showYesterday) {\n    return 'Yesterday';\n  } else {\n    return inputTimeMonth + '/' + inputTimeDate + '/' + inputTimeYear;\n  }\n}\n\nexport function isSameDay(currentMessage, diffMessage) {\n  if (!currentMessage || !currentMessage.createdAt || !diffMessage || !diffMessage.createdAt) {\n    return false;\n  }\n\n  let currentCreatedAt = new Date(currentMessage.createdAt);\n  let diffCreatedAt = new Date(diffMessage.createdAt);\n  return currentCreatedAt.getDate() == diffCreatedAt.getDate();\n}\n\nexport const typingString = (typing) => {\n  if (!typing.length) {\n    return null;\n  }\n\n  typing = typing.map(user => capitalize(user.displayName.trim().split(' ')[0]));\n  if (typing.length == 1) {\n    return `${typing[0]} is typing...`;\n  } else if(typing.length == 2) {\n    const firstUser = typing[0];\n    const secondUser = typing[1];\n    return `${firstUser} and {secondUser} are typing...`;\n  } else if(typing.length > 2) {\n    const commaSeparatedUsers = typing.slice(0, -1).join(', ')\n    const lastuser = typing.slice(-1);\n    return `${commaSeparatedUsers} and {lastuser} are typing...`;\n  }\n}\n\nexport function isSameUser(currentMessage, diffMessage, user) {\n  return !!(diffMessage &&\n    diffMessage.owner &&\n    currentMessage.owner && (\n    user.id === currentMessage.owner.id ||\n    diffMessage.owner.id === currentMessage.owner.id));\n}\n\nexport const capitalize = (s) => {\n  if (!s) return\n  s = s.split(\" \");\n\n  for (var i = 0, x = s.length; i < x; i++) {\n      if (!s[i]) {\n        s[i] = s[i];\n      } else {\n        s[i] = s[i][0].toUpperCase() + s[i].substr(1);\n      }\n  }\n\n  return s.join(\" \");\n}\n\nconst _modifyAdminMessage = (user, message) => {\n  if (message.type != 'admin') {\n    return message;\n  }\n\n  const attachments = message.attachments;\n  if (!attachments.length) {\n    return message;\n  }\n\n  let attachment = attachments[0];\n  let metaData = attachment.metaData;\n\n  if(metaData.type == \"voice\" || metaData.type == \"video\") {\n    let duration = metaData.duration ? \" \" + secondsToHms(metaData.duration) : \"\";\n    message.text = CALL_FORMATS[attachment.adminMessageType] + duration;\n    return message;\n  }\n\n  // Manipulate subject\n  let subName;\n  if (metaData.subType == 'user') {\n    if (user.id == metaData.subId) {\n      subName = LANGUAGE_PHRASES.YOU;\n    } else {\n      if (metaData.subUser) {\n        subName = capitalize(metaData.subUser.displayName);\n      } else {\n        subName = LANGUAGE_PHRASES.DELETED_MEMBER;\n      }\n    }\n  }\n\n  // Manipulate object\n  let objNames;\n  const objType = metaData.objType;\n  const objValues = metaData.objValues;\n  if (metaData.objType == 'user') {\n    if (metaData.objUsers) {\n      if (user.id == metaData.objUsers.id) {\n        objNames = LANGUAGE_PHRASES.YOU;\n      } else {\n        objNames = capitalize(metaData.objUsers.displayName);\n      }\n    } else {\n      objNames = LANGUAGE_PHRASES.DELETED_MEMBER;\n    }\n  } else if(metaData.objType == 'users' && Array.isArray(objValues)) {\n    let names = [];\n    objValues.forEach(value => {\n      const objUser = metaData.objUsers.find(objUser => objUser && objUser.id == value);\n      let name;\n      if (objUser) {\n        name = capitalize(objUser.displayName);\n      } else {\n        name = LANGUAGE_PHRASES.DELETED_MEMBER;\n      }\n      names.push(name);\n    });\n    objNames = names.join(', ');\n  } else if(metaData.objType == 'group') {\n    if(typeof objValues == 'string') {\n      objNames = capitalize(objValues);\n    } else {\n      objNames = objValues;\n    }\n  }\n\n  const format = ADMIN_MSG_FORMATS[attachment.adminMessageType];\n  if (format) {\n    message.text = sprintf(format, subName, objNames);\n  }\n\n  return message\n}\n\nfunction secondsToHms(second) {\n  second = Number(second);\n  var h = Math.floor(second / 3600);\n  var m = Math.floor(second % 3600 / 60);\n  var s = Math.floor(second % 3600 % 60);\n\n  var hDisplay = h > 0 ? h + \"h \" : \"\";\n  var mDisplay = m > 0 ? m + \"m \" : \"\";\n  var sDisplay = s > 0 ? s + \"s \": \"\";\n  return hDisplay + mDisplay + sDisplay; \n}\n\nexport const getCookie = (cname) => {\n  var name = cname + \"=\";\n  var ca = document.cookie.split(';');\n  for(var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nexport const setCookie = (cname, cvalue, exdays) => {\n  var d = new Date();\n  d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n  var expires = \"expires=\"+d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { lastMessageTimeParser, getLastMessageString } from \"../utils\";\nimport { withChannelizeContext } from '../context';\nimport { setActiveConversation } from \"../actions\";\nimport { Avatar } from \"./Avatar\";\n\nclass ConversationItem extends PureComponent {\n\n  constructor(props) {\n    super(props);\n  }\n\n  selectConversation = () => {\n    const { conversation, onSelect } = this.props;\n    this.props.setActiveConversation(conversation);\n\n    if (onSelect && typeof onSelect == 'function') {\n      onSelect(conversation);\n    }\n  }\n\n  render() {\n    const { client, activeConversation, conversation } = this.props;\n    let message = { ...conversation.lastMessage };\n\n    // Handle last message\n    const lastMessageString = getLastMessageString(client, conversation);\n\n    // Set Last Message time\n    if(!message.createdAt) {\n      message.time = lastMessageTimeParser(Date());\n    } else {\n      message.time = lastMessageTimeParser(message.updatedAt);\n    }\n\n    let style = {}\n    if (activeConversation && activeConversation.id == conversation.id) {\n      style = {'backgroundColor': '#fafafa'};\n    }\n\n    return (\n      <li style={style} id={conversation.id} onClick={this.selectConversation}>\n\n          <Avatar\n            src={conversation.profileImageUrl}\n            initials={conversation.title}\n            className=\"ch-conversation-image\">\n              { conversation && conversation.user && conversation.user.isOnline && \n                <span className=\"ch-online-icon ch-show-element\"></span> }\n            </Avatar>\n\n          <div className=\"ch-conversation-content\">\n          <div className=\"ch-conversation-content__upper\">\n            <div id=\"ch_title\">{conversation.title}</div>\n            <div id=\"ch_created_at\" className=\"ch-created-at\">{message.time}</div>\n          </div>\n          <div className=\"ch-conversation-content__lower\">\n            <div id=\"ch_last_msg_box\" className=\"ch-last-msg-box\">\n              <div className=\"ch-last-message\">{lastMessageString}</div>\n            </div>\n          </div>\n          </div>\n          \n      </li>\n    );\n  }\n}\n\nConversationItem = withChannelizeContext(ConversationItem);\n\nconst mapStateToProps = ({conversation}) => {\n  return {...conversation};\n}\n\nConversationItem = connect(\n  mapStateToProps,\n  { setActiveConversation },\n)(ConversationItem);\n\nexport { ConversationItem }","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { ConversationItem} from \"./ConversationItem\";\nimport { Loader } from \"./Loader\";\nimport { LANGUAGE_PHRASES } from \"../constants\";\nimport { connect } from 'react-redux';\nimport { withChannelizeContext } from '../context';\nimport { \n  getConversationList,\n  loadMoreConversations,\n  setActiveConversation\n} from \"../actions\";\nimport { modifyConversation } from \"../utils\";\n\nclass ConversationList extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.limit = 25;\n    this.skip = 0;\n\n    this.onScroll = this.onScroll.bind(this);\n    this.chRecentListingRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { client, connected, activeConversation, conversationlist } = this.props;\n    if (!connected) {\n      return\n    }\n\n    // Find if need to refresh conversation\n    const refresh = !prevProps.connected && this.props.connected;\n    if (refresh) {\n      this._init();\n    }\n\n    // Set a conversation active\n    if (!activeConversation && conversationlist.length) {\n      this.props.setActiveConversation(conversationlist[0]);\n    }\n  }\n\n  _init = () => {\n    const { client, conversationlist } = this.props;\n\n    if (conversationlist.length) {\n      return;\n    }\n\n    // Load conversations\n    let conversationListQuery = client.Conversation.createConversationListQuery();\n    conversationListQuery.limit = this.limit;\n    conversationListQuery.skip = this.skip;\n    conversationListQuery.include = 'members';\n    this.props.getConversationList(conversationListQuery);\n  }\n\n  onCloseIconClick = () => {\n    const { onCloseIconClick } = this.props;\n    if (onCloseIconClick && typeof onCloseIconClick == 'function') {\n      onCloseIconClick();\n    }\n  }\n\n  onSearchIconClick = () => {\n    const { onSearchIconClick } = this.props;\n    if (onSearchIconClick && typeof onSearchIconClick == 'function') {\n      onSearchIconClick();\n    }\n  }\n\n  onScroll() {\n    const { conversationlist, client, loadingMoreConversations, allConversationsLoaded } = this.props;\n    const chRecentListingRef = this.chRecentListingRef.current;\n\n    if (loadingMoreConversations || allConversationsLoaded || conversationlist.length < this.limit) {\n      return\n    }\n\n    if(chRecentListingRef.scrollTop + chRecentListingRef.clientHeight == chRecentListingRef.scrollHeight) {\n      // Set skip\n      this.skip = conversationlist.length;\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      conversationListQuery.limit = this.limit;\n      conversationListQuery.skip = this.skip;\n      this.props.loadMoreConversations(conversationListQuery)\n    }\n  }\n\n  render() {\n    let { \n      client,\n      conversationlist,\n      connecting,\n      connected,\n      conversationLoading,\n      conversationError,\n      loadingMoreConversations,\n      showSearchIcon,\n      onSearchIconClick,\n      showCloseIcon,\n      activeConversation,\n      onSelect\n    } = this.props;\n\n    const user = client.getCurrentUser();\n\n    conversationlist = conversationlist.map(conversation => modifyConversation(conversation, user));\n\n    return (\n      <div id=\"ch_recent_window\" className=\"ch-recent-window\">\n        <Header \n          imageSrc={user && user.profileImageUrl}\n          imageInitials={user && user.displayName}\n          title={LANGUAGE_PHRASES.CHAT}\n          renderRight={() => {\n            return (\n              <div>\n                { showSearchIcon && <i title=\"Search\" className=\"material-icons\" onClick={this.onSearchIconClick}>search</i>}\n                { showCloseIcon && <i title=\"Close\" className=\"material-icons\" onClick={this.onCloseIconClick}>close</i>}\n              </div>\n            )\n          }}/>\n\n        <div id=\"ch_recent_listing\" className=\"ch-recent-listing\"  ref={this.chRecentListingRef} onScroll={this.onScroll}>\n          { (connecting || conversationLoading) &&  <div className=\"center\"><Loader /></div>}\n\n          { conversationError && <div className=\"center error\">{conversationError}</div>}\n\n          { connected && !conversationlist.length && !conversationLoading && <div className=\"center no-record-found\">No record Found</div>}\n\n          <ul id=\"ch_recent_ul\" className=\"ch-recent-ul\">\n            {\n              conversationlist.map((conversation) => {\n                return <ConversationItem \n                  key={conversation.id} \n                  activeConversation={activeConversation} \n                  conversation={conversation}\n                  onSelect={onSelect} />\n              })\n            }\n          </ul>\n\n          { loadingMoreConversations &&  <div> Loading... </div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nConversationList = withChannelizeContext(ConversationList);\n\nconst mapStateToProps = ({conversation, client, message}) => {\n  return {...conversation, ...client, activeConversation: message.conversation};\n}\n\nConversationList = connect(\n  mapStateToProps,\n  { \n    getConversationList,\n    loadMoreConversations,\n    setActiveConversation\n },\n)(ConversationList);\n\nexport { ConversationList }\n","import React, { PureComponent } from 'react';\nimport { LANGUAGE_PHRASES } from \"../constants\";\n\nclass MediaLightBox extends PureComponent {\n\n\tdownloadFile(url, name) {\n\t\tname = name ? name : LANGUAGE_PHRASES.DOWNLOAD_FILE_NAME;\n\t  var link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  link.download = name;\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\t}\n\n\trender() {\n\t\tconst { file } = this.props;\n\t\tconst fileUrl = file.fileUrl ? file.fileUrl : file.thumbnailUrl;\n\n\t\treturn (\n\t\t\t<div className=\"ch-light-box-container\">\n\n\t\t\t\t<div>\n\t\t\t\t\t<i title=\"Close\" className=\"material-icons ch-close-light-box-icon\" onClick={this.props.onCloseClick}>close</i>\n\t\t\t\t\t<i title=\"Download\" className=\"material-icons ch-close-light-box-icon\" onClick={()=> this.downloadFile(fileUrl, file.name)}>arrow_downward</i>\n\t\t\t\t</div>\n\n\t\t\t\t{ file.type == \"image\" &&\n\t\t\t\t\t<img className=\"ch-light-box-file\" src={fileUrl} />\n\t\t\t\t}\n\t\t\t\t{ file.type == \"video\" &&\n\t\t\t\t\t<video controls id=\"videoPlayer\" className=\"ch-light-box-file\" preload=\"auto\" loop=\"loop\" autoPlay=\"autoplay\">\n\t\t\t\t    <source src={fileUrl} />\n\t\t\t\t\t</video>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport { MediaLightBox };","import React, { PureComponent } from 'react';\nimport { LANGUAGE_PHRASES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport PropTypes from 'prop-types';\nimport { setCookie } from '../utils';\nclass GuestJoinForm extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayName: '',\n      errors: {},\n      joining: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value, errors: {} });\n  }\n\n  validateForm() {\n    const displayName = this.state.displayName.trim();\n    const errors = {}\n    const MAX_LENGTH = 30;\n    if (!displayName || displayName.length > MAX_LENGTH) {\n      errors.displayName = LANGUAGE_PHRASES.GUEST_JOIN_ERROR_DISPLAY_NAME;\n    }\n    this.setState({ errors });\n    return !Object.keys(errors).length;\n  }\n\n  async handleSubmit(event) {\n    const { client, onJoinedAsGuest, onCloseClick } = this.props;\n    const displayName = this.state.displayName.trim();\n    event.preventDefault();\n    if (!this.validateForm()) {\n      return false;\n    }\n    this.setState({ joining: true });\n    await client.switchToGuest(displayName);\n    setCookie('ch_guest_display_name', displayName, 1000)\n    if (onJoinedAsGuest) await onJoinedAsGuest(displayName);\n    this.setState({ joining: false });\n    onCloseClick();\n  }\n\n  render() {\n    const { onCloseClick } = this.props;\n    const { joining, errors } = this.state;\n    return (\n      <div className=\"ch-light-box-container ch-guest-light-box-container\">\n        <div className=\"ch-guest-light-box\">\n          <div className=\"ch-guest-light-box-close-container\">\n            <i title=\"Close\" className=\"material-icons ch-guest-light-box-close\" onClick={onCloseClick}>close</i>\n          </div>\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"form-element-wrapper\">\n              <div className=\"form-heading\">{LANGUAGE_PHRASES.GUEST_JOIN_HEADING}</div>\n            </div>\n            <div className=\"form-element-wrapper\">\n              <input id=\"displayName\" className=\"form-element\" name=\"displayName\" type=\"text\" placeholder={LANGUAGE_PHRASES.GUEST_JOIN_LABEL_DISPLAY_NAME} value={this.state.displayName} onChange={this.handleChange} />\n              {errors.displayName && <div className=\"form-error\">{errors.displayName}</div>}\n            </div>\n            <div className=\"form-element-wrapper\">\n              <input type=\"submit\" value=\"Join\" disabled={joining} />\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nGuestJoinForm = withChannelizeContext(GuestJoinForm);\n\nGuestJoinForm.propTypes = {\n  onJoinedAsGuest: PropTypes.func,\n  onCloseClick: PropTypes.func,\n}\n\nexport { GuestJoinForm }","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DISPLAY = {\n  BLOCK: 'block',\n  FLEX: 'flex',\n  INLINE: 'inline',\n  INLINE_BLOCK: 'inline-block',\n  CONTENTS: 'contents',\n};\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  onOutsideClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n  useCapture: PropTypes.bool,\n  display: PropTypes.oneOf(Object.values(DISPLAY)),\n};\n\nconst defaultProps = {\n  disabled: false,\n\n  // `useCapture` is set to true by default so that a `stopPropagation` in the\n  // children will not prevent all outside click handlers from firing - maja\n  useCapture: true,\n  display: DISPLAY.BLOCK,\n};\n\nclass OutsideClickHandler extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.setChildNodeRef = this.setChildNodeRef.bind(this);\n  }\n\n  componentDidMount() {\n    const { disabled, useCapture } = this.props;\n\n    if (!disabled) this.addMouseDownEventListener(useCapture);\n  }\n\n  componentDidUpdate({ disabled: prevDisabled }) {\n    const { disabled, useCapture } = this.props;\n    if (prevDisabled !== disabled) {\n      if (disabled) {\n        this.removeEventListeners();\n      } else {\n        this.addMouseDownEventListener(useCapture);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeEventListeners();\n  }\n\n  // Use mousedown/mouseup to enforce that clicks remain outside the root's\n  // descendant tree, even when dragged. This should also get triggered on\n  // touch devices.\n  onMouseDown(e) {\n    const { useCapture } = this.props;\n\n    if (!this.childNode) {\n      return\n    }\n\n    const isDescendantOfRoot = this.childNode && this.childNode.contains(e.target);\n    if (!isDescendantOfRoot) {\n      document.addEventListener(\n        'mouseup',\n        this.onMouseUp,\n        { capture: useCapture },\n      );\n    }\n  }\n\n  // Use mousedown/mouseup to enforce that clicks remain outside the root's\n  // descendant tree, even when dragged. This should also get triggered on\n  // touch devices.\n  onMouseUp(e) {\n    const { onOutsideClick } = this.props;\n    if (!this.childNode) {\n      return\n    }\n\n    const isDescendantOfRoot = this.childNode && this.childNode.contains(e.target);\n    if (!isDescendantOfRoot) {\n      onOutsideClick(e);\n    }\n  }\n\n  setChildNodeRef(ref) {\n    this.childNode = ref;\n  }\n\n  addMouseDownEventListener(useCapture) {\n    document.addEventListener(\n      'mousedown',\n      this.onMouseDown,\n      { capture: useCapture },\n    );\n  }\n\n  removeEventListeners() {\n    document.removeEventListener('mousedown', this.onMouseDown);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  render() {\n    const { children, display } = this.props;\n\n    return (\n      <div\n        className=\"outside-event\"\n        ref={this.setChildNodeRef}\n        style={\n          display !== DISPLAY.BLOCK && Object.values(DISPLAY).includes(display)\n            ? { display }\n            : undefined\n        }\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nOutsideClickHandler.propTypes = propTypes;\nOutsideClickHandler.defaultProps = defaultProps;\n\nexport { OutsideClickHandler }","import React, { Component } from 'react';\nimport { withChannelizeContext } from '../context';\nimport { dateSeparatorParser, modifyAdminMessage } from '../utils';\nimport { LANGUAGE_PHRASES } from \"../constants\";\nimport { OutsideClickHandler } from './OutsideClickHandler';\nimport { Avatar } from \"./Avatar\";\n\nclass MessageSimple extends Component {\n\tconstructor(props) {\n  \tsuper(props);\n  \tthis.state = {\n  \t\tshowMoreOptions: false\n\t\t}\n\t}\n\n\tdownloadFile(url, name) {\n\t  var link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  link.download = name;\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\t}\n\n\ttoggleMoreOptions = () => {\n    this.setState((state) => ({\n    \t\tshowMoreOptions: !state.showMoreOptions\n    }));\n\t}\n\n\thideMoreOptions = () => {\n\t\tif (!this.state.showMoreOptions) return;\n\t\tthis.setState((state) => ({\n\t\t\tshowMoreOptions: false\n\t\t}));\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclient,\n\t\t\tmessage,\n\t\t\trenderMoreOptions\n\t\t} = this.props;\n\t\tconst { showMoreOptions } = this.state;\n\n\t\tconst user = client.getCurrentUser();\n\n\t\t// Set class for user/owner message\n\t\tlet msgContainerPos = message.isUser ? \"right\" : \"left\";\n\n\t\tlet adminMsg = message.type === \"admin\" ? true : false;\n\t\tlet adminMessageType = null;\n\t\tif (adminMsg) {\n\t\t\tconst attachment = message.attachments.length ? message.attachments[0] : null;\n\t\t\tif (attachment) {\n\t\t\t\tadminMessageType = attachment.adminMessageType;\n\t\t\t}\n\t\t}\n\n\t\tlet fileMessage;\n\n\t\tif(message.attachments && message.attachments.length) {\n\t\t\tfileMessage = message.attachments.map(attachment => {\n\t\t\t\tswitch(attachment.type) {\n\t\t\t\t\tcase \"image\":\n\t\t\t\t\t\treturn <img key={message.id} className=\"ch-image-message\" src={attachment.thumbnailUrl ? attachment.thumbnailUrl : attachment.fileUr} onClick={this.props.onClickEvent}/>\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"video\":\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={message.id} className=\"ch-video-container\">\n\t\t\t\t\t\t\t\t<img className=\"ch-image-message\" src={attachment.thumbnailUrl} onClick={this.props.onClickEvent}/>\n\t\t\t\t\t\t\t\t<i className=\"material-icons ch-video-play-icon\" onClick={this.props.onClickEvent}>play_circle_outline</i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase \"application\":\n\t\t\t\t\t\tlet extension = message.attachments[0].extension ? message.attachments[0].extension : message.attachments[0].name.split(\".\").pop();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={message.id} className=\"ch-text-message\">\n\t\t\t\t\t\t\t\t<div className=\"ch-message\">\n\t\t\t\t\t\t\t\t\t<div className=\"ch-message-body\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"ch-docs-data\">\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"material-icons ch-attachment-icon\">description</i>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"ch-docs-name\">{attachment.name}</span>\n\t\t\t\t\t\t\t\t\t\t\t{ attachment.fileUrl && <i className=\"material-icons ch-docs-download-icon\" onClick={() =>this.downloadFile(attachment.fileUrl, attachment.name)}>arrow_downward</i>}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"ch-docs-details\">\n\t\t\t\t\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t\t\t\t\t<span>{extension}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ message.showDateSeparator && \t\n\t\t\t\t\t<div key={`${message.id}-date`} className=\"ch-msg-padding\">\n\t\t\t\t\t\t<div className=\"ch-message-date-separator\">\n\t\t\t\t\t\t\t<div className=\"message-date-separator_left\"></div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_text\">{dateSeparatorParser(message.createdAt)}</div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_right\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t{ adminMsg ?\n\t\t\t\t\t<div className={`ch-admin-msg-container ${message.type} ${adminMessageType}`}>\n\t\t\t\t\t\t<span className=\"ch-admin-msg\">{message.text}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div key={message.id} className={`ch-msg-padding ${msgContainerPos}`}>\n\t\t\t\t\t\t<div className={`ch-msg-container ch-msg-container-simple ${message.type}`}>\n\n\t\t\t\t\t\t\t{ message.showOwnerAvatar && <Avatar src={message.owner.profileImageUrl} initials={message.owner.displayName} className=\"ch-message-owner-avatar\"></Avatar> }\n\n\t\t\t\t\t\t\t<div className={`ch-msg-content ${msgContainerPos == 'left' && !message.showOwnerAvatar ? 'padding-left': ''}`}>\n\t\t\t\t\t\t\t\t{ message.body && <div className={`ch-text-message ${message.isDeleted ? \"deleted\" : \"\"}`}>{message.body}</div> }\n\n\t\t\t\t\t\t\t\t{ fileMessage }\n\n\t\t\t\t\t\t\t\t<div className={`message-info`}>\n\t\t\t\t\t\t\t\t\t<span id=\"ch_msg_time\" className=\"ch-msg-time\">{message.time}</span>\n\t\t\t\t\t\t\t\t\t{ message.showReadStatus && message.readByAll &&\n\t\t\t\t\t\t\t\t\t\t<i id=\"ch_msg_status\" className=\"material-icons ch-msg-status ch-msg-read-status\">done_all</i>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{ message.showReadStatus && !message.pending && !message.readByAll &&\n\t\t\t\t\t\t\t\t\t\t<i id=\"ch_msg_status\" className=\"material-icons ch-msg-status\">done</i>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t{ message.showReadStatus && message.pending &&\n\t\t\t\t\t\t\t\t\t\t<i id=\"ch_msg_status\" className=\"material-icons ch-msg-status\">schedule</i>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"ch-msg-more-icon\">\n\t\t\t\t\t\t\t\t<i className=\"material-icons\" onClick={()=>this.toggleMoreOptions()}>more_vert</i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<OutsideClickHandler onOutsideClick={()=>this.hideMoreOptions()}>\n\t\t\t\t\t\t\t\t<div onClick={()=>this.toggleMoreOptions()}>\n\t\t\t\t\t\t\t\t\t{ showMoreOptions && renderMoreOptions && renderMoreOptions()}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</OutsideClickHandler>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nMessageSimple = withChannelizeContext(MessageSimple);\n\nexport { MessageSimple };","import React, { Component } from 'react';\nimport { withChannelizeContext } from '../context';\nimport { dateSeparatorParser } from '../utils'\nimport { Avatar } from \"./Avatar\";\nimport { LANGUAGE_PHRASES } from \"../constants\";\nimport { OutsideClickHandler } from './OutsideClickHandler';\n\nclass SimpleList extends Component {\n\tconstructor(props) {\n  \tsuper(props);\n\t}\n\trender() {\n\t\tconst { title, action } = this.props;\n\n\t\treturn (\n\t\t\t<li>\n\t\t\t\t<div className=\"title\">\n\t\t\t\t\t<span>{title}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"action\">\n\t\t\t\t\t{ action && action()}\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nSimpleList = withChannelizeContext(SimpleList);\n\nexport { SimpleList };","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { Loader } from \"./Loader\";\nimport { MediaLightBox } from \"./MediaLightBox\";\nimport { GuestJoinForm } from \"./GuestJoinForm\";\nimport { MessageSimple } from \"./MessageSimple\";\nimport { SimpleList } from \"./SimpleList\";\nimport { modifyConversation, modifyMessageList, typingString } from \"../utils\";\nimport { connect } from 'react-redux';\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport { \n  getMessageList,\n  sendMessageToConversation,\n  sendMessageToUserId,\n  sendFileToConversation,\n  loadMoreMessages as loadMoreMessagesAction,\n  setActiveConversation,\n  setActiveUserId,\n  registerConversationEventHandlers,\n  deleteMessagesForEveryone,\n  deleteMessagesForMe,\n  banConversationUsers,\n  unbanConversationUsers,\n  startWatchingAndSetActiveConversation,\n  stopWatchingAndSetNullConversation,\n  getConversationBanList,\n  registerEventHandlers\n} from '../actions';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport throttle from 'lodash/throttle';\nimport debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\n\nclass ConversationWindow extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.limit = 25;\n    this.skip = 0;\n    this.showMediaLightBox = false;\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTabChange = this.handleTabChange.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n    this._markAsRead = throttle(this._markAsRead, 500);\n    this.sendMedia = this.sendMedia.bind(this);\n    this._startTyping = throttle(this._startTyping, 3000);\n    this._stopTyping = debounce(this._stopTyping, 3000);\n\n    this.toggleGuestJoinForm = this.toggleGuestJoinForm.bind(this);\n    this.onJoinedAsGuest = this.onJoinedAsGuest.bind(this);\n\n    this.chMessageBoxRef = React.createRef();\n\n    this.state = {\n      text: '',\n      dummyConversation: null,\n      userId: null,\n      guestJoinFormOpened: false,\n      activeTab: 'chat'\n    }\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  getSnapshotBeforeUpdate(prevProps) {\n    if (prevProps.messagelist.length < this.props.messagelist.length) {\n      if (!this.chMessageBoxRef || !this.chMessageBoxRef.current) {\n        return null;\n      }\n      \n      const chMessageBoxRef = this.chMessageBoxRef.current;\n\n      return {\n        scrollHeight: chMessageBoxRef.scrollHeight,\n        offsetTop: chMessageBoxRef.scrollTop,\n        offsetBottom: chMessageBoxRef.scrollHeight - chMessageBoxRef.scrollTop,\n      }\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { \n      client,\n      conversation,\n      newMessage,\n      userId,\n      loadingMoreMessages } = this.props;\n\n    // Find if need to refresh conversation\n    const refresh = !prevProps.connected && this.props.connected;\n    if (refresh) {\n      this._init();\n    }\n\n    // if userId switches, re-intialize the conversation\n    if (prevProps.userId != userId && userId) {\n      this._init();\n    }\n\n    // Set the conversation after sending first mesage in dummy conversation\n    if (!conversation && prevProps.sendingMessage && !this.props.sendingMessage) {\n      this._scrollToTarget()\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      if (userId) {\n        conversationListQuery.membersExactly = userId;\n        conversationListQuery.isGroup = false;\n      }\n\n      conversationListQuery.list((err, conversations) => {\n        if (conversations.length) {\n          this.props.setActiveConversation(conversations[0])\n          return\n        }\n\n        client.User.get(userId, (err, user) => {\n          this.setState({\n            dummyConversation: {isGroup: false, user}\n          })\n        })\n      })\n    }\n\n    if (!conversation) {\n      return\n    }\n\n    if ((!prevProps.conversation && conversation) || (prevProps.conversation.id != conversation.id)) {\n      this._init();\n    }\n\n    // Scroll to bottom on initial message loading\n    if (prevProps.messageLoading && !this.props.messageLoading) {\n      this._scrollToTarget()\n    }\n\n    // Scroll to Bottom on new message received\n    if((!prevProps.newMessage && newMessage) || (newMessage && prevProps.newMessage.id != newMessage.id) ) {\n      this._scrollToTarget()\n\n      const user = client.getCurrentUser();\n      if (user.id != newMessage.ownerId) {\n        this._markAsRead(conversation)\n      }\n    }\n\n    // Scroll to target after load more mesages\n    if(prevProps.messagelist.length < this.props.messagelist.length) {\n      if (snapshot) {\n        const chMessageBoxRef = this.chMessageBoxRef.current;\n        const target = chMessageBoxRef.scrollHeight - snapshot.offsetBottom;\n        this._scrollToTarget(target);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    const { conversation } = this.props;\n\n    if (!conversation || conversation.type != 'open' || !conversation.__isWatching) {\n      this.props.setActiveConversation(null);\n      return;\n    }\n\n    // Stop watching open conversation\n    this.props.stopWatchingAndSetNullConversation(conversation)\n  }\n\n  _markAsRead = (conversation) => {\n    if (conversation && conversation.config.typing_events) {\n      conversation.markAsRead();\n    }\n  }\n\n  _scrollToTarget = (target) => {\n    if (!this.chMessageBoxRef) {\n      return\n    }\n\n    const chMessageBoxRef = this.chMessageBoxRef.current;\n    if (Object.prototype.toString.call(target) === \"[object Number]\") {\n      chMessageBoxRef.scrollTop = target;\n      return\n    }\n\n    chMessageBoxRef.scrollTop = chMessageBoxRef.scrollHeight;\n  }\n\n  _init = () => {\n    const { client, conversation, userId, ownProps } = this.props;\n    this.handleTabChange('chat');\n\n    if (!conversation && !userId) {\n      // Handle ownProps\n      if (Object.keys(ownProps).length) {\n        if (ownProps.conversation) {\n          let conversation = ownProps.conversation;\n\n          if (conversation.type != 'open' || conversation.__isWatching) {\n            this.props.setActiveConversation(conversation);\n            return;\n          }\n\n          // Start watching open conversation\n          this.props.startWatchingAndSetActiveConversation(conversation)\n          return;\n        }\n        if (ownProps.userId) {\n          this.props.setActiveUserId(ownProps.userId);\n          return;\n        }\n      }\n      return\n    }\n\n    // If conversation not exist, get the conversation from userId\n    if (!conversation) {\n      this.setState({\n        dummyConversation: null\n      })\n\n      let conversationListQuery = client.Conversation.createConversationListQuery();\n      if (userId) {\n        conversationListQuery.membersExactly = userId;\n        conversationListQuery.isGroup = false;\n      }\n\n      conversationListQuery.list((err, conversations) => {\n        if (conversations.length) {\n          this.props.setActiveConversation(conversations[0])\n          return\n        }\n\n        client.User.get(userId, (err, user) => {\n          this.setState({\n            dummyConversation: {isGroup: false, user}\n          })\n        })\n      })\n    }\n\n    if (!conversation) {\n      return\n    }\n\n    // Register conversation event handlers\n    this.props.registerConversationEventHandlers(conversation);\n\n    // Load messages\n    let messageListQuery = conversation.createMessageListQuery();\n    messageListQuery.limit = this.limit;\n    this.skip = 0;\n    messageListQuery.skip = this.skip;\n    this.props.getMessageList(messageListQuery);\n\n    // Load Banned User Listing\n    if (conversation.isGroup && conversation.isAdmin) {\n      let banListQuery = conversation.createBanListQuery();\n      banListQuery.limit = 100;\n      this.props.getConversationBanList(banListQuery);\n    }\n\n    // Mark as read conversation\n    if (conversation.unreadMessageCount > 0) {\n      conversation.markAsRead();\n    }\n  }\n\n  handleChange(event) {\n    this.setState({text: event.target.value});\n  }\n\n  handleTabChange(type) {\n    this.setState({activeTab: type});\n  }\n\n  handleKeyPress(event) {\n    if(event.key === 'Enter') {\n      event.preventDefault();\n      this.sendMessage();\n      return;\n    }\n\n    this._onTextMessageChanged(event.target.value);\n  }\n\n  toggleGuestJoinForm() {\n    this.setState({guestJoinFormOpened: !this.state.guestJoinFormOpened})\n  }\n  \n  async onJoinedAsGuest(guest) {\n    this.props.registerEventHandlers(this.props.client)\n    await this.props.onJoinedAsGuest(guest)\n    await this.sendMessage();\n  }\n\n  _onTextMessageChanged = (textMessage) => {\n    if (textMessage) {\n      this._startTyping();\n    }\n\n    this._stopTyping();\n  }\n\n  _startTyping = () => {\n    const { conversation } = this.props;\n    if (conversation && conversation.type == \"private\") {\n      conversation.startTyping();\n    }\n  }\n\n  _stopTyping = () => {\n    const { conversation } = this.props;\n    if (conversation  && conversation.type == \"private\") {\n      conversation.stopTyping();\n    }\n  }\n\n  sendFile(file) {\n    const { client, conversation } = this.props;\n    const user = client.getCurrentUser();\n\n    let fileType = file.type.split('/').shift();\n\n    if(file.type.match('application')) {\n\n      const body = {\n        id: uuid(),\n        pending: true,\n        ownerId: user.id,\n        attachments: [{\n          type: fileType,\n          name: file.name\n        }],\n      }\n      \n      this.props.sendFileToConversation(client, conversation, file, body, fileType);\n      return;\n    }\n\n    this.getFileThumbnailUrl(file, (url) => {\n      const body = {\n        id: uuid(),\n        pending: true,\n        ownerId: user.id,\n        attachments: [{\n          type: fileType,\n          thumbnailUrl: url\n        }],\n      }\n\n      if(file.type.match('video')) {\n        body.attachments[0].fileUrl = URL.createObjectURL(file);\n      }\n      \n      this.props.sendFileToConversation(client, conversation, file, body, fileType);\n    });\n  }\n  \n  deleteMessagesForEveryone(msgId) {\n    if (!msgId) return;\n    const { client } = this.props;\n    this.props.deleteMessagesForEveryone(client, [msgId]);\n  }\n\n  deleteMessagesForMe(msgId) {\n    if (!msgId) return;\n    const { client } = this.props;\n    this.props.deleteMessagesForMe(client, [msgId]);\n  }\n\n  banConversationUsers(userId, displayName) {\n    if (!userId) return;\n    const { client, conversation } = this.props;\n    if (!conversation) {\n      return;\n    }\n    this.props.banConversationUsers(conversation, [userId], displayName);\n  }\n\n  unbanConversationUsers(userId) {\n    if (!userId) return;\n    const { client, conversation } = this.props;\n    if (!conversation) {\n      return;\n    }\n    this.props.unbanConversationUsers(conversation, [userId]);\n  }\n  \n  sendMessage() {\n    const { conversation, client, userId, allowGuestUsers } = this.props;\n\n    if (allowGuestUsers && client.isAnonymousUser()) {\n      return this.toggleGuestJoinForm();\n    }\n    \n    const user = client.getCurrentUser();\n    const { text } = this.state;\n\n    if (!text) return;\n\n    let body = {\n      id: uuid(),\n      body: text,\n      ownerId: user.id,\n      pending: true,\n    }\n    this.setState({text: ''})\n\n\n    if (conversation) {\n      this.props.sendMessageToConversation(conversation, body)\n    } else {\n      body.userId = userId;\n      this.props.sendMessageToUserId(client, body)\n    }\n  }\n\n  getFileThumbnailUrl(file, cb) {\n    var fileReader = new FileReader();\n    if (file.type.match('image')) {\n      fileReader.onload = function() {\n        var img = document.createElement('img');\n        cb(fileReader.result);\n      };\n      fileReader.readAsDataURL(file);\n    } else if(file.type.match('video')) {\n      fileReader.onload = function() {\n        var blob = new Blob([fileReader.result], {type: file.type});\n        var url = URL.createObjectURL(blob);\n        var video = document.createElement('video');\n        var timeupdate = function() {\n          if (snapImage()) {\n            video.removeEventListener('timeupdate', timeupdate);\n            video.pause();\n          }\n        };\n        video.addEventListener('loadeddata', function() {\n          if (snapImage()) {\n            video.removeEventListener('timeupdate', timeupdate);\n          }\n        });\n        var snapImage = function() {\n          var canvas = document.createElement('canvas');\n          canvas.width = video.videoWidth;\n          canvas.height = video.videoHeight;\n          canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n          var image = canvas.toDataURL();\n          var success = image.length > 100000;\n          if (success) {\n            var img = document.createElement('img');\n            img.src = image;\n            cb(image);\n            URL.revokeObjectURL(url);\n          }\n          return success;\n        };\n        video.addEventListener('timeupdate', timeupdate);\n        video.preload = 'metadata';\n        video.src = url;\n        // Load video in Safari / IE11\n        video.muted = true;\n        video.playsInline = true;\n        video.play();\n      };\n      fileReader.readAsArrayBuffer(file);\n    }\n  }\n\n  onCloseIconClick = () => {\n    this.props.setActiveConversation(null)\n\n    const { onCloseIconClick } = this.props;\n    if (onCloseIconClick && typeof onCloseIconClick == 'function') {\n      onCloseIconClick();\n    }\n  }\n\n  onScroll() {\n    const { messagelist, conversation, loadingMoreMessages, allMessagesLoaded } = this.props;\n    if (!conversation) {\n      return null\n    }\n\n    const chMessageBoxRef = this.chMessageBoxRef.current;\n    if (loadingMoreMessages || allMessagesLoaded || messagelist.length < this.limit) {\n      return\n    }\n\n    if(chMessageBoxRef.scrollTop < chMessageBoxRef.clientHeight) {\n      // Set skip\n      this.skip = messagelist.length;\n\n      let messageListQuery = conversation.createMessageListQuery();\n      messageListQuery.limit = this.limit;\n      messageListQuery.skip = this.skip;\n      this.props.loadMoreMessagesAction(messageListQuery)\n    }\n  }\n\n  blockUser() {\n\n  }\n\n  unblockUser() {\n\n  }\n\n  sendMedia(event) {\n    this.sendFile(event.target.files[0]);\n    event.target.value = null;\n  }\n\n  viewMediaToggle(message) {\n    let file = message ? message.attachments[0] : null\n    this.setState({openMediaFile: file});\n  }\n\n  render() {\n    let { \n      client,\n      connecting,\n      connected,\n      messageError,\n      messageLoading,\n      loadingMoreMessages,\n      messagelist,\n      conversation,\n      showCloseIcon,\n      showChevron,\n      disableComposer,\n      disableComposerMessage,\n      Message,\n      showHeader = true,\n      renderHeader,\n      showComposerActions = true,\n      typing,\n      noConversationFoundMessage,\n      allowGuestUsers,\n      banList,\n    } = this.props;\n\n    const { text, dummyConversation, activeTab } = this.state;\n\n    // Set dummy conversation if conversation doesn't exist\n    if (!conversation) {\n      conversation = dummyConversation\n      messagelist = [];\n    }\n\n    // Modify message list\n    messagelist = modifyMessageList(client, conversation, messagelist);\n\n    // Disable composer setting\n    let composerDisabled = false;\n    if (disableComposer && typeof disableComposer == 'function') {\n      composerDisabled = disableComposer(conversation)\n    }\n\n    // Set header details\n    let headerActionButton;\n    let headerTitle;\n    let headerImage;\n    let headerSubtitle;\n    let conversationAdmins = [];\n    let showTabs = false;\n\n    const user = client.getCurrentUser();\n\n    if (conversation) {\n      conversation = modifyConversation(conversation, user);\n      headerTitle = conversation.title;\n      headerImage = conversation.profileImageUrl;\n\n      if (!conversation.isGroup && conversation.user) {\n        headerSubtitle = conversation.user.isOnline ? 'Online' : 'Last Seen ' + moment(conversation.user.lastSeen).fromNow();\n      }\n\n      if (conversation.isGroup) {\n        headerSubtitle = conversation.memberCount + ' Members';\n      }\n\n      // Action buttons\n      if(!conversation.isActive) {\n        headerActionButton = <div id=\"ch_conv_unblock\" onClick={() => this.unblockUser()}>Unblock User</div>\n      } else {\n        headerActionButton = <div id=\"ch_conv_block\" onClick={() => this.blockUser()}>Block User</div>\n      }\n\n      if(conversation.ban && Object.keys(conversation.ban).length) {\n        composerDisabled = true;\n        disableComposerMessage = LANGUAGE_PHRASES.BAN_USER_MESSAGE\n      }\n\n      if(!allowGuestUsers && !conversation.canChat()) {\n        composerDisabled = true;\n        disableComposerMessage = LANGUAGE_PHRASES.NOT_ALLOWED_TO_CHAT\n      }\n\n      // Store conversation admins for easy comparision later\n      if (conversation.members && conversation.members.length) {\n        conversationAdmins = conversation.members\n        .filter(member => member.isAdmin === true)\n        .map(member => member.userId);\n      }\n\n      // Check show tabs in conversation window or not.\n      showTabs = connected && !messageLoading && conversation.isAdmin && conversation.type && [\"open\", \"public\"].includes(conversation.type);\n    }\n\n    const typingStrings = typingString(typing);\n\n    return (\n      <div id=\"ch_conv_window\" className=\"ch-conv-window\">\n        { conversation && showHeader && renderHeader && renderHeader(conversation) }\n        { conversation && showHeader && !renderHeader && <Header\n          imageSrc={headerImage}\n          imageInitials={headerTitle}\n          title={headerTitle}\n          subtitle={headerSubtitle}\n          showChevron={(showChevron && headerActionButton) ? true : false}\n          renderDropDownList={() => {\n            if (!headerActionButton) {\n              return\n            }\n\n            return (\n              <div className=\"ch-drop-down-list\">\n                {headerActionButton}\n              </div>\n            )\n          }}\n\n          renderRight={() => {\n            return (\n              <React.Fragment>\n                { showCloseIcon && <i title=\"Close\" className=\"material-icons\" onClick={this.onCloseIconClick}>close</i>}\n              </React.Fragment>\n            )\n          }}/>\n        }\n\n        { showTabs && \n          <div className=\"conversation-window-tabs\">\n            <button onClick={()=>this.handleTabChange('chat')} className={\"chat \" + (activeTab == 'chat' ? 'active' : '')}>Chat</button>\n            <button onClick={()=>this.handleTabChange('manage')} className={\"manage \" + (activeTab == 'manage' ? 'active' : '')}>Manage</button>\n          </div>\n        }\n        \n        <React.Fragment >\n          <div style={{display: (activeTab == 'chat') ? 'block' : 'none'}} id=\"ch_messages_box\" ref={this.chMessageBoxRef} className=\"ch-messages-box\" onScroll={this.onScroll}>\n            { <div className=\"ch-conversation-padding\"> </div>}\n           \n            { (connecting || messageLoading) &&  <div className=\"center\"><Loader /></div>}\n\n            { messageError && <div className=\"center error\">{messageError}</div>}\n\n            <div className=\"ch-msg-list\">\n              { connected && !conversation && !messageLoading && noConversationFoundMessage && <div className=\"center no-record-found\">{noConversationFoundMessage}</div>}\n\n              { loadingMoreMessages && <Loader />}\n\n              { conversation && !messagelist.length && !messageLoading && <div className=\"center no-record-found\">Be the first one to post a message!</div>}\n\n\n              {\n                messagelist.map(message => {\n                  return <Message \n                      key={message.id} \n                      message={message} \n                      isSentByAdmin={ conversationAdmins.includes(message.ownerId) }\n                      onClickEvent={()=>this.viewMediaToggle(message)}\n                      showMoreOptionsIcon={[\"open\"].includes(conversation.type) && !conversation.isAdmin ? false : true}\n                      renderMoreOptions={() => {\n                      return (\n                        <div className=\"ch-more-options-container\">\n                          { message.ownerId == user.id && !message.isDeleted && <p onClick={()=>this.deleteMessagesForEveryone(message.id)}>Delete for everyone</p>}\n                          { ![\"open\", \"public\"].includes(conversation.type) && <p onClick={()=>this.deleteMessagesForMe(message.id)}>Delete for me</p> }\n                          { \n                            message.ownerId != user.id &&\n                            conversation.isGroup && \n                            conversation.isAdmin && \n                            !banList.find(user => user.userId == message.ownerId) && \n                            <p onClick={()=> this.banConversationUsers(message.ownerId, message.owner.displayName)}>{LANGUAGE_PHRASES.BAN_USER}</p>\n                          }\n                          { \n                            message.ownerId != user.id &&\n                            conversation.isGroup && \n                            conversation.isAdmin && \n                            banList.find(user => user.userId == message.ownerId) && \n                            <p onClick={()=> this.unbanConversationUsers(message.ownerId)}>{LANGUAGE_PHRASES.UNBAN_USER}</p>\n                          }\n                        </div>\n                      )\n                      }}\n                    />\n                })\n              }\n\n              <div className=\"ch-typing-strings\">{typingStrings}</div>\n            </div>\n          </div>\n\n          { conversation &&\n            <div style={{display: (activeTab == 'chat') ? 'block' : 'none'}}>\n              { composerDisabled ?\n                <div className=\"ch-composer-disabled-box\">\n                  <div>{disableComposerMessage}</div>\n                </div>\n                :\n                <div id=\"ch_send_box\" className=\"ch-send-box\">\n\n                { showComposerActions &&\n                  <>\n                    <div className=\"ch-media-icon-box\">\n                      <i title={LANGUAGE_PHRASES.SHARE_GALLERY} className=\"material-icons ch-attachment-icon\">insert_photo</i>\n                      <input id=\"ch_gallary_input\" title={LANGUAGE_PHRASES.SHARE_GALLERY} className=\"ch-gallary-input\" type=\"file\" accept=\"image/*, video/*\" onChange={this.sendMedia} />\n                    </div>\n\n                    <div className=\"ch-media-icon-box\">\n                      <i title={LANGUAGE_PHRASES.SHARE_DOCUMENT} className=\"material-icons ch-attachment-icon\">description</i>\n                      <input id=\"ch_document_input\" title={LANGUAGE_PHRASES.SHARE_DOCUMENT} className=\"ch-document-input\" type=\"file\" accept=\"application/*,.doc,.docx,.xls,.ppt\" onChange={this.sendMedia} />\n                    </div>\n                  </>\n                }\n                  <textarea \n                    id=\"ch_input_box\"\n                    className=\"ch-input-box\"\n                    type=\"text\"\n                    placeholder={LANGUAGE_PHRASES.SEND_MESSAGE}\n                    value={text}\n                    onKeyPress={(e) => { this.handleKeyPress(e) }}\n                    onChange={(e) => { this.handleChange(e) }} \n                    ></textarea>\n\n                    <button\n                      id=\"ch_send_button\"\n                      className=\"ch-send-button\"\n                      title={LANGUAGE_PHRASES.SEND}\n                      onClick={this.sendMessage}\n                    >\n                      <i className=\"ch-send-icon material-icons\">send</i>\n                    </button>\n\n                </div>\n              }\n            </div>\n          }\n\n          { this.state.openMediaFile && <MediaLightBox file={this.state.openMediaFile} onCloseClick={()=> this.viewMediaToggle(null)} /> }\n\n          { this.state.guestJoinFormOpened && <GuestJoinForm onCloseClick={this.toggleGuestJoinForm} onJoinedAsGuest={this.onJoinedAsGuest} /> }\n        </React.Fragment>\n\n        <React.Fragment>\n          <div className=\"conversation-window-manage\" style={{display: (activeTab == 'manage') ? 'block' : 'none'}}>\n            { !banList.length && <div className=\"center no-record-found\">Currently, no user is banned from sending messages to this Show</div>}\n            <ul>\n              {\n                banList.map(user => {\n                  return (\n                    <SimpleList\n                      key={user.userId}\n                      title={user.user.displayName}\n                      action={() => {\n                        return (\n                          <React.Fragment>\n                            <span onClick={()=>this.unbanConversationUsers(user.userId)}>{LANGUAGE_PHRASES.UNBAN_USER}</span>\n                          </React.Fragment>\n                        )\n                      }}\n                    />\n                  );\n               })\n              }\n            </ul>\n          </div>\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nConversationWindow = withChannelizeContext(ConversationWindow);\n\nConversationWindow.propTypes = {\n  Message: PropTypes.elementType,\n}\n\nConversationWindow.defaultProps = {\n  Message: MessageSimple,\n  showHeader: true,\n  showComposerActions: true,\n  noConversationFoundMessage: LANGUAGE_PHRASES.NO_CONVERSATION_SELECTED, \n  allowGuestUsers: false\n};\n\nconst mapStateToProps = ({message, conversation, client}, ownProps) => {\n  return {...message, ...client, ownProps: ownProps}\n}\n\nConversationWindow = connect(\n  mapStateToProps,\n   {\n    getMessageList,\n    sendMessageToConversation,\n    sendMessageToUserId,\n    sendFileToConversation,\n    loadMoreMessagesAction,\n    setActiveConversation,\n    setActiveUserId,\n    registerConversationEventHandlers,\n    deleteMessagesForEveryone,\n    deleteMessagesForMe,\n    banConversationUsers,\n    unbanConversationUsers,\n    startWatchingAndSetActiveConversation,\n    stopWatchingAndSetNullConversation,\n    getConversationBanList,\n    registerEventHandlers\n   }\n)(ConversationWindow);\n\nexport { ConversationWindow }","import React, { Component } from 'react';\nimport { withChannelizeContext } from '../context';\nimport { dateSeparatorParser } from '../utils'\nimport { Avatar } from \"./Avatar\";\nimport { LANGUAGE_PHRASES } from \"../constants\";\nimport { OutsideClickHandler } from './OutsideClickHandler';\n\nclass MessageLivestream extends Component {\n\tconstructor(props) {\n  \tsuper(props);\n  \tthis.state = {\n  \t\tshowMoreOptions: false\n\t\t}\n\t}\n\n\ttoggleMoreOptions = () => {\n    this.setState((state) => ({\n  \t\tshowMoreOptions: !state.showMoreOptions\n    }));\n\t}\n\n\thideMoreOptions = () => {\n\t\tif (!this.state.showMoreOptions) return;\n\t\tthis.setState((state) => ({\n\t\t\tshowMoreOptions: false\n\t\t}));\n\t}\n\n\tshowImage(url) {\n\t\tvar link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\n\t}\n\n\tdownloadFile(url, name) {\n\t  var link = document.createElement(\"a\");\n\t  link.href = url;\n\t  link.target = \"_blank\";\n\t  link.download = name;\n\t  document.body.appendChild(link);\n\t  link.click();\n\t  document.body.removeChild(link);\n\t}\n\n\trender() {\n\t\tconst { client, message, isSentByAdmin, showMoreOptionsIcon, renderMoreOptions } = this.props;\n\n\t\tconst { showMoreOptions } = this.state;\n\n\t\t// Set class for user/owner message\n\t\tlet msgContainerPos = \"left\";  \n\n\t\tlet adminMsg = message.type === \"admin\" ? true : false;\n\t\tlet adminMessageType = null;\n\t\tif (adminMsg) {\n\t\t\tconst attachment = message.attachments.length ? message.attachments[0] : null;\n\t\t\tif (attachment) {\n\t\t\t\tadminMessageType = attachment.adminMessageType;\n\t\t\t}\n\t\t}\n\n\t\tlet fileMessage;\n\t\tif (message.attachments && message.attachments.length) {\n\t\t\tfileMessage = message.attachments.map(attachment => {\n\t\t\t\tswitch(attachment.type) {\n\t\t\t\tcase \"image\":\n\t\t\t\t\treturn <img className=\"ch-image-message\" src={attachment.thumbnailUrl ? attachment.thumbnailUrl : attachment.fileUr} onClick={()=>this.showImage(attachment.fileUrl)}/>\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"video\":\n\t\t\t\t\treturn (\n\t\t\t\t\t<div className=\"ch-video-container\">\n\t\t\t\t\t\t<img className=\"ch-image-message\" src={attachment.thumbnailUrl} onClick={()=>this.showImage(attachment.fileUrl)}/>\n\t\t\t\t\t\t<i className=\"material-icons ch-video-play-icon\">play_circle_outline</i>\n\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"application\":\n\t\t\t\t\treturn (\n\t\t\t\t\t<div className=\"ch-text-message\">\n\t\t\t\t\t\t<div className=\"ch-message-body\">\n\t\t\t\t\t\t\t<div className=\"ch-docs-data\">\n\t\t\t\t\t\t\t<i className=\"material-icons ch-attachment-icon\">description</i>\n\t\t\t\t\t\t\t<span className=\"ch-docs-name\">{attachment.name}</span>\n\t\t\t\t\t\t\t<i className=\"material-icons ch-docs-download-icon\" onClick={() =>this.downloadFile(attachment.fileUrl, attachment.name)}>arrow_downward</i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"ch-docs-details\">\n\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t<span>{attachment.extension}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ message.showDateSeparator && \n\t\t\t\t\t<div key={`${message.id}-date`} className=\"ch-msg-padding\">\n\t\t\t\t\t\t<div className=\"ch-message-date-separator\">\n\t\t\t\t\t\t\t<div className=\"message-date-separator_left\"></div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_text\">{dateSeparatorParser(message.createdAt)}</div>\n\t\t\t\t\t\t\t<div className=\"message-date-separator_right\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t{ adminMsg ?\n\t\t\t\t\t<div className={`ch-admin-msg-container ${message.type} ${adminMessageType}`}>\n\t\t\t\t\t\t<span className=\"ch-admin-msg\">{message.text}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t:\n\t\t\t\t\t<div key={message.id} className={`ch-msg-padding ${msgContainerPos}`}>\n\t\t\t\t\t\t<div className={`ch-msg-container ch-msg-container-livestream ${message.type}`}>\n\t\t\t\t\t\t\t<Avatar src={message.owner.profileImageUrl} initials={message.owner.displayName} className=\"ch-message-owner-avatar\"></Avatar>\n\t\t\t\t\t\t\t<div className={`ch-msg-content ch-msg-content__livestream`}>\n\t\t\t\t\t\t\t\t{ message.body && \n\t\t\t\t\t\t\t\t\t<div className={`ch-text-message`}>\n\t\t\t\t\t\t\t\t\t\t<div className=\"ch-message-owner-name\">{message.owner.displayName}\n\t\t\t\t\t\t\t\t\t\t\t{isSentByAdmin && <span> ({LANGUAGE_PHRASES.HOST})</span>}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{message.body}\n\t\t\t\t\t\t\t\t\t</div> \n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{fileMessage}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{showMoreOptionsIcon && \n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<div className=\"ch-msg-more-icon\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"material-icons\" onClick={()=>this.toggleMoreOptions()}>more_vert</i>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<OutsideClickHandler onOutsideClick={()=>this.hideMoreOptions()}>\n\t\t\t\t\t\t\t\t\t\t<div onClick={()=>this.toggleMoreOptions()}>\n\t\t\t\t\t\t\t\t\t\t\t{ showMoreOptions && renderMoreOptions && renderMoreOptions()}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</OutsideClickHandler>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nMessageLivestream = withChannelizeContext(MessageLivestream);\n\nexport { MessageLivestream };","import React, { PureComponent } from 'react';\nimport { Header } from \"./Header\";\nimport { Loader } from \"./Loader\";\nimport { connect } from 'react-redux';\nimport { LANGUAGE_PHRASES, IMAGES } from \"../constants\";\nimport { withChannelizeContext } from '../context';\nimport { \n  getFriendsList,\n  loadMoreFriends,\n  getMoreUsersList,\n  searchFriends as searchFriendsAction,\n  setActiveUserId,\n} from '../actions';\nimport debounce from 'lodash/debounce';\nimport { Avatar } from './Avatar';\n\nclass SearchWindow extends PureComponent {\n\n\tconstructor(props) {\n    super(props);\n    this.searchLimit = 10;\n    this.friendsLimit = 50;\n\n    this.state = {\n      searchText: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this._searchOnServer = debounce(this._searchOnServer, 800)\n  }\n\n  componentDidMount() {\n    const { connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    this._init();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { client, connected } = this.props;\n    if (!connected) {\n      return\n    }\n\n    if (!prevProps.connected && connected) {\n      this._init();\n    }\n  }\n\n  _init = () => {\n    const { client } = this.props;\n\n    // Load friends\n    let friendsListQuery = client.User.createUserListQuery();\n    friendsListQuery.limit = this.friendsLimit;\n    friendsListQuery.skip = 0;\n    friendsListQuery.sort = 'isOnline DESC, displayName ASC ';\n    this.props.getFriendsList(friendsListQuery);\n  }\n\n  handleChange(event) {\n    let inputValue = event.target.value;\n    this.setState({searchText: inputValue})\n\n    if (!inputValue) {\n      return\n    }\n    this._searchOnServer(inputValue);\n  }\n\n  _searchOnServer = (value) => {\n    const { client } = this.props;\n\n    // search friends\n    let friendsListQuery = client.User.createUserListQuery();\n    friendsListQuery.limit = this.searchLimit;\n    friendsListQuery.skip = 0;\n    friendsListQuery.search = value;\n    friendsListQuery.sort = 'isOnline DESC, displayName ASC';\n    this.props.searchFriendsAction(friendsListQuery);\n\n    // Load more users\n    let moreUsersListQuery = client.User.createUserListQuery();\n    moreUsersListQuery.limit = this.searchLimit;\n    moreUsersListQuery.skip = 0;\n    moreUsersListQuery.search = value;\n    moreUsersListQuery.sort = 'isOnline DESC, displayName ASC';\n    this.props.getMoreUsersList(moreUsersListQuery);\n  }\n\n  clearSearch = () => {\n    this.setState({searchText: ''})\n  }\n\n  onContactClick = (userId) => {\n    const { onContactClick } = this.props;\n    this.props.setActiveUserId(userId)\n\n    if (onContactClick && typeof onContactClick == 'function') {\n      onContactClick(userId)\n    }\n  }\n\n  render() {\n    let {\n      connecting, \n      connected,\n      loadingFriendsList,\n      loadingSearchFriends,\n      friendslist,\n      moreUsersList,\n      searchFriends,\n      showArrowBack,\n      onBack\n    } = this.props;\n    const { searchText } = this.state;\n\n    let list = friendslist;\n    if (searchText) {\n      list = searchFriends;\n    } else {\n      moreUsersList = [];\n    }\n\n    const showMoreUsers = moreUsersList.length ? true : false;\n\n  \treturn (\n      <div id=\"ch_search_window\" className=\"ch-search-window\">\n        <Header\n          showArrowBack={showArrowBack}\n          onBack={onBack}\n          title={LANGUAGE_PHRASES.SEARCH} \n        />\n\n        <div id=\"ch_search_box\" className=\"ch-search-box\">\n          <input placeholder=\"Search\" id=\"ch_search_input_box\" className=\"ch-search-input-box\" value={searchText} onChange={this.handleChange} />\n          { searchText && <i id=\"ch_clear_search_icon\" className=\"material-icons ch-clear-search-icon\" onClick={this.clearSearch}>close</i>}\n        </div>\n\n        <div id=\"ch_friends_box\" className=\"ch-friends-box\">\n          { (connecting || loadingFriendsList) && <div className=\"center\"><Loader /></div>}\n\n          { loadingSearchFriends && <div><Loader /></div>}\n\n          { connected && searchText && !list.length && !showMoreUsers && !loadingFriendsList && !loadingSearchFriends && <div className=\"center no-record-found\">No Record Found</div>}\n\n          <div id=\"ch_suggested_box\">\n            { !searchText && !loadingFriendsList && <div id=\"ch_suggested\" className=\"ch-suggested\">{LANGUAGE_PHRASES.SUGGESTED}</div>}\n\n            {list.map(friend => {\n              return (\n                <li key={friend.id} id={friend.id} className=\"ch-friends-list\" onClick={() => this.onContactClick(friend.id)}>\n                  <Avatar \n                    src={friend.profileImageUrl}\n                    initials={friend.displayName} \n                    className=\"ch-contact-img\" \n                  >\n                    {friend.isOnline && <span className=\"ch-online-icon ch-show-element\"></span>}\n                  </Avatar>\n                  <div id=\"ch_friend_name\" className=\"ch-friend-name\">{friend.displayName}</div>\n                </li>\n              )})\n            }\n          </div>\n\n          { showMoreUsers &&\n            <div id=\"ch_users_box\">\n              <div id=\"ch_more_users\" className=\"ch-more-users\">{LANGUAGE_PHRASES.MORE_USERS}</div>\n              { moreUsersList.map((user) => {\n                return (\n                  <li key={user.id} id={user.id} className=\"ch-friends-list\" onClick={() => this.onContactClick(user.id)}>\n                    <Avatar \n                      src={user.profileImageUrl}\n                      initials={user.displayName} \n                      className=\"ch-contact-img\"\n                      >\n                        {user.isOnline && <span className=\"ch-online-icon ch-show-element\"></span>}\n                      </Avatar>\n                    <div id=\"ch_friend_name\" className=\"ch-friend-name\">{user.displayName}</div>\n                  </li>\n                )})\n              }\n            </div>\n          }\n        </div>\n      </div>\n\t\t);\n  }\n}\n\nSearchWindow = withChannelizeContext(SearchWindow);\n\nconst mapStateToProps = ({user, client}) => {\n  return {...user, ...client}\n}\n\nSearchWindow = connect(\n  mapStateToProps,\n  { \n  getFriendsList,\n  loadMoreFriends ,\n  getMoreUsersList,\n  searchFriendsAction,\n  setActiveUserId }\n)(SearchWindow)\n\nexport { SearchWindow };","import { \n  LOADING_FRIENDS_LIST,\n  FRIENDS_LIST_FAIL,\n  FRIENDS_LIST_SUCCESS,\n  LOADING_LOAD_MORE_FRIENDS,\n  LOAD_MORE_FRIENDS_SUCCESS,\n  LOAD_MORE_FRIENDS_FAIL,\n  LOADING_MORE_USERS_LIST,\n  MORE_USERS_LIST_FAIL,\n  MORE_USERS_LIST_SUCCESS,\n  LOADING_SEARCH_FRIENDS,\n  SEARCH_FRIENDS_SUCCESS,\n  SEARCH_FRIENDS_FAIL\n} from '../constants';\n\nexport const getFriendsList = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_FRIENDS_LIST,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: FRIENDS_LIST_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: FRIENDS_LIST_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};\n\nexport const loadMoreFriends = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_LOAD_MORE_FRIENDS,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: LOAD_MORE_FRIENDS_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: LOAD_MORE_FRIENDS_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};\n\nexport const getMoreUsersList = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_MORE_USERS_LIST,\n      payload: {}\n    });\n    return userListQuery.usersList((err, response) => {\n      if (err) {\n        dispatch({\n          type: MORE_USERS_LIST_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: MORE_USERS_LIST_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};\n\nexport const searchFriends = (userListQuery) => {\n  return dispatch => {\n    dispatch({\n      type: LOADING_SEARCH_FRIENDS,\n      payload: {}\n    });\n    return userListQuery.friendsList((err, response) => {\n      if (err) {\n        dispatch({\n          type: SEARCH_FRIENDS_FAIL,\n          payload: err\n        });\n        return;\n      }\n      dispatch({\n        type: SEARCH_FRIENDS_SUCCESS,\n        payload: response\n      });\n      return;\n    })\n  };\n};","import {\n  CONNECTING,\n  CONNECT_SUCCESS,\n  CONNECT_FAIL,\n  DISCONNECT_SUCCESS,\n  DISCONNECT_FAIL\n} from '../constants';\n\nconst INITIAL_STATE = {\n  connecting: false,\n  connected: false,\n  error: null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CONNECTING:\n      return { ...state, connecting: true };\n\n    case CONNECT_SUCCESS:\n\t    return { ...state, connected: true , connecting: false};\n\n\t  case CONNECT_FAIL:\n\t    return { ...state, connected: false, error: action.payload, connecting: false };\n\n  \tcase DISCONNECT_SUCCESS:\n  \t  return { ...state, connected: false };\n\n  \tcase DISCONNECT_FAIL:\n  \t  return { ...state, connected: true, error: action.payload };\n    \n    default:\n      return state;\n  }\n};\n","import {\n  LOADING_CONVERSATION_LIST,\n  CONVERSATION_LIST_FAIL,\n  CONVERSATION_LIST_SUCCESS,\n  LOADING_LOAD_MORE_CONVERSATIONS,\n  LOAD_MORE_CONVERSATIONS_FAIL,\n  LOAD_MORE_CONVERSATIONS_SUCCESS,\n  USER_STATUS_UPDATED_EVENT,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  USER_JOINED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  CONVERSATION_UPDATED_EVENT,\n  USER_UPDATED_EVENT,\n  MARK_AS_READ_EVENT,\n  DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n  DELETE_MESSAGE_EVENT,\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\n\nconst INITIAL_STATE = {\n  conversationlist: [],\n  conversationLoading: false,\n  loadingMoreConversations: false,\n  allConversationsLoaded: false,\n  conversationError: null,\n\n};\n\nexport const loadingConversationList = (state, action) => {\n  state.conversationLoading = true;\n};\n\nexport const listConversationSuccess = (state, action) => {\n  state.conversationLoading = false;\n  state.conversationlist = action.payload;\n};\n\nexport const listConversationFail = (state, action) => {\n  state.conversationLoading = false;\n  state.conversationError = action.payload;\n};\n\nexport const loadingLoadMoreConversations = (state, action) => {\n  state.loadingMoreConversations = true;\n};\n\nexport const loadMoreConversationsSuccess = (state, action) => {\n  state.loadingMoreConversations = false;\n  if (!action.payload.length) {\n    state.allConversationsLoaded = true;\n  } else {\n    state.conversationlist = [...state.conversationlist, ...action.payload];\n    state.conversationlist = uniqueList(state.conversationlist);\n  }\n};\n\nexport const loadMoreConversationsFail = (state, action) => {\n  state.loadingMoreConversations = false;\n  state.conversationError = action.payload;\n};\n\nexport const userStatusUpdated = (state, action) => {\n  let user = action.payload.user;\n  const finalList = state.conversationlist.map((conversation, index) => {\n    if (!conversation.isGroup && conversation.user.id == user.id) {\n      conversation.user.isOnline = user.isOnline;\n      conversation.user.lastSeen = user.lastSeen;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  state.conversationlist = finalList;\n};\n\nexport const userUpdated = (state, action) => {\n  let user = action.payload.user;\n  const finalList = state.conversationlist.map((conversation, index) => {\n    if (!conversation.isGroup && conversation.user.id == user.id) {\n      conversation.user.isOnline = user.isOnline;\n      conversation.user.lastSeen = user.lastSeen;\n      conversation.user.displayName = user.displayName;\n      conversation.user.profileImageUrl = user.profileImageUrl;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  state.conversationlist = finalList;\n};\n\nexport const newMessageReceived = (state, action) => {\n  let message = action.payload.message;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.conversationlist.map((conversation, index) => {\n    if (conversation.id == message.conversationId) {\n      conversation.lastMessage = message;\n      conversation.updatedAt = action.payload.timestamp;\n\n      conversationIndex = index;\n      latestConversation = conversation;\n\n      return conversation;\n    } else {\n      return conversation;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.conversationlist = finalList;\n};\n\nexport const deleteMessagesForEveryoneEvent = (state, action) => {\n  let messages = action.payload.messages;\n  const finalList = state.conversationlist.map((conversation) => {\n    if (conversation.id == action.payload.conversation.id && conversation.lastMessage) {\n      let deletedMessageIds = messages.map(msg => msg.id);\n      if (deletedMessageIds.includes(conversation.lastMessage.id)) {\n        conversation.lastMessage.isDeleted = true;\n        conversation.lastMessage.body = \"\";\n        conversation.lastMessage.attachments = [];\n        conversation.updatedAt = action.payload.timestamp;\n        return conversation;\n      } else {\n        return conversation;\n      }\n    } else {\n      return conversation;\n    }\n  });\n  \n  state.conversationlist = finalList;\n};\n\nexport const deleteMessageEvent = (state, action) => {\n  let messages = action.payload.messages;\n  state.conversationlist.map((conversation, index) => {\n    if (conversation.id != action.payload.conversation.id || !conversation.lastMessage) {\n      return;\n    }\n    let deletedMessageIds = messages.map(msg => msg.id);\n    if (!deletedMessageIds.includes(conversation.lastMessage.id)) {\n      return;\n    }\n    state.conversationlist[index] = action.payload.conversation;\n  });\n};\n\nexport const conversationUpdated = (state, action) => {\n  let conversation = action.payload.conversation;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.conversationlist.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.title = conversation.title;\n      item.profileImageUrl = conversation.profileImageUrl;\n      item.updatedAt = action.payload.timestamp;\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.conversationlist = finalList;\n};\n\nexport const userJoined = (state, action) => {\n  const { conversation } = action.payload;\n  state.conversationlist = [...[conversation], ...state.conversationlist];\n  state.conversationlist = uniqueList(state.conversationlist);\n};\n\nexport const membersAdded = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.conversationlist.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.memberCount = conversation.memberCount;\n      item.updatedAt = timestamp;\n      item.members = item.members.concat(members)\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.conversationlist = finalList;\n};\n\nexport const membersRemoved = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n\n  let conversationIndex;\n  let latestConversation;\n\n  const finalList = state.conversationlist.map((item, index) => {\n    if (item.id == conversation.id) {\n      item.memberCount = conversation.memberCount;\n      item.updatedAt = timestamp;\n\n      // Remove members\n      members.forEach(removedMember => {\n        const index = item.members.findIndex(member => member.userId == removedMember.id)\n        if (index >=0) {\n          item.members.splice(index, 1);\n        }\n      })\n\n      conversationIndex = index;\n      latestConversation = item;\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  // Move up the latest conversation\n  if (conversationIndex > 0) {\n    finalList.splice(conversationIndex, 1);\n    finalList.unshift(latestConversation);\n  }\n\n  state.conversationlist = finalList;\n};\n\nexport const markAsRead = (state, action) => {\n  let { conversation, user, timestamp } = action.payload;\n\n  const finalList = state.conversationlist.map((item, index) => {\n    if (item.id == conversation.id) {\n      if (item.lastReadAt[user.id]) {\n        item.lastReadAt[user.id] = timestamp;\n      }\n\n      return item;\n    } else {\n      return item;\n    }\n  })\n\n  state.conversationlist = finalList;\n}\n\nexport const handlers = {\n  [LOADING_CONVERSATION_LIST]: loadingConversationList,\n  [CONVERSATION_LIST_FAIL]: listConversationFail,\n  [CONVERSATION_LIST_SUCCESS]: listConversationSuccess,\n  [LOADING_LOAD_MORE_CONVERSATIONS]: loadingLoadMoreConversations,\n  [LOAD_MORE_CONVERSATIONS_FAIL]: loadMoreConversationsFail,\n  [LOAD_MORE_CONVERSATIONS_SUCCESS]: loadMoreConversationsSuccess,\n  [USER_STATUS_UPDATED_EVENT]: userStatusUpdated,\n  [NEW_MESSAGE_RECEIVED_EVENT]: newMessageReceived,\n  [USER_JOINED_EVENT]: userJoined,\n  [MEMBERS_ADDED_EVENT]: membersAdded,\n  [MEMBERS_REMOVED_EVENT]: membersRemoved,\n  [CONVERSATION_UPDATED_EVENT]: conversationUpdated,\n  [USER_UPDATED_EVENT]: userUpdated,\n  [MARK_AS_READ_EVENT]: markAsRead,\n  [DELETE_MESSAGE_FOR_EVERYONE_EVENT]: deleteMessagesForEveryoneEvent,\n  [DELETE_MESSAGE_EVENT]: deleteMessageEvent,\n\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { \n  LOADING_MESSAGE_LIST,\n  MESSAGE_LIST_FAIL,\n  MESSAGE_LIST_SUCCESS,\n  SENDING_MESSAGE,\n  SEND_MESSAGE_FAIL,\n  SEND_MESSAGE_SUCCESS,\n  SENDING_FILE,\n  SEND_FILE_FAIL,\n  SEND_FILE_SUCCESS,\n  LOADING_LOAD_MORE_MESSAGES,\n  LOAD_MORE_MESSAGES_SUCCESS,\n  LOAD_MORE_MESSAGES_FAIL,\n  SET_ACTIVE_CONVERSATION,\n  SET_ACTIVE_USERID,\n  CONVERSATION_UPDATED_EVENT,\n  MEMBERS_ADDED_EVENT,\n  MEMBERS_REMOVED_EVENT,\n  NEW_MESSAGE_RECEIVED_EVENT,\n  USER_STATUS_UPDATED_EVENT,\n  USER_UPDATED_EVENT,\n  MARK_AS_READ_EVENT,\n  TYPING_EVENT,\n  DELETE_MESSAGE_EVENT,\n  DELETE_MESSAGE_FOR_EVERYONE_EVENT,\n  DELETING_MESSAGES_FOR_EVERYONE,\n  DELETE_MESSAGES_FOR_EVERYONE_FAIL,\n  DELETE_MESSAGES_FOR_EVERYONE_SUCCESS,\n  DELETING_MESSAGES_FOR_ME,\n  DELETE_MESSAGES_FOR_ME_FAIL,\n  DELETE_MESSAGES_FOR_ME_SUCCESS,\n  START_WATCHING_PROGRESS,\n  START_WATCHING_FAIL,\n  START_WATCHING_SUCCESS,\n  STOP_WATCHING_PROGRESS,\n  STOP_WATCHING_FAIL,\n  STOP_WATCHING_SUCCESS,\n  CONVERSATION_BAN_UPDATED_EVENT,\n  CONVERSATION_BAN_LIST_SUCCESS,\n  BAN_CONVERSATION_USERS_SUCCESS,\n  UNBAN_CONVERSATION_USERS_SUCCESS,\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\n\nconst Channelize = window.Channelize;\n\nconst INITIAL_STATE = {\n  messagelist: [],\n  messageLoading: false,\n  messageError: null,\n  loadingMoreMessages: false,\n  allMessagesLoaded: false,\n  sendingMessage: false,\n\n  //typing event\n  typing: [],\n\n  // Active conversation and userId\n  conversation: null,\n  userId: null,\n\n  newMessage: null,\n  sendingFile: false,\n\n  // Conversation ban user list\n  banList: [],\n};\n\nexport const loadingMessageList = (state, action) => {\n  state.messageLoading = true;\n  state.messagelist = [];\n  state.allMessagesLoaded = false;\n};\n\nexport const messageListSuccess = (state, action) => {\n  state.messageLoading = false;\n  state.messagelist = action.payload;\n};\n\nexport const messageListFail = (state, action) => {\n  state.messageLoading = false;\n  state.messageError = action.payload;\n};\n\nexport const loadingLoadMoreMessages = (state, action) => {\n  state.loadingMoreMessages = true;\n};\n\nexport const loadMoreMessagesFail = (state, action) => {\n  state.loadingMoreMessages = false;\n  state.messageError = action.payload;\n};\n\nexport const loadMoreMessagesSuccess = (state, action) => {\n  state.loadingMoreMessages = false;\n  if (!action.payload.length) {\n    state.allMessagesLoaded = true;\n  } else {\n    state.messagelist = [...action.payload, ...state.messagelist];\n    state.messagelist = uniqueList(state.messagelist);\n  }\n};\n\nexport const sendingMessage = (state, action) => {\n  state.sendingMessage = true;\n  action.payload.status = \"pending\";\n  state.messagelist = [...state.messagelist, ...[action.payload]];\n  state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const sendMessageSuccess = (state, action) => {\n  state.sendingMessage = false;\n  state.messagelist = [...state.messagelist, ...[action.payload]];\n  state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const sendMessageFail = (state, action) => {\n  action.payload.status = \"failed\";\n  // state.messagelist = [...state.messagelist, ...[action.payload]];\n  // state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const sendingFile = (state, action) => {\n  state.sendingFile = true;\n  state.messagelist = [...state.messagelist, ...[action.payload]];\n  state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const sendFileSuccess = (state, action) => {\n  state.sendingFile = false;\n  state.messagelist = [...state.messagelist, ...[action.payload]];\n  state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const sendFileFail = (state, action) => {\n  state.sendingFile = false;\n  // state.messagelist = [...[action.payload], ...state.messagelist];\n  // state.messagelist = uniqueList(state.messagelist);\n};\n\nexport const setActiveConversation = (state, action) => {\n  state.conversation = action.payload;\n  state.userId = null;\n};\n\nexport const setActiveUserId = (state, action) => {\n  state.userId = action.payload;\n  state.conversation = null;\n};\n\nexport const newMessageReceived = (state, action) => {\n  let message = action.payload.message;\n  if (state.conversation && state.conversation.id == message.conversationId) {\n    state.messagelist = [...state.messagelist, ...[message]];\n    state.messagelist = uniqueList(state.messagelist);\n\n    state.newMessage = message;\n  }\n};\n\nexport const deleteMessagesForEveryoneEvent = (state, action) => {\n  let conversation = action.payload.conversation;\n  let messages = action.payload.messages;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let deletedMessageIds = messages.map(msg => msg.id);\n    const finalList = state.messagelist.map(msg => {\n      if (deletedMessageIds.includes(msg.id)) {\n        msg.isDeleted = true;\n        msg.body = \"\";\n        msg.attachments = [];\n        return msg;\n      } else {\n        return msg;\n      }\n    });\n    state.messagelist = finalList;\n  }\n};\n\nexport const deleteMessageEvent = (state, action) => {\n  let conversation = action.payload.conversation;\n  let messages = action.payload.messages;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let deletedMessageIds = messages.map(msg => msg.id);\n    state.messagelist = [...state.messagelist.filter(msg => !deletedMessageIds.includes(msg.id))];\n  }\n};\n\nexport const deleteMessagesForEveryoneSuccess = (state, action) => {\n  const deletedMessageIds = action.payload;\n  const finalList = state.messagelist.map(msg => {\n    if (deletedMessageIds.includes(msg.id)) {\n      msg.isDeleted = true;\n      msg.body = \"\";\n      msg.attachments = [];\n      return msg;\n    } else {\n      return msg;\n    }\n  });\n  state.messagelist = finalList;\n};\n\nexport const deleteMessageForMeSuccess = (state, action) => {\n  const deletedMessageIds = action.payload;\n  state.messagelist = [...state.messagelist.filter(msg => !deletedMessageIds.includes(msg.id))];\n};\n\nexport const conversationUpdated = (state, action) => {\n  let { id, title, profileImageUrl } = action.payload.conversation;\n  if (state.conversation && state.conversation.id == id) {\n    const jsonConversaton = state.conversation.toJSON();\n    let conversation = {...jsonConversaton, title, profileImageUrl, updatedAt: action.payload.timestamp};\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, conversation);\n  }\n};\n\nexport const membersAdded = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.members = jsonConversaton.members.concat(members)\n    jsonConversaton.memberCount = conversation.memberCount;\n    jsonConversaton.updatedAt = timestamp;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const membersRemoved = (state, action) => {\n  let { conversation, members, timestamp } = action.payload;\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.memberCount = conversation.memberCount;\n    jsonConversaton.updatedAt = timestamp;\n\n    // Remove members\n    members.forEach(removedMember => {\n      const index = jsonConversaton.members.findIndex(member => member.userId == removedMember.id)\n      if (index >=0) {\n        jsonConversaton.members.splice(index, 1);\n      }\n    })\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const userStatusUpdated = (state, action) => {\n  const user = action.payload.user;\n  if (state.conversation && !state.conversation.isGroup && state.conversation.user.id == user.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.user.isOnline = user.isOnline;\n    jsonConversaton.user.lastSeen = user.lastSeen;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n};\n\nexport const userUpdated = (state, action) => {\n  const user = action.payload.user;\n  if (state.conversation && !state.conversation.isGroup && state.conversation.user.id == user.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    jsonConversaton.user.isOnline = user.isOnline;\n    jsonConversaton.user.lastSeen = user.lastSeen;\n    jsonConversaton.user.displayName = user.displayName;\n    jsonConversaton.user.profileImageUrl = user.profileImageUrl;\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n};\n\nexport const markAsRead = (state, action) => {\n  let { conversation, user, timestamp } = action.payload;\n\n  if (state.conversation && state.conversation.id == conversation.id) {\n    let jsonConversaton = state.conversation.toJSON();\n    if (jsonConversaton.lastReadAt[user.id]) {\n      jsonConversaton.lastReadAt[user.id] = timestamp;\n    }\n\n    //Convert in conversation model\n    const client = Channelize.core.Client.getInstance();\n    state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n  }\n}\n\nexport const typingEvent = (state, action) => {\n  const { conversation, isTyping, user} = action.payload;\n  const activeConversation = state.conversation;\n  if (!activeConversation || activeConversation.id != conversation.id) {\n    return\n  }\n\n  const index = state.typing.findIndex(item => item.id == user.id);\n  // If isTyping true, push user in  typing array\n  if (isTyping && index < 0) {\n    state.typing.push(user);\n    return\n  }\n\n  // If isTyping false, remove user from typing array\n  if (!isTyping && index >= 0) {\n    state.typing.splice(index, 1);\n  }\n};\n\nexport const startWatchingProgress = (state, action) => {\n  state.messageLoading = true;\n}\n\nexport const startWatchingFail = (state, action) => {\n  state.messageLoading = false;\n  state.messageError = action.payload;\n}\n\nexport const startWatchingSuccess = (state, action) => {\n  state.messageLoading = false;\n}\n\nexport const stopWatchingProgress = (state, action) => {\n  state.messageLoading = true;\n}\n\nexport const stopWatchingFail = (state, action) => {\n  state.messageLoading = false;\n  state.messageError = action.payload;\n}\n\nexport const stopWatchingSuccess = (state, action) => {\n  state.messageLoading = false;\n}\n\nexport const conversationBanUpdatedEvent = (state, action) => {\n  const { ban } = action.payload;\n  const client = Channelize.core.Client.getInstance();\n\n  const jsonConversaton = state.conversation.toJSON();;\n  jsonConversaton.ban = ban\n  \n  state.conversation = new Channelize.core.Conversation.Model(client, jsonConversaton);\n}\n\nexport const conversationBanListSuccess = (state, action) => {\n  state.banList = action.payload;\n}\n\nexport const banConversationUserSuccess = (state, action) => {\n  const { conversation, userIds, displayName } = action.payload;\n\n  const banUserList = userIds.map(userId => {\n    return {userId, user: {displayName}};\n  });\n\n  const finalList = [...state.banList, ...banUserList];\n  state.banList = finalList;\n}\n\nexport const unbanConversationUserSuccess = (state, action) => {\n  const { conversation, userIds } = action.payload;\n\n  const finalList = state.banList.filter(user => !userIds.includes(user.userId));\n  state.banList = finalList;\n}\n\nexport const handlers = {\n  [LOADING_MESSAGE_LIST]: loadingMessageList,\n  [MESSAGE_LIST_SUCCESS]: messageListSuccess,\n  [MESSAGE_LIST_FAIL]: messageListFail,\n  [SENDING_MESSAGE]: sendingMessage,\n  [SEND_MESSAGE_SUCCESS]: sendMessageSuccess,\n  [SEND_MESSAGE_FAIL]: sendMessageFail,\n  [SENDING_FILE]: sendingFile,\n  [SEND_FILE_FAIL]: sendFileFail,\n  [SEND_FILE_SUCCESS]: sendFileSuccess,\n  [LOADING_LOAD_MORE_MESSAGES]: loadingLoadMoreMessages,\n  [LOAD_MORE_MESSAGES_SUCCESS]: loadMoreMessagesSuccess,\n  [LOAD_MORE_MESSAGES_FAIL]: loadMoreMessagesFail,\n  [SET_ACTIVE_CONVERSATION]: setActiveConversation,\n  [SET_ACTIVE_USERID]: setActiveUserId,\n  [CONVERSATION_UPDATED_EVENT]: conversationUpdated,\n  [MEMBERS_ADDED_EVENT]: membersAdded,\n  [MEMBERS_REMOVED_EVENT]: membersRemoved,\n  [NEW_MESSAGE_RECEIVED_EVENT]: newMessageReceived,\n  [USER_STATUS_UPDATED_EVENT]: userStatusUpdated,\n  [USER_UPDATED_EVENT]: userUpdated,\n  [MARK_AS_READ_EVENT]: markAsRead,\n  [TYPING_EVENT]: typingEvent,\n  [DELETE_MESSAGE_FOR_EVERYONE_EVENT]: deleteMessagesForEveryoneEvent,\n  [DELETE_MESSAGE_EVENT]: deleteMessageEvent,\n  [DELETE_MESSAGES_FOR_EVERYONE_SUCCESS]: deleteMessagesForEveryoneSuccess,\n  [DELETE_MESSAGES_FOR_ME_SUCCESS]: deleteMessageForMeSuccess,\n  [START_WATCHING_PROGRESS]: startWatchingProgress,\n  [START_WATCHING_FAIL]: startWatchingFail,\n  [START_WATCHING_SUCCESS]: startWatchingSuccess,\n  [STOP_WATCHING_PROGRESS]: stopWatchingProgress,\n  [STOP_WATCHING_FAIL]: stopWatchingFail,\n  [STOP_WATCHING_SUCCESS]: stopWatchingSuccess,\n  [CONVERSATION_BAN_UPDATED_EVENT]: conversationBanUpdatedEvent,\n  [CONVERSATION_BAN_LIST_SUCCESS]: conversationBanListSuccess,\n  [BAN_CONVERSATION_USERS_SUCCESS]: banConversationUserSuccess,\n  [UNBAN_CONVERSATION_USERS_SUCCESS]: unbanConversationUserSuccess,\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { \n  LOADING_FRIENDS_LIST,\n  FRIENDS_LIST_FAIL,\n  FRIENDS_LIST_SUCCESS,\n  LOADING_LOAD_MORE_FRIENDS,\n  LOAD_MORE_FRIENDS_SUCCESS,\n  LOAD_MORE_FRIENDS_FAIL,\n  LOADING_MORE_USERS_LIST,\n  MORE_USERS_LIST_FAIL,\n  MORE_USERS_LIST_SUCCESS,\n  LOADING_SEARCH_FRIENDS,\n  SEARCH_FRIENDS_SUCCESS,\n  SEARCH_FRIENDS_FAIL\n} from '../constants';\nimport { createReducer, uniqueList } from '../utils';\n\nconst INITIAL_STATE = {\n  friendslist: [],\n  loadingFriendsList: false,\n  error: null,\n  loadingMoreFriends: false,\n  allFriendsLoaded: false,\n\n  moreUsersList: [],\n  loadingMoreUsersList: false,\n\n  searchFriends: [],\n  loadingSearchFriends: false\n};\n\nexport const loadingFriendsList = (state, action) => {\n  state.loadingFriendsList = true;\n  state.allFriendsLoaded = false;\n  state.friendslist= [];\n};\n\nexport const friendsListSuccess = (state, action) => {\n  state.loadingFriendsList = false;\n  state.friendslist = action.payload;\n};\n\nexport const friendsListFail = (state, action) => {\n  state.loadingFriendsList = false;\n  state.error = action.payload;\n};\n\nexport const loadingLoadMoreFriends = (state, action) => {\n  state.loadingMoreFriends = true;\n};\n\nexport const loadMoreFriendsFail = (state, action) => {\n  state.loadingMoreFriends = false;\n  state.error = action.payload;\n};\n\nexport const loadMoreFriendsSuccess = (state, action) => {\n  state.loadingMoreFriends = false;\n  if (!action.payload.length) {\n    state.allFriendsLoaded = true;\n  } else {\n    state.friendslist = [...state.friendslist, ...action.payload];\n    state.friendslist = uniqueList(state.friendslist);\n  }\n};\n\nexport const loadingMoreUsersList = (state, action) => {\n  state.loadingMoreUsersList = true;\n  state.moreUsersList = [];\n};\n\nexport const moreUsersListSuccess = (state, action) => {\n  state.loadingMoreUsersList = false;\n  state.moreUsersList = action.payload;\n};\n\nexport const moreUsersListFail = (state, action) => {\n  state.loadingMoreUsersList = false;\n  state.error = action.payload;\n};\n\nexport const loadingSearchFriends = (state, action) => {\n  state.loadingSearchFriends = true;\n  state.searchFriends = [];\n};\n\nexport const searchFriendsSuccess = (state, action) => {\n  state.loadingSearchFriends = false;\n  state.searchFriends = action.payload;\n};\n\nexport const searchFriendsFail = (state, action) => {\n  state.loadingSearchFriends = false;\n  state.error = action.payload;\n};\n\nexport const handlers = {\n  [LOADING_FRIENDS_LIST]: loadingFriendsList,\n  [FRIENDS_LIST_SUCCESS]: friendsListSuccess,\n  [FRIENDS_LIST_FAIL]: friendsListFail,\n  [LOADING_LOAD_MORE_FRIENDS]: loadingLoadMoreFriends,\n  [LOAD_MORE_FRIENDS_SUCCESS]: loadMoreFriendsSuccess,\n  [LOAD_MORE_FRIENDS_FAIL]: loadMoreFriendsFail,\n  [LOADING_MORE_USERS_LIST]: loadingMoreUsersList,\n  [MORE_USERS_LIST_SUCCESS]: moreUsersListSuccess,\n  [MORE_USERS_LIST_FAIL]: moreUsersListFail,\n  [LOADING_SEARCH_FRIENDS]: loadingSearchFriends,\n  [SEARCH_FRIENDS_SUCCESS]: searchFriendsSuccess,\n  [SEARCH_FRIENDS_FAIL]: searchFriendsFail,\n};\n\nexport default createReducer(INITIAL_STATE, handlers);","import { combineReducers } from 'redux';\nimport clientReducer from './clientReducer';\nimport conversationReducer from './conversationReducer';\nimport messageReducer from './messageReducer';\nimport userReducer from './userReducer';\n\nexport { default as clientReducer } from './clientReducer';\nexport { default as conversationReducer } from './conversationReducer';\nexport { default as messageReducer } from './messageReducer';\nexport { default as userReducer } from './userReducer';\n\nexport default combineReducers({\n  client: clientReducer,\n  conversation: conversationReducer,\n  message: messageReducer,\n  user: userReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger';\nimport { composeWithDevTools } from 'remote-redux-devtools';\n\nimport rootReducer from '../reducers';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n  thunk,\n];\n\nlet composeFunction = compose;\n\nif (process.env.NODE_ENV === 'development') {\n  composeFunction = composeWithDevTools;\n  middleware.push(logger);\n}\n\nconst composedEnhancers = composeFunction(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  composedEnhancers\n);\n\n","export * from './components';\nexport * from './utils';\nexport * from './context';\nexport * from './store';\nexport * from './reducers';"],"sourceRoot":""}